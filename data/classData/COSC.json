{
    "COSC069.16": {
        "Sergey Bratus": []
    },
    "COSC123": {
        "James Mahoney": []
    },
    "COSC089.28": {
        "Sarah Masud Preum": []
    },
    "COSC125": {
        "Lorie Loeb": []
    },
    "COSC049.10": {
        "Deeparnab Chakrabarty": [
            "review 1: \"21S with Deeparnab Chakrabarty: Always take a class w Chakrabarty. One of the best professors at Dartmouth, great lectures and very available. The grading was based on attendance of lectures, solving a set number of problems over the term (some of which were challenging ) with the option to do coding assignments or write a research summary as alternatives.\""
        ]
    },
    "COSC036": {
        "Deeparnab Chakrabarty": []
    },
    "COSC287": {
        "Wojciech Jarosz": []
    },
    "COSC269": {
        "Alberto Quattrini Li": []
    },
    "COSC257": {
        "John Brady": []
    },
    "COSC249": {
        "Deeparnab Chakrabarty": [],
        "Hsien-Chih Chang": []
    },
    "COSC240": {
        "Amit Chakrabarti": []
    },
    "COSC236": {
        "Deeparnab Chakrabarty": []
    },
    "COSC278": {
        "Lorenzo Torresani": []
    },
    "COSC277": {
        "Bo Zhu": [],
        "Wojciech Jarosz": []
    },
    "COSC249.08": {
        "Amit Chakrabarti": []
    },
    "COSC249.04": {
        "Prasad Jayanti": []
    },
    "COSC089.27": {
        "Shagufta Mehnaz": [
            "review 1: \"21F with Shagufta Mehnaz: Easy grader. Menhaz is a very understanding professor. Interesting topic. Class was less valuable however because it was on zoom.\""
        ]
    },
    "COSC049.08": {
        "Amit Chakrabarti": []
    },
    "COSC281": {
        "Alberto Quattrini Li": []
    },
    "COSC274": {
        "Sarah Masud Preum": [],
        "Soroush Vosoughi": [],
        "Venkatramanan Subrahmanian": []
    },
    "COSC273": {
        "Wojciech Jarosz": []
    },
    "COSC267": {
        "Temiloluwa Prioleau": [],
        "Xing-Dong Yang": []
    },
    "COSC249.09": {
        "Hsien-Chih Chang": []
    },
    "COSC089.26": {
        "David Kotz": []
    },
    "COSC063.01": {
        "James Mahoney": [
            "review 1: \"24W with James Mahoney: Not a fan of this class, to be honest. I will say that I don't think it's as hard as people say it is, though. The reason for this is because Prof. Mahoney is a designer by trade and thus doesn't actually pay attention to any of the developer processes (he's much more concerned with the designers in CS23, which by the way, is the other course CS63 is co-taught with.) I'm sure there are actually some best practices elsewhere, but you can get away with treating Unity as fake coding (arguably, it already was anyways): just drag the game objects into the scene and then attach some messy <40 line C# files where it's needed. A lot of people do indeed tryhard this class (one final project this term made a full-fledged multiplayer card game in 4 weeks --- actually ridiculous), but I did a lot less than everyone else and still got an A. However, if you actually want to learn AR/VR dev best practices, then Prof. Mahoney is a horrible teacher since he makes you figure it all out by yourself (especially so this term since there is this new \"Meta BuildingBlock\" feature released ~2 months before the start of 24W, and he made us all use it without even bothering to test it first.) TAs are similarly useless and don't understand what's going on in the course, despite the fact that they all took it before. The class organization is also a mess --- no Canvas, everything is stored on one singular Google Doc, assignment submissions are through random Google Drive folders, discussion is through Discord (trying to be hip with the kids for some reason), and you don't know what you were graded individually on any of your assignments, besides a midterm cumulative grade update and a final cumulative grade update that Prof. Mahoney DM's you through Discord halfway through the term and at the end of the term, respectively. (I thought profs being sly with the grades was a fate only reserved for humanities majors, but alas.) Prof. Mahoney is also stubbornly \"particular\" in the way you do things --- the documents have to be named with the exact file name, the videos recordings have to be of the exact length, your proposals have to name this exact feature, etc. It's not hard, but it's really annoying to deal with. Two of the three major assignments are also group projects, and that more or less determines how good + difficult your project will be. And of course, there are only 10 slots available for AR/VR devs, so it's hard to justify bidding for it during initial course selection (though 4 people did end up dropping this term, so perhaps you can still get in if you really want to.) I guess one positive is that we are using the Meta Quest 3; might not be the Apple Vision Pro, but still, working with the newest tech is exciting. But all this to say, only take this course if you are actually interested in taking this course. (And you probably shouldn't be, given how most VR devs go into the video game industry, and how shitty the pay and working conditions are there. If you're wondering why I took this course, well... let's just say I had some ulterior motives.) As for the grade breakdown: 15% for the opening Unity project (first 2 weeks, individual, no headset), 15% for the middle XR project (3 weeks, work with a designer in COSC023, headset), 25% for the final project (4 weeks, teams of varying sizes), 15% in-class assignments, 15% \"portfolio\" (this is basically just you submitting a screenshot of your work at the end of each class, so this is basically just attendance), 15% \"know-how\" (a presentation on some advanced CS topic related to AR/VR.) There's also a required 5 minute final presentation held during finals period. (I think it's more or less tracked for attendance, but still annoying asf since it was held at 8am this term.)\"",
            "review 2: \"22F with James Mahoney: Great and unique class. Hard to get into since there's only 10 spots, so definitely worth taking if you manage to get in. Be aware, however, that this course is a LOT of work. There's major projects every other week and the entire class always goes above and beyond with project submissions, so be ready to put in long hours of work into building your projects. In the end, however, I found the long hours spent in the lab to be worth it, as you'll come out of this class with numerous Unity/AR/VR/Oculus projects to add to your portfolio. In terms of the professor, he is knowledgable, but the class lectures are pretty weirdly structured or not too helpful. A lot of the learning will be self-taught or come from asking the TAs - the lectures felt more like an opportunity to get a short glimpse into different AR/VR topics, rather than a chance to learn deeply about something. Overall, I'd recommend anyone interested to take this course, as long as you aren't taking other work-intensive classes with it.\""
        ]
    },
    "COSC049.09": {
        "Hsien-chih Chang": [
            "review 1: \"20F with Hsien-chih Chang: Amazing class. This has been the best class I've taken at Dartmouth so far, by far. The materials are super interesting, and the problem sets were just ridiculously fun. Hsien was always open to questions. He was an ok lecturer, but this was his first time teaching so he might get better before you take his class. We had one pset every other week, which won't be the best if you leave things for the last minute. Check homework 0 as a reference: https://hcsoso.github.io/teaching/topology-f20/index.html. If you liked the problems in the 0-th pset, you'll probably enjoy the class. I must say, I took it as an undergrad and found it very, very challenging. Some lectures I didn't understand shit. The class is hard on math, CS people beware.\"",
            "review 2: \"20F with Hsien-chih Chang: Extremely challenging class requiring an extensive mathematical background to understand the material. (e.g. Abstract Algebra, Real Analysis, and ideally another Topology/Geometry course). The professor was nice and open to questions, but made frequent mistakes in lecture which did not help. For reference, the previous reviewer and I are both Math undergrads and TAs for CS 30, and I too attended lectures where I didn't understand shit. Would not recommend if you are a straight CS major, or a Math major that is watching the GPA for law/med school. (The problem sets are quite the time sink!) If topology is truly your passion though-like you are planning on going on to a PhD and this is your area of research-you will find this class fruitful. Applications are aplenty.\""
        ]
    },
    "COSC029.05": {
        "Karolina Kawiaka": []
    },
    "COSC023.01": {
        "James Mahoney": [
            "review 1: \"21F with James Mahoney: This was such a GREAT class, you learn SO MUCH but also know the workload is def on the HIGH side! There are different modules - unity, AR, VR and a final project and you get to create something for each module, great if you want to create a portfolio. It is a new class so the structure is probably going to be tweaked each time it is taught but you learn the basics of how to design AR/VR experiences and get to apply and explore it in your own projects. Exploration is encouraged which is nice since there are so many things you can do with the AR/VR programs that class will not cover it all and you end up creating very cool stuff. It is not fun though if you are on a time crunch to finish the projects so make sure to give them enough time. There are weekly projects (bigger alternating with smaller ones each week) that do take a good amount of time to complete so the workload is def high but def worth it if you take it with a lower workload in other classes - i would've LOVED it if I took it with lower workload classes. Great class overall you learn so so much and get to really work on your skills - it's amazing what ppl create in this class.\""
        ]
    },
    "COSC169.09": {
        "Andrew Campbell": []
    },
    "COSC089.25": {
        "Bo Zhu": [
            "review 1: \"20S with Bo Zhu: I really enjoyed this course. The material was interesting, and the coding assignments were very fair in length. Prof. Zhu is a great lecturer, very laidback, and very accommodating. If this course is offered again, I would highly recommend it.\""
        ]
    },
    "COSC089.24": {
        "Venkatramanan Subrahmanian": []
    },
    "COSC089.23": {
        "Soroush Vosoughi": []
    },
    "COSC069.15": {
        "Alberto Quattrini Li": []
    },
    "COSC069.14": {
        "Sebastiaan Joosten": [
            "review 1: \"20W with Sebastiaan Joosten: Joosten is not the best at explaining concepts clearly during class. However, he is a super nice and approachable person and grades really easily. If you go during office hours he's better at explaining your specific questions and will basically give you the answers to the problem sets as well. The class was an interesting situation where I didn't completely understand a lot of the material but still got a good grade.\""
        ]
    },
    "COSC070.01": {
        "Wojciech Jarosz": [
            "review 1: \"23W with Wojciech Jarosz: this guy barely taught the content that was covered on the quizzes and never taught us the coding foundations. Make sure to not take with Jarosz!\"",
            "review 2: \"20S with Wojciech Jarosz: For those not willing to read a more expansive review: this class with Professor Jarosz is wonderful and you would be doing yourself a disservice not taking it. For those willing to read a longer explanation please bear with me. Some context: I took this class during 20S and passed with an ~80%, mainly because I did not submit some of the last assignments due to some external events. I have a fairly strong background in math (nothing crazy though) but liked CS more than math. I feel obligated to write this review after taking Andrew Ng\u2019s Machine Learning course on Coursera (the most popular ML class in the world) and realizing it was utter bullshit compared to Professor Jarosz\u2019s CS 70 class. Just in case you missed that, the world's most popular machine learning course appeared no different than some random turd on the side of the road compared to Jarosz's class. Even while taking the class, I couldn\u2019t help but marvel at the brilliance of the topics being introduced, and Professor Jarosz\u2019s ability to represent even some of the most complex topics in a clear and concise manner. This man is actually a beast. If you are interested in ML, this class will give you a super solid foundation for all the techniques central to ML (cost functions, regression, dimension reduction, and bayesian statistics). I can\u2019t speak to any other professor, but Jarosz was an absolute animal of a teacher and I cannot recommend a class as highly as I do this class. Really, really transformative experience for me. As a side note: professor Jarosz likely barely knows who I am and I feel this highly about the class\u2026 if you really take the time to befriend him your experience will likely be even better.\"",
            "review 3: \"20S with Wojciech Jarosz: Alright class, but I don't think I got as much out of it as some of the other CS courses I've taken. Some of the concepts and the things we programmed were definitely pretty cool, but often, the instructions were unclear and hard to follow, and sometimes misleading. Sometimes, figuring out what was expected/being asked of us was as difficult as the actual concepts themselves, which got pretty annoying. I didn't really take advantage of of office hours, which definitely could have alleviated this issue, but who knows (Piazza was somewhat helpful though). As a prof, Jarosz was alright, he wasn't amazing at explaining things but he wasn't bad either. He seems like a cool guy with some really cool graphics experience though. Overall, an alright class, and maybe I would have been more motivated to learn if it wasn't pass/fail.\"",
            "review 4: \"20S with Wojciech Jarosz: A lot of cool material to learn in this class, no doubt. But the math is quite dense, and might pose a problem during the quizzes(closed book). You will need to really understand the math, even sometimes just flat out memorize the notations to do well on the quizzes. But the material is some of the most interesting I ever learnt, and prof Jarosz knows how to teach.\""
        ],
        "Bo Zhu": [
            "review 1: \"20W with Bo Zhu: Professor Zhu is the goat. Super smart and kind professor who has very reasonable expectations. The workload for his class is very manageable as long as you pay attention during lectures and actually learn the material.\""
        ]
    },
    "COSC700": {
        "Alberto Quattrini Li": [],
        "Sean Smith": []
    },
    "COSC025.02": {
        "Lorie Loeb": []
    },
    "COSC089.21": {
        "Soroush Vosoughi": [
            "review 1: \"23F with Soroush Vosoughi: Great class; actually useful and up-to-date material being taught. Professor Vosoughi is incredibly nice and flexible with late days, and as long as you put in effort for the final project, you will do well in this class. There's a reason why crowds of people show up on the first day of his class to try to get off the waitlist, 10/10 would recommend.\"",
            "review 2: \"21W with Soroush Vosoughi: Probably my favorite class I've taken at Dartmouth, at least the only I've felt compelled to write a review for. Material is genuinely useful, workload isn't bad, assignments are super interesting, and the live-coding lectures worked well in an online format. The final project counts for a lot of your grade but is very open ended and fun. Soroush is awesome.\"",
            "review 3: \"19S with Soroush Vosoughi: Super useful class...perhaps the most up-to-date applied CS class. You will basically use pandas and scikit-learn for everything after taking this.\""
        ]
    },
    "COSC089.22": {
        "James Mahoney": []
    },
    "COSC089.20": {
        "Temiloluwa Prioleau": [
            "review 1: \"22W with Temiloluwa Prioleau: So basically, this class is all about giving presentations on different health issues every week. The teacher doesn't do much talking, she does evaluate our presentations. It's kinda like we're teaching the teacher. We also need to read two papers each week and write reports, work in groups to do coding and other tasks, and eventually write a formal paper and build a group website. There are a lot of different parts to this class, and if one part doesn't go well or team members isn't cool, it can affect grade. Sometimes at the end of the class, we need to fill out a questionnaire(part of attence) about what we learned and submit it on Canvas. You automatically believe that the questionnaire should be completed on the same day, but it is scheduled to close half an hour after the end of the class. Attendence score flys away. Overall, this class is interesting cuz it's about the intersection of data and health. Each week we learn about a new health issue and its application, so if you're interested in the medical field, looking for a job or research in this area, you can definitely learn a lot from this class.\""
        ]
    },
    "COSC069.13": {
        "Alberto Quattrini Li": [
            "review 1: \"22F with Alberto Quattrini Li: Good class and he cares a lot about the topic. ROS documentation is hard to pick up without guidance. Would recommend\""
        ]
    },
    "COSC029.22": {
        "James Mahoney": []
    },
    "COSC025.01": {
        "Lorie Loeb": [
            "review 1: \"23S with Lorie Loeb: Disclaimer - this is not a very artsy class. The class made me very sad at times and I think not quite understanding this before coming in was the main source of my frustration. I LOVE Lorie so much, she is incredible.\"",
            "review 2: \"22S with Lorie Loeb: You really can't go wrong with Lorie's classes. The one thing I admire the most about her is her energy and ability to captivate her audience. I could walk in having fallen asleep during my 2 and become wide awake during the 3A. Natalie, the assistant instructor, is also very friendly, though I would have appreciated less monotone and more confident presentations. The course does require a time commitment, though that's mostly because of your perfectionist personality taking over. You can get by doing a \"decent\" job if you're pressed for time without sacrificing your grade. I honestly got a little sick of Figma towards the end of the class, but it's a pretty cool tool overall. There's a lot of overlap with ENGS 12 in terms of design thinking, though UI/UX just focuses on digital solutions while ENGS 12 is more about physical solutions. Lorie also makes salsa for the class at the end of the term, and that's not something you wanna miss out. Overall would highly recommend, though be prepared if you're taking two intense courses at the same time.\"",
            "review 3: \"21W with Lorie Loeb: I agree with the other review from this term. This class is so much fun, easy to understand, and you honestly don't have to pay too much attention during class, but it is A LOT of work. There are three assignments a week: a notebook due on Monday, a small assignment assigned on Tues and due Thurs, and a bigger assignment assigned Thurs due Tues. Most assignments are random partners/groups. At the end of the term, you have three weeks to design a digital tool that fits within a broad prompt. Through it all, Lorie and Natalie are so nice and accommodating and I highly encourage meeting with them a few times for feedback or to chat.\"",
            "review 4: \"21W with Lorie Loeb: TLDR: Great class for anyone interested in any kind of design, but a lot of work. This class clearly has a lot of effort going into it. Professor Loeb is really passionate about this stuff and she's enlisted the help of lots of other qualified, talented peoples, from Natalie who runs the X-hours, to all of the TAs. As a result, you definitely have the resources to succeed here, and you get out what you put in. Some people go crazy with this stuff because they love design, and others, like me, just put in enough effort to get a decent grade. That amount of effort stacked up to about ~15 hours of work a week, which was fine. However, these assignments are really difficult and thought-provoking: you can't coast through them or half-ass them. There are also some assignments that take a TON of time, and you might end up spending upwards of 8 hours on a single homework. You'll also end up spending upwards of 30 hours on the final project (within a week and a half), so if you're taking classes with similarly involved finals, don't take this class. Luckily, as I said before, there's a lot of resources to help you, so you probably won't bomb an assignment as long as you put the work in. Overall though, I learned a TON from this class. It takes you from user research to UI design to user testing, and instead of giving you the steps you have to take without much reasoning, you really understand the mindset of design in a way that can be applied to places far being websites and apps. I'd recommend this class to anyone within the world of web/app development, HCI, or design in general. It's hard but it's worth it, and you'll have a hard time getting below an A- as long as you show up to class and do the assignments.\"",
            "review 5: \"21W with Lorie Loeb: Lorie and Natalie are wonderful instructors with lots of design experience, and I agree with the two other reviews that they really set you up for success with a ton of resources. This was a fun class and I learned a lot within ten weeks. They use every x-hour until week 9 or so, so there's a lot of course information packed in each class. This amounts to a lot of work during covid times, and it can be a real stressor given how much you're expected to turn in. I'm sure what we were assigned was already adjusted for the pandemic too, but it was still a LOT.\"",
            "review 6: \"20S with Lorie Loeb: Amazing!! One of the best classes I've taken at Dartmouth. Even though it was online this term, both Lorie and Natalie worked so hard to make sure our experience was still wonderful. Every week you have two assignments, an individual one and a group project. The first half of the term is spent learning UX and the second half is spent learning UI. At the end, there's a partner project where you go through all the steps and design your own app. I learned so much about the design process and Figma during this class. This class is an easy A, but it's a class where you get as much as you put in. The assignments do take a while, especially during the middle and end of the term, but can be started pretty last minute if need be. I would recommend this class to anyone and everyone! Before, I did not think of myself as a designer at all, but now I feel so much more confident in my ability to make something that looks nice (or at least decent).\""
        ],
        "Natalie Svoboda": [
            "review 1: \"23F with Natalie Svoboda: Class is well structured and Natalie teaches great, but the TAs often have a poorer understanding of design than you do and they grade very arbitrarily.\"",
            "review 2: \"23F with Natalie Svoboda: Great class overall. Natalie has a crazy amount of experience and her lectures were (mostly) really engaging, which I've found to be a rarity in Human-Centered Design classes which often repeat the same five things again and again and again. There's a tiny bit of that here, but just enough to get the CS/Digital Arts students on the same page without numbing the brains that have already taken ENGS12/21/75. Natalie is also much less concerned with busywork than other classes in the \"\"department,\"\" this class requires consistent effort but is less of a grind than other HCD classes I've taken despite giving me At Least the same amount of knowledge. I only really struggled with carving out time during finals, the first 8 weeks of term were not a \"layup\" but the difficulty/workload is nothing crazy. If you pay attention to lecture content and put in some time and thought into your assignments, there's pretty much no way to do poorly. I'm generally not a \"computer person\" but Figma is quite intuitive to learn, for the most part Natalie does a great job breaking it down so we learn a lot without it feeling overwhelming. MAJOR exception to this is components; this is the last thing she teaches us even though it is an extremely valuable tool for making consistent screens and can shorten the time it takes to make your prototypes work by several orders of magnitude.\"",
            "review 3: \"22X with Natalie Svoboda: Loved this class! Natalie's lectures were always well planned and very clearly explained, activities and projects were interesting and you have a lot of freedom in choosing what to do. I'd say work is manageable if you plan it out well and don't start it the night before! Figma is definitely a very useful skill to know, though towards the end of the term it could get tedious. One thing I would say is that the enjoyability of the final project depends HEAVILY on your group. Although it's \"optional\" to suggest people you want to work with, you NEED to. Everyone else does, so if you don't, you'll end up with the crusty person who will do no work on the project\"",
            "review 4: \"22W with Natalie Svoboda: Great class! Natalie is the best!! So sweet and very knowledgeable. Definitely a good amount of work but manageable if you space it out well. 3 main projects broken down into UI, UX, and a final project that's both UI & UX. Learned how to use Figma which is really helpful!!!\""
        ]
    },
    "COSC098.02": {
        "Tim Tregubov": [
            "review 1: \"19S with Tim Tregubov: Overall, COSC 98 took me about six hours of work per week. Most of COSC 98 consisted of students meeting with their team of 4-5 other students in class and working on developing their website / mobile app / game / etc software projects and then working more on their projects outside of class. Depending on what teammates you choose and what project you choose, you may have to put in more or less work in order to get a good grade. I mistakenly chose teammates who put in a lot of work and we picked a project of building a React Native mobile app which Tim was experienced with and thus may have thought our project wasn\u2019t that technically difficult. I also supported choosing a project using mainly web dev technologies when unlike most of my team members, I had never taken COSC 52 web dev. As a result, I needed to put in a lot of work to get a good grade on the project and on my teammate peer evaluations. For contrast, my friend worked on another team with teammates who did not put in a lot of work and they picked a project using blockchain which Tim was unfamiliar with and thus Tim may have judged their project as difficult. As a result, my friend likely did not have to put in a lot of work to get a good grade in COSC 98. I chose the team members and project because I wanted to use COSC 98 as an opportunity to test a startup idea. While the class may have been a decent opportunity to test such an idea, my choices of team and project required a significant work commitment from me. I failed to put in sufficient work, failing to invest the minimum ten hours per week in the course (as emphasized by Tim), I created issues with my team dynamics and ultimately damaged the course experience for myself. In 19W I took a risk and took ENGS 12 concurrently with COSC 98 which was a ton of work and prevented me from putting in the minimum 10 hours of work in COSC 98. I thought that my teammates likely wouldn\u2019t put that much time into the course and even if my teammates did put >= 10 hours in the course I could just put in extra time in the second term of the course, 19S. Unfortunately, things did not work out the way I had assumed they would. In 19S I did have more time and could have worked the >= 10 hours I needed to per week to get a good final grade in the course. But my teammates were far ahead of me in coding the app and were embittered by my lack of help in the winter and as such were reluctant to help me find tasks to work on in our complex codebase. Even so, I should have just put the ten hours per week of work in anyways even if I did not contribute much to developing our app. At least if put in the minimum ten hours of work I could show my teammates and my Professor that I was putting in an honest effort, which probably would have saved my grade. Instead I kept trying to find major parts of the app development to contribute to, but generally could not find areas to work on to contribute the minimum ten hours of work per week. Overall if you are able to contribute to your project, you can likely learn a lot coding your project for COSC 98. The class has some big negative aspects though. Tim never gives you feedback on where your overall personal grade in the course stands unless you ask for it (I recommend asking for it!). Also on a more minor note, the class has 30 minutes of busy work each week in the form of required submissions of a team reflection and notes on what each team member will work on in the following week.\""
        ],
        "Sebastiaan Joze Joosten": []
    },
    "COSC098.01": {
        "Tim Tregubov": [
            "review 1: \"19W with Tim Tregubov: Overall I thought CS98 part 1 was an alright class. Every year the class becomes less of a layup. Many teams put in a fair amount of hours this term so that Tim Tregubov would give them a good grade. Tim is a decent professor. In this iteration of CS98 (Winter-Spring), Tim had us use the first 4 weeks of the course to research ideas, pitch ideas to the class, and then form teams during week 4. We then spent a week prototyping our UI. Only during week 5 did we start coding. I really liked how we had time to research and design our software projects before we began coding.\""
        ],
        "Sebastiaan Joosten": []
    },
    "COSC089.19": {
        "Alberto Quattrini Li": []
    },
    "COSC089.18": {
        "Bo Zhu": []
    },
    "COSC091": {
        "Thomas Cormen": []
    },
    "COSC021": {
        "James Mahoney": [
            "review 1: \"21X with James Mahoney: I loved this class - although it was on zoom the lectures were engaging and prof mahoney is an amazing prof. You learn so much just by attending lecture and listening to him talk about design. We do analysis exercises at the beginning of every class (not graded) where you practice analyzing a given image and you learn so much just listening to your classmates and the prof critique the design. Lots of interesting concepts, the assignments are fun to do (that ~creative flow~) but they do take up a fair amount of time if you want to do them well like any art/design class. There are weekly assignments so workload is on the medium/high side i'd say but super interesting if you like want to learn about 2D design. You learn and practice basic skills in class through 'sprints' that are led by the prof and get to apply them in your projects outside of class. Loved the class overall and its rlly cool to see what your classmates create since there is so much freedom encouraged.\"",
            "review 2: \"21W with James Mahoney: Wouldn't say this is a lay up purely because the design process is quite long. It is an A median but does take up a decent amount of time with weekly projects. TAs and Prof. Mahoney is super helpful and resources do exist. Would take for art distribution, good median and learn some essential design skills on photoshop.\""
        ]
    },
    "COSC121": {
        "James Mahoney": []
    },
    "COSC181": {
        "Alberto Quattrini Li": [],
        "Devin Balkcom": []
    },
    "COSC169.01": {
        "Xia Zhou": []
    },
    "COSC162": {
        "Sean Smith": []
    },
    "COSC149.09": {
        "Peter Winkler": []
    },
    "COSC069.11": {
        "Xia Zhou": []
    },
    "COSC062": {
        "Sean Smith": [
            "review 1: \"23W with Sean Smith: DON\u2019T TAKE THIS CLASS. I literally regret nothing more than signing up for this. Sean Smith is an abysmal professor, who, through sheer incompetency, managed to make a course on an interesting and ubiquitous topic into the most boring, frustrating, and aggravating class I have ever taken, and with no understanding of cryptography to show for it. The course isn\u2019t conceptually difficult like 30 or 31, nor is it a lot of work like 50 or 52 - it\u2019s just *stupid*. Each unit has a problem set that together is 50% of your grade, and are assigned weekly (except for the week of the midterm, when he assigns 2). These test you on aggravating stupid things like whether you can find and implement random C libraries online, rather than any actual content related to cryptography. The midterm is worth 20% of your grade, and covers a pretty wide range of topics. Thankfully, Sean Smith released a \u201cstudy guide\u201d with a list of concepts that would be on the midterm. Unfortunately, these are not what is actually on the midterm. It\u2019s hard to stress how little the midterm resembled any of the assigned textbook readings, articles, homework sets, or the practice midterm - he tests exclusively on things you had to be at class to know. This would be alright if not for the absolute dismal quality of his lectures. He has yet to explain a concept clear enough for me to not have to spend hours supplementing whatever he is saying with videos or online articles. He is erratic and disorganized, and lacks even the semblance of a logic flow. They are also not recorded. His office hours were equally unhelpful, and the TA\u2019s could not answer even the simplest questions about the homework sets. Overall, the entire course was borderline dysfunctional. His \u201csyllabus\u201d was a Canvas page copied over from a previous Spring term, with incorrect due dates/times, inconsistencies about number of exams, and what content we would need to know for *any* of the exams. Most of the class by week 5 will have dropped it, and those who didn\u2019t only haven\u2019t because they cannot afford to.\""
        ]
    },
    "COSC049.07": {
        "Deeparnab Chakrabarty": [],
        "COSC031: Algorithms": []
    },
    "COSC029.04": {
        "Lorie Loeb & Thalia Wheatley": [
            "review 1: \"20W with Lorie Loeb & Thalia Wheatley: Best class ever. Manageable work, interesting lectures, badass profs, easy grading, and extremely rewarding. Take this class!!!!!\""
        ],
        "Lorie Loeb": [],
        "Thalia Wheatley": []
    },
    "COSC099.02": {
        "Alberto Quattrini Li": [],
        "David Kotz": [],
        "Deeparnab Chakrabarty": [],
        "Prasad Jayanti": [],
        "Soroush Vosoughi": [],
        "Thomas Cormen": [],
        "Xia Zhou": []
    },
    "COSC099.01": {
        "Alberto Quattrini Li": [],
        "David Kotz": [],
        "Deeparnab Chakrabarty": [],
        "Prasad Jayanti": [],
        "Soroush Vosoughi": [],
        "Thomas Cormen": [],
        "Xia Zhou": []
    },
    "COSC072": {
        "Rolando Coto Solano": [
            "review 1: \"23S with Rolando Coto Solano: Yes this course is easy. By the end of the term maybe 10% of the class was showing up. I went to every class but just checked email all class. Rolando is incredibly kind and warm and friendly. The weekly assignments do not take much time. Though, I would recommend starting them early and going to office hours. That would have helped me enormously and probably saved me quite a bit of time. I got an A- in this class (first A- in CS major, got a citation in CS10 and CS30). Lowkey I did not like this class. Yes it is not a lot of time, but I felt like I wasn't learning much from the assignments and kind of had no idea what was going on. Part of that is on me for not paying attention nor going to office hours. However, it still felt like a lot of weekly assignments did not relate to class lectures. Also the final project is a pain in the ass. Same with the essay you have to write on ethics. Those are the reasons I got an A-. I honestly did not really like this class very much. It was probably my least favorite CS class I've taken (maybe tied with CS70 another infamous layup that I think is not actually a good course). TLDR: Picky grades, professor is chill, kind of annoying, not a lot of time\"",
            "review 2: \"22S with Rolando Coto Solano: As the other reviews have already said, Rolando is the sweetest human you will ever meet. It's obvious he cares about the material he's teaching, and more importantly, his students. The lectures were all super interesting and he always gave examples of applications to real-world problems so it never felt like things were too theoretical. The weekly assignments do not take up much time at all, and you get to choose the topic of your final project. This is one of those classes where you get out what you put in. If you do the bare minimum, you will still do well in the class. Taking the time to go to office hours and try the additional exercises that Rolando posts really augmented my experience in the class. Lots of review from LING 1 but it was cool to look at it from a more computational point of view. Highly recommend!\"",
            "review 3: \"22S with Rolando Coto Solano: This class is definitely the course in the CS department with the lightest workload. I spent less than 3 hours a week on assignments except the week we had an ethics paper and final project presentation due. Classes were pretty boring and I stopped going to them and just read the slideshow. He spent a lot of time on examples and trying to make the class answer questions. The assignments don't make you code any of the NLP algorithms, so they are not particularly useful in terms of deeply understanding how the algorithms work. Would recommend this class if you're looking for a CS class with a light course load, but it's not an automatic A - he takes off little points for a lot of things that end up adding up. Also, it's an introductory course to NLP in the sense that it's a survey course, so don't expect to gain a deep understanding of NLP unless you put in a lot of work outside of class.\"",
            "review 4: \"22S with Rolando Coto Solano: Not sure why everyone is hyping up Rolando, he may be a kind person but as a professor he is subpar. First, the coursework is light, but if you are looking for an easy A beware, he will take random points off for things that were never specified to be done in the assignment rubric. This was one of the few courses where I would do everything specified in the rubric, get the correct answer/expected output, and still not be confident that I got full points on my assignment. Second, he will almost never respond to you. It takes him a week minimum to reach back whenever asked about important things like grades or the final project. Third, you never actually learn anything about NLP through the assignments because all of the assignments are so easy that you are just changing 2 or 3 lines, so if you are looking for intellectual stimulation don't take this class. TLDR: if you are looking for a light course load with a guaranteed A-/A, take this course. If you are looking for a guaranteed A, DO NOT take this course. If you want to learn something meaningful, DO NOT take this course. If you want a good professor and not just a \"sweet\" person as he has been described, DO NOT take this course. Overall, I suggest a better alternative would be something like CS 74.\"",
            "review 5: \"22S with Rolando Coto Solano: This is the lightest CS course you'll probably ever take, so save it as a layup for your terms with two other classes. However, as some other reviewers said, you actually need to pay attention to the assignments you turn in (though not necessarily to lectures) because he takes off arbitrary points. They may seem small because they're fractional points, but they are percentage points out of your total grade, so even a half point can make or break. The material is pretty fun if you're in the mood to pay attention (and sometimes silly), but I missed out some of it because I was too preoccupied with my two other courses. The final project can be as easy as you wanna make it, and I'd recommend working on it with a good group of people rather than working alone to split the load. Overall would recommend, though take this class with a grain of salt. You need to try for an A, but otherwise chill and be happy with an A-.\"",
            "review 6: \"21S with Rolando Coto Solano: I almost want to say take this course just for Rolando. I regret not attending office hours or more of the weekly meetings because Rolando is just so freaking sweet. He's one of those people you KNOW is an incredible person after just like one minute of speaking to them. The workload for this course was almost nothing compared to CS1 and CS10--the weekly problems were generally pretty simple and often required minimal actual coding. I also feel that the problems got easier and easier as time went on...maybe I just got used to the kinds of problems he doled out? Some people complained about the lack of actual coding, so Rolando did incorporate more options into the later problems so that people could do more complex coding if they wished. I will say I did pull a hellish all-nighter for the final project, but this can be chalked up to not managing my time properly. All the lectures were pre-recorded, but concepts were generally explained clearly, so that wasn't too bad. Plus, Rolando offered consistent opportunities for synchronous discussion through optional weekly meetings. All in all, this class was fine, though it certainly can be great if you put in good effort.\"",
            "review 7: \"21S with Rolando Coto Solano: Rolando is such a cool and fun person! Definitely one of the most relatable profs I've had (he usually responds to all communication between the hours of 12am and 2am). The class was incredibly low work, with one assignment a week that usually involved just changing some lines in code that was given to you or just running some code. That said, the concepts and topics in the class were really interesting, and so were the assignments. The lectures probably took around 3 hours a week and the assignments took around 3 hours per week as well. The final project was really anything you were interested in and then a 2-4 page writeup. Overall, would highly recommend this class. Probably one of the easiest classes in the department, but also incredibly interesting as well. If you've taken LING 1 or COSC 74, a lot of the material might be review.\""
        ],
        "Kenneth Lai": [
            "review 1: \"24W with Kenneth Lai: MOST DISAPPOINTING CS CLASS OF ALL TIME. [Prof]: 4/10, yes he's not a bad/indecent guy but 1) he doesn't teach effectively 2) he lost focus of the supposed main focus of the class - computational linguistics - and 50%+ of the class felt like CS74. His quizzes are also insanely hard and he doesn't give out practice problems. [Assignments]: some assignments are really interesting but others are extremely underwhelming (especially the machine-learning heavy ones, where he just scaffolds 90% of the code and had us fill in a couple lines). Didn't learn anything interesting at all. Came to this class wanting to learn more about comp ling and ended up extremely disappointed. As a CS major with minimum linguistics background, he also didn't explain a lot of the ling concepts clear enough and I struggled immensely (probably should have taken Ling1 somehow before this class) [TAs]: not the most helpful group of TAs I've seen so far, and one or two of them grades unnecessarily harshly. To their credit though - I think they did try their best to help but since the prof didn't give them enough materials (given some of the assignments are new) I guess what they could do was extremely limited. This class was so underwhelming that on the last day of the class, when the prof was asking for feedback, more than 90% of the comments are places where this class fell under the cracks (or negative comments), and the most positive comment was \"the guest lectures were great\". If you are planning to this class, PLEASE TAKE IT WITH COTO SOLANO and save all the troubles and mental breakdowns.\"",
            "review 2: \"24W with Kenneth Lai: This class is a terrible experience if you come into it expecting it to be a layup. The instructor, Kenneth, was a PhD student who was clearly passionate about the course material and tried to change up some things beyond the typical material that Rolando covers. Despite his passion and friendliness, however, he was not an engaging lecturer in any means (classroom environment was always silent/dead) and all the extra changes that he made ended up worsening the experience rather than enhance it. For instance, a lot of his assignments were not really interesting and mainly just implementing ML algorithms, many of which were already covered in 74. His two quizzes (which he claimed would be easy if you just listen in class) were also ridiculous in length and pretty difficult (implementing iterations of algorithms by hand, calculating probabilities by hand, etc.). Even if it wasn't worth too much of our grade, it definitely should have been shorter, easier, or just called a midterm(s). Medians on these quizzes were around the 70-80s and he initially sounded hesitant to give a curve LOL. Although I got very high scores on both quizzes, I had to spend long hours studying for them (basically treated it like a midterm) and studied by writing practice problems of my own since none were ever provided. Also, the overall grading (from both Kenneth and the TAs) was unnecessarily picky (also very slow timeline for getting grades back) and the course staff were very reluctant in giving back points even if you explained your reasoning to them. There were non-stop assignments every week (coding assignment, final project proposals or drafts, discussion posts, 1000 word essay, etc.), most of which just felt like unnecessary busy work that didn't contribute to my overall understanding of the material. I didn't really come out of this class having learned anything about computational linguistics that I didn't know already. Although this class still ended up being an A median, I would never call it a layup as it may have used to be in past offerings.\""
        ],
        "Natalie Schrimpf": [],
        "LING028: Computational Linguistics": [],
        "COGS050.06: Computational Psych of Language": []
    },
    "COSC176": {
        "Devin Balkcom": [],
        "Venkatramanan Subrahmanian": []
    },
    "COSC089.02": {
        "Gevorg Grigoryan": []
    },
    "COSC089.17": {
        "Inas Khayal": []
    },
    "COSC127": {
        "James Mahoney": [],
        "Lorie Loeb": []
    },
    "COSC089.16": {
        "Lorenzo Torresani": []
    },
    "COSC049.06": {
        "Deeparnab Chakrabarty": []
    },
    "COSC049.05": {
        "Thomas Cormen": []
    },
    "COSC200": {
        "David Kotz": [],
        "Devin Balkcom": [],
        "Gevorg Grigoryan": [],
        "Venkatramanan Subrahmanian": []
    },
    "COSC167": {
        "Xing-Dong Yang": []
    },
    "COSC124": {
        "Patricia Hannaway": []
    },
    "COSC122": {
        "James Mahoney": []
    },
    "COSC049.03": {
        "Amit Chakrabarti": []
    },
    "COSC089.14": {
        "Xing-Dong Yang": []
    },
    "COSC011": {
        "Lorenzo Torresani": [
            "review 1: \"19S with Lorenzo Torresani: Torresani was one of the two worst professors I've had at Dartmouth. There is no textbook, a single practice problem for every complicated concept covered in the class, and no recordings of lectures, meaning the singular way to learn is to get the concept perfectly in class or attend office hours. In class, he is often confusing and difficult to understand, and frequently makes mistakes that have to be corrected by the students. The class is graded based on short and long assignments and quizzes. The short and long assignments were graded fairly. However, the quizzes were sometimes extremely difficult simply because we had barely any practice with any of the concepts, especially the final, which numerous people got below a 60% on. Additionally, the class is not curved. Given that it's no longer a prereq for the major/minor, there's literally no reason to take this class. Matlab is a terrible and pretty useless language, Torresani is a garbage professor, and it's just not worth your time.\"",
            "review 2: \"19S with Lorenzo Torresani: The structure of the class was so poor -- the lectures were theoretical, problem sets were in Matlab that had nothing to do with exams, and exams were applied, yet we only got 1-2 practice problems per exam. There isn't any textbook, and it's difficult to find practice problems online. When a student asked Prof. Torresani if he could give us more practice problems, he said that reviewing the lecture slides and doing the one practice problem for our last exam would be enough. Also, I had a really hard time piecing different concepts in the class together. I think that Prof. Torresani could have done a better job teaching the overall big picture. We were always tested on something we had never seen on the exams because the exams were \"applied,\" and it was almost as if we were expected to know linear algebra walking into the class though most of us did not. He also didn't give us our old exams back. It was always unclear how he would grade us (curve or no curve? curve on only exams?)... I did appreciate how he reviewed previous topics before jumping into new ones, but I didn't appreciate how he used a bunch of different mathematical notations (super not helpful). Overall, the topics are interesting but perhaps we could have learned more and better with a different professor.\"",
            "review 3: \"19S with Lorenzo Torresani: Torresani is actually a good lecturer. He really tries to explain the concepts clearly and thoroughly. Unfortunately, that's the only good thing about the class. The lectures were purely theory, whereas the homework was usually in matlab. It was a huge leap from knowing the theory to having to implement it in code, especially for people like me who learn more by doing practice problems. The quizzes (four of them, no final) were applied problems written by hand. Neither the quizzes, nor the lectures, nor the homework prepared you for the others. There was no actual matlab tutorial, so a lot of the homework was just googling how to work with matlab unless you had prior experience. Even if you did, the homework did nothing to help you learn the material, understand/master the concepts, or prepare you for the quizzes (Again, particularly difficult if you learn by practice). The final medians on the quizzes were 90, 71, 67, and 52 respectively (The first quiz was just knowing vectors in a normal xy plane and solving system of linear equations, stuff you did high school, hence the high median. It was all downhill from there). If half of the people hadn't dropped the class, they would have been lower. Although the concepts and questions were tough, I think the structure of the class is to blame. People in office hours were constantly lost in the class and were struggling to keep up, again, because the lectures didn't help with the assignments, which did jack sh*t to prepare you for the quizzes (which we never got back btw). To be fair, we always had one-two practice questions that were solved by hand, similar to actual quiz a few classes before the actual quiz. Those actually give you a sense of what the quizzes are like, so you're not going in totally blind, but again, it's only one or two questions. This was also only the third time the class was offered, and it was Torresani's first time teaching it. Hopefully they will improve the structure of it in the future.\"",
            "review 4: \"19S with Lorenzo Torresani: The only good thing about the course was the Professor. Torresani is a very skilled lecturer and is very engaged. The structure and format of the class were horrible. The topic selection was a hot mess and nothing was explored in any detail. The class felt like it was a speedy review of a number of topics rather than a study of them. I am pretty sure the Professor though most of us had taken linear algebra before the course when most students had not. Homework was generally fair, however, it had nothing to do with the exams. Not enough practice was offered. There was not an assigned(or recommended book) for the class.\""
        ],
        "Hany Farid": [
            "review 1: \"18S with Hany Farid: AMAZING PROFESSOR, I'm so glad I was able to take this class with Professor Farid before he left, his lectures were very interesting and he made the material easy to understand, the short assignments were relatively easy, the labs took awhile to get sometimes but in comparison to CS10 labs they were much easier, you have 4 quizzes, he drops the lowest quiz grade that's not the final quiz, the first three quizzes were pretty easy, the final quiz was way harder in my opinion than the other three quizzes, the material on the final quiz was harder but the final quiz in general was just harder than problems from previous quizzes\""
        ],
        "Wojciech Jarosz": []
    },
    "COSC029.01": {
        "James Mahoney": []
    },
    "COSC089.13": {
        "Devin Balkcom": []
    },
    "COSC029.03": {
        "Patricia Hannaway": []
    },
    "COSC067": {
        "Lorie Loeb": [
            "review 1: \"23F with Lorie Loeb: This was the first time Professor Loeb taught this class, and I really enjoyed taking it with her! Fair warning - this class is not technically difficult but does require a lot of time for the assignments. Most of the class was project and team-work based, and both the TAs and Professor Loeb were very generous with their time. Professor Loeb is a fair grader and always allows resubmissions of prior work; as long as you put in the effort, you'll do well. Participation is 10% of the grade so this is a class you should show up for. Overall, Professor Loeb is one of the best professors in the CS department and I would recommend this class to anyone interested in HCI.\""
        ],
        "Temiloluwa Prioleau": [
            "review 1: \"23S with Temiloluwa Prioleau: You're probably someone who has never written a layuplist review before and as a senior writing his first layuplist review, I will be the one to tell you that taking this class with Temi is a great idea. It's a decent amount of work but if you have a good group to split the workload with, you will get an A. This class is on that CS74 tier, just make sure you actually go to class.\""
        ],
        "Xing-dong Yang": [
            "review 1: \"20F with Xing-dong Yang: Really cool class!! XD was a great lecturer and made the classes interactive as well by incorporating discussion/participation. He posted all the material on the course page and was always on top of it. I really appreciated his organization since made it less stressful during an already stressful remote term! Not horribly hard workload, and its great if you're interested in design with respect to CS. Honestly felt more like a design class but it was really cool to learn about this as a CS major. In terms of work load, we had 2 individual assignments that were easy-ish and group project broken into 4 parts (but each part required a 8-10 page report SINGLE SPACED and including pictures -- not bad when split among group members though) with a presentation of the project at the end of the course. Each part of the project builds on the previous and you could pick your own topic (XD gave us ideas but as long as we ran our idea by him and the TAs and they okayed it you could choose a topic you were interested in). I think details and making sure even small stuff is well-thought out matters a lot for this class, so don't disregard the details. Definitely not a class you can throw something together at the last minute, because you might need to test stuff or scrap what you're doing and approach your design/project a different way, so make sure to start early and stay on top of it. And make sure your group is one you'll work well with because you'll have to meet and do stuff live/in-person! Overall great class, cool material, TAs seemed like fair graders and XD is a great prof!\""
        ],
        "Xing-Dong Yang": []
    },
    "COSC052": {
        "Tim Tregubov": [
            "review 1: \"23S with Tim Tregubov: Overall great learning experience, but be warned that most of the learning takes place by trying shit out on your own, lectures were not all that helpful and honestly kind of boring. However the skills you learn are super useful and Tim is a really nice person! The finished assignments are really cool and this class will get you a solid background with examples you can build off of later. GET ON THE WAITLIST NOW (at cs52.me) if you want to get in.\"",
            "review 2: \"22S with Tim Tregubov: As someone with limited web dev experience and almost no javascript experience, there was definitely a learning curve. I got through most of the labs by going to office hours, but some of the TAs were not very reliable and canceled office hours last minute. If they're there, however, they are almost always super helpful and will save you time. Sometimes I just got through assignments by mindlessly copying or adapting example code, and that should get you through the labs. Definitely do the \"extra credit\" (that bumps you up from an A- to an A) as some of the tasks are pretty easy. Tbrh I probably need to relearn the material to make my own React website from scratch. A lot of people took this class with CS 25 simultaneously, and I think it's a good combination if you can squeeze the time. The courses complement each other, and you'll become the figma expert for your final project if you take both. The final project really depends on how motivated your team is. One or two freeriders on the team can really break your experience, and you might need to pull a few all-nighters. Overall would recommend, just make sure you get yourself on the waitlist a year in advance. This was one of the most rewarding courses I've taken at Dartmouth and I can see it useful for any software engineer.\"",
            "review 3: \"21S with Tim Tregubov: Amazing class. Very fast-paced and lots of work. I\u2019ve taken 1/10/50 and this class was a lot more work than those. But it\u2019s very fun and rewarding. Start the labs early and go to office hours! Tim is amazing and wants to see you become a better developer. Took up most of my time this term but probably the best class I\u2019ve taken at Dartmouth, and Tim is probably of my favorite prof I\u2019ve had.\"",
            "review 4: \"21S with Tim Tregubov: Great class with the chillest prof. Literally every skill that's actually useful for developers is packed into this single course. Because of this, the course is fast paced and a lot of work. The basic structure of the course is: 1) lectures during class hours for a general overview of the course material, 2) a short assignment to actually try it out (mostly just copy/pasting his example code), 3) and then a lab where you have to apply everything to develop your own, real website. The way grades work in this course is that you get an A- if your lab meets all the requirements (lower if theres bugs/errors), and then an A if you do extra credit...so start EARLY on labs so you can have time for the extra credit. Extra credit is def worth it...not only for the A but also just cause you get to make a cooler site! The last three-ish weeks are for a final group project where your group can create whatever you want (ex: a game, social media platform, meditation app, news/data platforms, etc.). I had to dedicate a lot of hours (10+/wk) for this class but we got to make the coolest websites/apps in this class...so looking back I honestly think it was worth it. Best CS course I've taken at Dartmouth - would highly recommend as long you take it with layups/a lighter course-load.\"",
            "review 5: \"20X with Tim Tregubov: This was a decent class. Tim's lectures were often fairly off topic (but they did have great memes) which made it hard to start the labs without help from TAs. I'm not a DALI person, but I've been very successful in 10/30/50 and I found this course hard. The workload is pretty manageable, but I felt like Tim didn't help us with learning how to debug in React, so anytime I ran into an issue I had to go to a TA. However, the labs are fun and the work is very applicable to what life will be like as a software engineer post graduation, so if you're up for a challenge I would recommend it. Also Tim is a really great person despite of his poor lecturing skills, so if you take 52 definitely go to his office hours and get to know him more!\"",
            "review 6: \"20X with Tim Tregubov: Great class. Definitely very different from 1/10/30/50, so don't feel like you're going to succeed in this if you've taken those already; totally a whole new ball game with the course material. A lot of the learning comes from actually trying and doing the assignments, since the lectures gave more of a general overview than an actual intro into the topic. Tim is super nice and very helpful and active in the slack, so if you have questions, definitely slack him. Also go to office hours on the labs early, because they fill up quickly and it takes a while. Do the extra credit on the labs if you want an A. The final project is a lot of fun, but make sure you try to be with people you would enjoy working with.\"",
            "review 7: \"19S with Tim Tregubov: Great class and a great prof! I highly recommend it. You need to know what you're getting into though, there is a fairly heavy workload, pretty comparable to CS 50. There aren't any midterms or a final, though there are occasional quizzes which aren't too bad if you understand the coursework. The projects are all really fun and you'll feel very accomplished afterwards. There are two group projects as well: a student workshops and a final group project. TL;DR basically a more interesting CS 50\""
        ],
        "Timothy Tregubov": [
            "review 1: \"20S with Timothy Tregubov: Amazing class and I would definitely recommend it to anyone who has taken cs1/10 (even though you only really need cs1). In terms of coursework, this class definitely has a decent amount of work, but the work is super fun and fulfilling. You will constantly be making cool web applications and learning a lot of useful skills along the way. In terms of course load, it is comparable to cs 50 but imo it's actually a little less. In 50 you would constantly be debugging and trying to figure out why seg faults were occurring, but with web dev, I found that debugging was generally easier. The prof is great and is obviously very knowledgeable on the subject, and is very easy to approach. To anyone who thinks that this class is mainly for DALI developers, it's definitely a class for everyone. I am not a DALI student, but I still enjoyed the class and learned a lot. If you get the opportunity to take it, you definitely should.\"",
            "review 2: \"19S with Timothy Tregubov: Web dev was amazing! I am a senior and I think web dev will likely prove to be the most useful course I have taken at Dartmouth if I pursue a career in software engineering. Web dev was a ton of work, but the work was more fun than any other class I have taken at Dartmouth. I found myself entering flow repeatedly on all the labs. The only classes I have taken that required (slightly) more work than web dev were COSC 31 with Prasad Jayanti, COSC 65 with Andrew Campbell, and ENGS 12 with Peter Robbie. Web dev will likely prove very useful to a career in software engineering. The class covered a huge breath of web dev technologies and covered one of the most popular modern web dev tech stacks (React, Redux, Express, Mongoose) in depth. This web dev knowledge is incredibly useful for an aspiring software engineer / CTO. I have done three software engineering internships. During each software engineering internship, I encountered web dev technologies and struggled to learn them (e.g. React - Redux during my internship at a startup). I tried learning them through doing tutorials and reading docs, but progress was slow and tedious. I made far more rapid progress with web dev technologies in this web dev course. The class consists of seven two day short assignments, five week long labs, and a three week final project. In class, Tim gave very useful lectures on web dev best practices and we followed tutorials/presentations on particular web dev technologies by randomly chosen student teams. Tim was a solid Professor - Tim did a great job explaining web dev concepts, web dev best practices, and the tradeoffs between different web dev technologies.\"",
            "review 3: \"18S with Timothy Tregubov: Half of the class is from Dali Lab, so if you are not familiar with web dev, you would have some catching up to do. But the assignments and lecture notes are posted online, so you can see all the labs and short assignments before class starts. Overall, you'll learn a lot. Would recommend it.\""
        ]
    },
    "COSC049.02": {
        "Peter Winkler": [
            "review 1: \"24S with Peter Winkler: Do not take this class if you are not confident with grad-level math. There is an extreme learning curve and it is impossible to catch up if you are taking other relatively work heavy classes. This is not the way to escape from CS 31.\"",
            "review 2: \"22F with Peter Winkler: Good course! Definitely useful and the professor was really nice. It takes some work but overall it is a good one!\""
        ]
    },
    "COSC089.07": {
        "Emily Whiting": []
    },
    "COSC089.05": {
        "Christopher Bailey-Kellogg": []
    },
    "COSC049.01": {
        "Amit Chakrabarti": [],
        "Peter Winkler": [],
        "Prasad Jayanti": []
    },
    "COSC299": {
        "Amit Chakrabarti": [],
        "Lorenzo Torresani": [],
        "Prasad Jayanti": [],
        "Wojciech Jarosz": []
    },
    "COSC298": {
        "Amit Chakrabarti": [],
        "Lorenzo Torresani": [],
        "Prasad Jayanti": [],
        "Wojciech Jarosz": []
    },
    "COSC297": {
        "Amit Chakrabarti": [],
        "Lorenzo Torresani": [],
        "Prasad Jayanti": [],
        "Saeed Hassanpour": [],
        "Shagufta Mehnaz": [],
        "Soroush Vosoughi": [],
        "Wojciech Jarosz": []
    },
    "COSC296": {
        "Amit Chakrabarti": [],
        "Lorenzo Torresani": [],
        "Prasad Jayanti": [],
        "Wojciech Jarosz": []
    },
    "COSC295": {
        "Amit Chakrabarti": [],
        "Lorenzo Torresani": [],
        "Sean Smith": []
    },
    "COSC294": {
        "Amit Chakrabarti": [],
        "Lorenzo Torresani": [],
        "Lorie Loeb": [],
        "Sean Smith": [],
        "Thomas Cormen": []
    },
    "COSC276": {
        "Alberto Quattrini Li": [],
        "Soroush Vosoughi": []
    },
    "COSC258": {
        "Sergey Bratus": [
            "review 1: \"12W with Sergey Bratus: Course: It was great. Leearned a ton about actual OS and got to hack Linux and Solaris internals. Final project was patching the Linux kernel. The patch ended up being 6000+ lines. Great learning experience. Professor: Sergey is an awesome prof, a little mismanaged sometimes but you learn a ton and build a great relationship. Workload: Workload tends to be easy except for the midterm and the final project which are very hands on and technical and take a few all-nighters. If you can manage your time well you will be in great shape. I had to crunch through a lot of stuff for the final project which was mostly my fault for starting a two month project a few days before the deadline\""
        ],
        "Sean Smith": []
    },
    "COSC231": {
        "Prasad Jayanti": []
    },
    "COSC210": {
        "Amit Chakrabarti": [],
        "Gevorg Grigoryan": [],
        "Hany Farid": [],
        "Prasad Jayanti": [],
        "Wojciech Jarosz": []
    },
    "COSC191": {
        "Thomas Cormen": []
    },
    "COSC189": {
        "Alberto Quattrini Li": [],
        "Bo Zhu": [],
        "Charles Palmer": [],
        "Christopher Bailey-Kellogg": [],
        "David Kotz": [],
        "Devin Balkcom": [],
        "Gevorg Grigoryan": [],
        "Inas Khayal": [],
        "Lorenzo Torresani": [],
        "Qiang Liu": [],
        "Sarah Masud Preum": [],
        "Shagufta Mehnaz": [],
        "Soroush Vosoughi": [],
        "Temiloluwa Prioleau": [],
        "Venkatramanan Subrahmanian": [],
        "Wojciech Jarosz": [],
        "Xing-Dong Yang": []
    },
    "COSC187": {
        "Wojciech Jarosz": []
    },
    "COSC186": {
        "Gevorg Grigoryan": []
    },
    "COSC178": {
        "Lorenzo Torresani": []
    },
    "COSC177": {
        "Bo Zhu": [],
        "Wojciech Jarosz": []
    },
    "COSC175": {
        "Christopher Bailey-Kellogg": [],
        "David Jewell": [],
        "Deeptak Verma": []
    },
    "COSC174": {
        "Qiang Liu": [],
        "Soroush Vosoughi": [],
        "Venkatramanan Subrahmanian": []
    },
    "COSC169": {
        "Andrew Campbell": [
            "review 1: \"12W with Andrew Campbell: Course: Mostly reasonable pace. Got a bit heavy at times. Professor: Campbell's a great guy, but his lectures aren't very helpful and he often misunderstands questions. Workload: Good amount of work, but hey, I learned android.\"",
            "review 2: \"12W with Andrew Campbell: Course: Lectures alternated between student presentations of papers (sometimes interesting) and campbell explaining exactly what we need to do to complete a lab (tiresome, unnecessary). Professor: Campbell's a bit of a mess. Workload: For the assignments, he'd give us a PDF containing a screenshot of 95% of the code we needed to write, and we'd spend several hours manually copying that code into Eclipse. Not super fun, and you didn't really have to know what you were doing. Average amount of work, as hours go.\""
        ],
        "Sean Smith": [
            "review 1: \"12W with Sean Smith: Course: The topic matter is just what recently happened in the news in security. You're better off reading the paper yourself. Professor: Don't take this course the professor is terrible. He is completely disorganized and the lectures are useless. Workload: The workload isn't heavy but its impossible to know what is actually required.\""
        ],
        "Alberto Quattrini Li": [],
        "Sebastiaan Joosten": [],
        "Sergey Bratus": [],
        "Xia Zhou": []
    },
    "COSC165": {
        "Andrew Campbell": [],
        "Sergey Bratus": [],
        "Xing-Dong Yang": []
    },
    "COSC149": {
        "Amit Chakrabarti": [],
        "Deeparnab Chakrabarty": [],
        "Peter Winkler": [],
        "Thomas Cormen": []
    },
    "COSC135": {
        "Amit Chakrabarti": []
    },
    "COSC129": {
        "Karolina Kawiaka": [],
        "Lorie Loeb": [],
        "Patricia Hannaway": [],
        "Thalia Wheatley": []
    },
    "COSC099": {
        "Fillia S.": [
            "review 1: \"05W with Fillia S.: Better than a thesis (probably) but still pretty bad. Take the new CS 98 seminar instead. Course was easy, but going to class was a headache.\"",
            "review 2: \"05W with Fillia S.: There's not much to say about this course. Everyone in the dept knows it's bad, but it's easy and only one term. The alternative is a thesis, with the risk of it taking a ton of time and ruining your senior spring. If you have a good topic, I'd recommend the thesis because it'll be a lot more rewarding. Otherwise, take this course. It'll suck but it'll be over soon. Alternatively, there's a new course being created called EPICS that seems like it would be an interesting alternative. It can't be worse than this. Final note: the above comments are entirely with respect to the course as taught by Fillia. A better prof could make a great job with this course.\"",
            "review 3: \"02W with Fillia S.: This class was so misrun it boggled the imagination. There was no syllabus besides a list of lectures, which was basically just a calendar. There was no central theme to the course, or indication as to what we were supposed to be learning. Homeworks were not posted on the web, resulting in mass-confusion for just about every homework assignment. Guest lecturers and Professor Heckman were interesting, but as they didn't fit into any sort of framework, ultimately forgetable. Grading of papers seemed to contradict the comments of the writing assistants, which ultimately led the writing assistants to suggest that we essentially dumb down our papers in order to not be accused of being unclear. I can't even describe the general level of pain that having to be a part of this class imparted on the students involved. Yes, apparently we're all going to get good grades, but who cares. It was a waste of a lot of money and a disgrace to the cs department.\"",
            "review 4: \"02W with Fillia S.: First, the course: this course has very good potential. It's completely different than anything I've had in the CS department, in that it (a) involves critical thinking instead of analytical skills or problem solving, and (b) tries hard to teach CS students how to write a good technical/research paper, and how to present it to an audience. This is good. Second, the professor: Prof. Makedon made this course into an almost complete waste of time. Granted, I learned a lot from the writing assignments, both in terms of the topics, and how to write about them well. But class was _such_ a constantly frustrating experience that the negative far eclipses the positive aspects. Were I to write about what was awful, it might take all day, so I'll just try to make a laundry list: 1- She graded our papers _in_ _class_, while people were giving presentations. That just blew my mind. 2- She constantly changed details of assignments multiple times, seemingly on a whim. 3- She lied to us, e.g. she said, after we turned in a paper, that she had never asked for all the references to be in the draft version. This was completely false, and the entire class called her on it, but she blustered on. 4- Her presentations were full of typos, poorly structured, and she did not present clearly. In contrast, _our_ presentations were expected to be great. (good job leading by example!) There's no way anyone will take this class unless they're a CS major; it's the culminating experience. With that in mind, people really should consider a thesis if Makedon is teaching this class. If it's anyone else, go for it, the class _could_ be awesome, it has the potential. On the upside, all you have to do to get a good grade is to go talk to her about your paper. She's extremely helpful 1-on-1, and very much cares about helping students learn. It's too bad that didn't translate into well-lead classes.\"",
            "review 5: \"02W with Fillia S.: This class has been the worst I've taken at Dartmouth. As the culminating experience in the department, I had hoped the class would be a synthesis of the knowledge we've accumulated from the other classes in the major, something that allows us to take that knowledge a step further. Indeed, the topic of ethical issues in computing is not a bad one - it is important to turn out computer scientists that have not just technical ability, but an understanding of the underlying social issues relating to their field. This class was entirely a waste of all the students time - we learned nothing, and instead were treated like first year students for a term. There are so many complaints I would like to make about the professor that would not fit here, but I will put forth a few of the important ones: -The professor has a marked inability to lecture coherently, and is consistently sidetracked into entirely useless anecdotes. -She treats us like first year students and assumes that as CS majors, we cannot write coherent essays without outside help. -She writes conflicting and incoherent assignments that are so tightly stuctured that they are an exercise in \"writing for an assignment\" as opposed to writing an interesting paper. I felt intellectually insulted throughout the duration of this class, as did much of the class. It is truly a shame that what could have been such a valuable course turned out to be a monotonous waste. I would suggest that any CS major seriously contemplate a senior thesis to avoid this waste of time. As a side note, several of the students are co-writing a letter to the Dean of Faculty re Professor Makedon's incompetence.\"",
            "review 6: \"02W with Fillia S.: Let me get it out of the way quickly - this class is by far the most horrible one I can imagine, and I've had an inordinately high number of bad profs, so I know what I'm talking about. As usual, the class probably wouldn't be that bad: the ORC describes it as discussing current trends and ethical issues. I don't remember a lot of trends - most just ethical issues, but conceivably that would be interesting. Prof. Makedon and her sidekick during 02W, Prof. Carey Heckman, made this class actually quite painful to sit through. And you had to - she took attendance regularly in class and blitzed you if you didn't come. + Prof. Makedon's frequent rants about silly items such as her children and trips to Nat. Sci. Foundation grant meetings eat up time which could be spent supposedly learning something. + Prof. Makedon's lectures, although they appear prepared, are abominably disorganized and pointless. Most of the time we have no idea where she gets her ideas, and much of her data and examples are wrong. The students spend a lot of the time pointing out to her why she's incorrect. I feel I could give an off-the-cuff presentation and get more mental juices flowing. + Prof. Makedon is far more interested with her grants than the class. She brought in a lecture which she presented to the NSF (which is the only thing she ever did which looks like she put some decent time into it) which ever-so-vaguely had something to do with what we were talking about, and talked about it like it was the next natural topic in the course. + Prof. Makedon, since she spends most of her time running NSF errands, seems to abhor/get confused when you blitz her, especially anything with attachments, and she encourages you to send mail to the TAs instead. + Prof. Makedon's requirements for the papers are outlandish. She has some strange desire that you get as many sources for your paper as humanly possible, and cite them all. She grades the papers like she treats us in class - like we're freshmen, although she constantly says we should act like seniors. In fact, this course is double-taught as a freshman seminar, and from what I've heard, it's quite identical. + Prof. Heckman, who may only be assisting this term, is better, but marginally. His lectures are a little more engaging, however when he's not lecturing, he frequently and rudely interrupts everyone to insert his i-am-god two cents worth, and will field no response that he could in fact be mistaken. There are far more issues, but I think this gets my point across well enough. If I were to actually construct a class to be sadistic and teach absolutely nothing, I'm not sure if my mind would be twisted enough to come up with CS99.\"",
            "review 7: \"02W with Fillia S.: This class is perhaps the best possible reason for doing a thesis is Computer Science. If you can cut off your own arm to avoid this class, please do so. You may read this review and speak to your fellow majors and decide, \"It can't be that bad.\" It is. The professor is terrible, with an extremely limited grasp of the course material. I don't know much about philosophy (hence CS major), but if it was all this poorly thought out and inane, I imagine the field would have destroyed itself centauries ago. You are asked to write papers for a professor who has only the vaguest understanding of what good writing is. It is never clear what kind of paper these should be, and every assignment is an excersise in pain as you attempt to figure out what she want you to write. In the end you discover that what she wants is a paper written by an 8th grader. Write \"my thesis is: \" and \"in the first paragraph of this paper I will discuss this.\" If you do not reduce your writing to an inane level of poor writing and obvious structure, she will be totally incapiable of figuring out your thesis, any or your main points, or anything about the structure or arguement of the paper. In the end, she grades the papers on a purely technichal point system that apparently measures nothing but whether you double spaced and put page numbers at the bottom. I was in the smaller section of the class, and I felt that the size only exacerbated these problems, leading me to believe that Makedon herself is responsible for well over 90% of the painful sucking chest wound that is this class. Maybe if this was taught by a humanities professor this would have been a better class. Who are we kidding. If this class had been taught by a rabid pack of monkeys it would been better. At least it would have held my interest. Fear this class.\"",
            "review 8: \"02W with Fillia S.: This class was by far the worst ever taken by me at Dartmouth. It surpasses every \"bad\" course I've ever had and makes them seem wonderful in respect to CS 99. Too many factors to accurately list contributed to the sickeningly horrific class labelled CS99. I will give you a list of the course \"highlights\" should you be determined to take it and hope that you'd think again after reading these: 1) Fillia never gave a coherent lecture all term. The best lectures and discussions in the class were not led by her. They were led by her \"henchman\" (Assitant Professor Carey Heckman who co-taught CS99 in 02W), or by the guest speakers she got to come to class. Her own lectures were a disorganized jumble of \"facts\" that were completely inaccurate and laughably so. 2) Assistant Prof. Heckman was an egocentric teacher who could not let a student get through saying anything without \"playing devil's advocate\" in order to hear himself speak. There were times where he'd interject \"You're wrong!\" into a students commentary, but he was unwilling to support this statemen in any way. He'd just unnescessarily repeat that you were wrong and if you pushed him on it his answer would just be \"well, you are.\" His attitude was demeaning, his puns were bad, and he mocked students while they were giving their presentations. He was so disinterested in the class that when he was not hearing his own voice, he'd sit at the front of the room with his shoes off scratching himself. 3) The papers that we had as assignments were a joke. Granted, the only time I learned anything during the class was when I picked a paper topic on something I'd never dealt with before. In general though, although you might learn from the papers, Professor Makedon would not. She would grade papers during class when she should have been paying attention to a student's presentation. She'd forget the topic the paper was on so you always had to point it out to her in the paper itself. She values phrasing, organization and transitions like we were taught to write in middle school - where you explicitly state \"This paper will discuss...\" She seems to give out grades relative to the number of references cited - and any sources you use have to be explicitly cited - you can't have just used them for background information without taking a specific fact from them. Two hints for writing papers for CS99: Put a reference at the end of most sentences and explicitly restate your thesis at the beginning/end of every paragraph so she doesn't accuse you of going off topic. 4) Don't do the reading - the text is not worth the effort. These are just the beginning of the facts about how the class really is that I can get into. Should you want my advice, this is what it would be - If you can, write a thesis. It might be \"harder\" but you won't come out wanting to curl up in a corner and whimper after all your intelligence has seeped out of your head because you've been listening to pointless and inane blather for 2 hours. And don't think skipping class would help - she takes attendance and is grading you on \"effort\" - not nescessarily actual work.\""
        ],
        "Christopher Bailey-Kellogg": [
            "review 1: \"06W with Christopher Bailey-Kellogg: This was a great combination, because we had to write two papers (one on ethics, one on trends). Then we worked on the community service project with the EPICS group. We had meetings 1x per week, it was interesting, and based on self-motivation. But, Chris was helpful during the meetings.\""
        ],
        "Gevorg Grigoryan": [],
        "Prasad Jayanti": []
    },
    "COSC098": {
        "Christopher Bailey-Kellogg": [
            "review 1: \"07W with Christopher Bailey-Kellogg: EPICS is not a normal Dartmouth class. You meet as a small group, set your own deadlines, and work independently on a term-long project. The projects aren't exactly that interesting. Also, the work-distribution among group members isn't always fair.\""
        ],
        "Emily Whiting": [],
        "Gevorg Grigoryan": [],
        "Timothy Tregubov": [],
        "Tim Tregubov": []
    },
    "COSC097": {
        "Prasad Jayanti": []
    },
    "COSC094": {
        "Alberto Quattrini Li": [],
        "Christopher Bailey-Kellogg": [],
        "David Kotz": [],
        "Deeparnab Chakrabarty": [],
        "Gevorg Grigoryan": [],
        "Hany Farid": [],
        "Prasad Jayanti": [],
        "Soroush Vosoughi": [],
        "Thomas Cormen": [],
        "Xia Zhou": []
    },
    "COSC089.15": {
        "Wojciech Jarosz": []
    },
    "COSC089": {
        "Alberto Quattrini Li": [],
        "Bo Zhu": []
    },
    "COSC089.12": {
        "Qiang Liu": []
    },
    "COSC089.11": {
        "Charles Palmer": [
            "review 1: \"21S with Charles Palmer: This is the closest thing to a true layup I have ever taken at Dartmouth. A must take for anyone in CS. Hardly any work, very cool content, awesome professor who cares a lot about students. 100/10\"",
            "review 2: \"20S with Charles Palmer: Easiest class ever. 100% layup. You can get a high grade without attending ANY lectures. For quizzes, just go thru the slides once and that's enough.\"",
            "review 3: \"19S with Charles Palmer: COSC 89 Watson was the easiest class I have taken at Dartmouth. Palmer was not a good Professor. Palmer\u2019s lectures were dry and his assignments vague. However Palmer was friendly, kind, and an easy grader. The course material was pretty interesting - IBM Watson\u2019s AI tool suite and the business and societal impact of AI tools in general. Every Friday we spent the entire class period discussing the week\u2019s readings from the course book about the business impact of AI technologies, which was often interesting. Watson had two labs and a final and about 10 pages of reading per week from a book on the business and societal impact of AI technologies. The labs took me 5-6 hours, the final project around 10-15 hours, and the weekly readings around forty minutes each. There were also two midterms which I spent four hours studying for each. This workload was less than any other class I have taken at Dartmouth. I ended up getting an A in the class. As a senior CS major, I highly recommend the class as a way to balance your workload and knock out a CS elective easily. However, don\u2019t expect to learn much.\"",
            "review 4: \"18W with Charles Palmer: Echoing the other reviews here. This is a terrible course and I learned almost nothing, but it is incredibly easy - one of the easiest courses I took at Dartmouth. Take it if you want an easy A. Don't take it if you want to learn something.\""
        ]
    },
    "COSC089.09": {
        "Lorenzo Torresani": []
    },
    "COSC089.08": {
        "Xing-Dong Yang": []
    },
    "COSC087": {
        "Wojciech Jarosz": [
            "review 1: \"21F with Wojciech Jarosz: i hated this class with a passion like no other. i cannot even begin to describe the pain this course caused me. if you see this class and say, \"oh, that looks pretty cool. i bet it would be fun\" LITERALLY TURN ALL THE WAY AROUND AND TAKE CS 76 OR 74 OR WHATEVER THE SANE PEOPLE DO INSTEAD. if you have a background or a specialized interest in this type of thing go right ahead i bet you will love it. but seriously. seriously seriously seriously. BEWARE. the amount of times i cried was unmatched. the amount of messages i sent to profs with minimal responses. UNMATCHED. without a specialized interest, this class was pure hell. yeah its cool and whatever but it is not worth it. take your computer and run in the opposite direction for the love of god.\""
        ]
    },
    "COSC086": {
        "Gevorg Grigoryan": []
    },
    "COSC083": {
        "Adithya Pediredla": [
            "review 1: \"24W with Adithya Pediredla: Definitely one of the heaviest CS classes I've taken so far, and you're expected to put at least ~15 hours (sometimes 20+) per week into this class. About 20 people dropped by the end of the term (and we had about 30 left?) . However, the quality of this class is a solid 10/10. If you're super interested in Computer Vision or related field(s), this is an amazing amazing class where you will learn SO MUCH in just 10 weeks. Homework: 4 heavy coding assignments (once every 2 weeks), and 8 take-home math quizzes (best 6 out of 8 is counted towards the final score). Adithya is one of the most amazing lecturers in the department. A lot of his slides are from CMU as well. He's extremely passionate and knowledgeable about CV. His classes are super engaging and he doesn't just read off the slides like a lot of other profs do. Adithya also cares a lot about his students, which is evident when he regularly asks us on how we're doing, and what are some elements he can improve on. He also accommodated some of our requests by extending the deadline on the last few math quizzes, adding 2 extra late days for the coding assignments (we had 8 late days total for 4 assignments), and adding Saturday office hours. Nevertheless, coursework is very heavy and I would definitely not take this with any other hardcore classes such as cs30, cs31, or cs50. Grading: from what I understand, if your code is performing well (almost exactly how the example outputs are), you'll recent full credits for the coding assignment. There are also extra credit questions for every assignment. When he first taught this class last year, the median was an A-. Not 100% sure how grading would look like this year, but I don't think it will be lower than that. Overall, amazing class and wonderful experience.\"",
            "review 2: \"24W with Adithya Pediredla: Pretty hard class, had to go to office hours most weeks to get things done. 4 Programming assignments, 8 quizzes (only 6 quizzes are scored), you get 6 late days but can only use them on programming assignments. Lectures are great, some of them are very confusing but sometimes topics are covered in a few that really could take an entire course to cover, so makes sense. Adithya is very passionate and cares a ton about students and the material - asked for feedback from us multiple times throughout the term and added office hours/added late days accordingly.\""
        ]
    },
    "COSC081": {
        "Alberto Quattrini Li": [
            "review 1: \"23S with Alberto Quattrini Li: Probably one of the most time-intensive CS courses in my major at least. Even more work than CS30, probably on par with CS50, but a lot harder thinking-wise due to lots of the math involved with Robotics (make sure your linear algebra is rock solid before joining this class). A theoretical HW assignment and programming assignment due every 1.5 weeks (he would often give extensions because the whole class was behind, which was nice), and I had to use all 4 late days by the end of the term. The instructions in both his HW and PA's are often ambiguous, meaning you'll often have to reference the slack channel he made for homework help or go to his office hours to really find out what he wanted out of a question. Often spent 15+ hours a week on this class alone. The final project is really just extending the work that you do in your PA's, or merging a few of them together (you choose the topic), so it's not the most difficult, it's kind of just a longer PA. Alberto is a super great guy and prof, and was very understanding of any difficulties any of us faced individually or as a class (as evidenced by his frequent HW/PA extensions), and he would often reach out to us individually if he noticed anything off (i.e. missed lots of class, checking in on our progress or anything else), and would even come in on weekends during tough PA weeks for office hours.\"",
            "review 2: \"23S with Alberto Quattrini Li: Overall rating: 9.5/10. Definitely a ton of work for a 10-week term, but it is very worthwhile as this class really teaches you how to program robots and working with interesting concepts in robotics. Alberto is one of the nicest profs I've ever met, always reachable on Slack and in his office and goes out of his way to help us (e.g. offering extensions to the whole class, coming in during weekends for additional office hours). Massive shoutout to TA Dinithi for being one of the best TAs ever! The only caveat is this class has a TON of work (I spent ~15 hours per week since week 1) so I wouldn't recommend taking this with other hardcore CS class (e.g. 30/31/50). But overall, very happy with how it turned out and would definitely recommend to a friend.\"",
            "review 3: \"23S with Alberto Quattrini Li: Not a layup, and frankly I'm confused on why there are so many positive reviews here. First off, the cutoff for an A in this class is a 97%. That should be an immediate red flag to any reasonable person; I would've never signed up for this class if I was aware of such a policy. True, there are no in-class tests, but a theory problem set and coding programming assignment due every 1.5 weeks is actually very difficult to get done in time. Whole-class extensions quickly became expected, and personally I had to use all four of my late days throughout the term (and one of those late days was extra---initially, it was only three late days.) The assignment instructions were always vague and Professor Li wouldn't provide much clarification when asked, so it was always murky on the minimum baseline to which your assignment needed to be completed to. True, Professor Li is somewhat of a nice person, but if you have no idea where to start on an assignment, good luck---Professor Li will explicitly refuse to provide you with a way to get started. Maybe this differs term by term, but the TAs had no idea on what was going on in the class (even for things as simple as the actual assignments), so good luck getting help from them as well. The TAs also took upwards of a month to get things graded, so if you lose points on one programming assignment, chances are you never got the feedback to correct it on all the other programming assignments as well. And honestly, at the end of the day, coding with robots isn't as cool as you might think it is. Most of it is just dealing with the terrible ROS documentation, and for some reason requires 6 different live terminals (Docker + roscore + rviz + map + static transform + run python file) to even get the robot moving in the first place. You don't even get to work with a real robot until the last three weeks of the course (which is maybe for the better, because getting your programs to work with real world constraints is quite the challenge.) I really would not recommend this class at all, even if you're \"interested in robots\" (trust me, your \"interest\" is probably shallower than you would like to acknowledge.) And no, this negative review isn't solely because I'm salty about my grade; I did in fact end up getting an A in the class (98.14 / 100).\"",
            "review 4: \"23S with Alberto Quattrini Li: Robotics is interesting and Quattrini Li is a good teacher but this course has way too much material for a quarter. There are both hw and programming assignments due most weeks. No time to take a breather. Quattrini Li often gives class-wide extensions based on how the class is progressing on the work. But that eventually cuts into the time allotted for the final project at the end of the course. And the fact that the class as a whole frequently needs extensions indicates that this is definitely not a layup. Only take if you are very interested in robotics or have lots of time. Would not recommend taking 81 in the same term as other time-intensive courses like Algo or OS. Also make sure you are at least decent with linear algebra otherwise you will struggle with the math part.\"",
            "review 5: \"23S with Alberto Quattrini Li: Not a layup as the assignments can take quit a bit of time, but also not too difficult to get a decent grade in comparison to other courses in the CS department. I started assignments on the due date and would end up having to dedicate the entire day to complete it - but honestly most of the time is spent trying to understand what he's asking for because the instructors are not clear. There's 4 extensions you can use, and on top of that, Professor Li also gave a ton of extensions throughout the term since no one had started the assignments on time. Final group project also wasn't too bad - 50% of the project grade comes from simple progress reports which people will get full credit on. For the actual implementation, you just have to combine former assignments together and write a 5 page report that makes it seem like you did something novel. Some groups will try too hard and do some crazy things, but just save a lot of time and get a similar grade by doing something simple that functions properly and writing a detailed/nice report. Professor Li in general is also super friendly and chill, and will reach out to students on slack (to the class, individually, to groups, etc.) to make sure everyone is doing okay. Honestly, this class can be a pain to get through, but would recommend if you need a CS class + have a solid group of people you know in the class to discuss assignment questions with + have a mild interest in robotics.\"",
            "review 6: \"21F with Alberto Quattrini Li: Not a layup. Li is a great professor. Always extends homework deadlines if people ask and relatively easy on grading. Coding on the robots can be exhausting however and can be a time intensive course.\"",
            "review 7: \"20F with Alberto Quattrini Li: Its alright. Not a layup because understanding Li's explanations was difficult but the assignments are easy and prof is pretty lenient on grading. Try out with a few classes first.\""
        ],
        "Devin Balkcom": [
            "review 1: \"09W with Devin Balkcom: This review is a test\"",
            "review 2: \"06S with Devin Balkcom: I'm pretty happy overall with the way this class turned out. Most of the time we had weekly group labs in which we wrote code in Java to make these mobile robots do various things (culminating with racing in mazes at the end of the term). The code you wrote was never actually looked at, we just did demos with the robots instead - depending on who you are that may either be a good thing or a bad thing. In lecture we learned basics about theoretical robotics, which included a bunch of math but also some AI (searching type stuff). The math wasn't terrible - elementary linear algebra, some simple multivariable calc (Jacobians), and some geometry. If you're really not a math/physics person then this class is probably not for you though. We had two \"quizzes\" which were more like exams but didn't count as much as midterms in other classes count. At the end we read 6 well known published robotics papers, presented one of papers as a group, and then implemented something from the paper we presented. The papers were difficult, but gave a sense of the type of research that's out there.\"",
            "review 3: \"06S with Devin Balkcom: this class was just excellent, i learned a ton about both robotics and computer science. i had only taken cs 5 before taking this class (i'm an engineering major) but it was no problem, other than that i took cs 5 so long ago that we used the old version of java and the old IDE. the robot labs were really cool, and the final assignment where you read all the papers was awesome too. this is one of my favorite courses at dartmouth, and prof. balkcom is awesome too\"",
            "review 4: \"06S with Devin Balkcom: No work feedback. Not once did Prof Balkcom tell any of the students how they were doing on the labs. When students were demonstrating the labs, Prof Balkcom barely took any notes. Since the labs made up a large portion of the grade, it felt that grading was incredibly subjective. Not much content. We did search algorithms over a couple of lectures. The same amount of material (depth-first-search, and breadth-first-search) is covered in one algorithms lecture. The little content we did cover was poorly explained. Prof Balkcom put his arm in a crooked position and asked \u00e2\u20ac\u0153What is the Jacobian of my arm?\u00e2\u20ac\u009d. This became a running joke of the class. Balkcom would ramble on about a concept until a handfull of students understood. Then it was time to move on. Many of the students learned Jacobians from the students who had already taken linear algebra. No outside sources to help students learn the material. When students had difficulty with some concepts (Jacobians for instance), Prof Balkcom made no attempt to direct them to outside resources such as books on reserve or online articles. Towards the end of class, Prof Balkcom got so lazy that he even stopped making PDF handouts explaining the lab objectives. Instead, he would send out a hastily written email which would result in the need for several more clarifying blitzes. This class was a lousy joke. Almost everyone in the class got an A.\""
        ]
    },
    "COSC078": {
        "Lorenzo Torresani": [
            "review 1: \"21W with Lorenzo Torresani: Great class, though not easy and problems sets can be competitive, as you are graded based on how well the neural networks you build perform relative to the rest of the class. You learn so much though about how neural networks work and how they have been innovated in the past 10 years. Easily the best CS class you could take if you're interested in AI, and it'll give you the background to go into any deep learning research. Torresani is really impressive and a good lecturer. It was four psets and two exams, the first and last psets aren't bad but the middle two took a lot of effort/time.\"",
            "review 2: \"20W with Lorenzo Torresani: Overall really enjoyed this class. The homeworks and lecture slides are well-made and Torresani is a great lecturer. And the course material is highly relevant to research being done today. You get to learn the mathematics behind deep models, but the explanations become more hand-waving after the feed-forward neural network lectures. There are 4 homeworks (basic neural net, CNN, FCN, RNN/LSTM) that use PyTorch, a midterm and a final. The homeworks are not too bad but the exams are difficult because there are limited resources for studying (there are no provided practice problems so you'll have to find/make some yourself). TL;DR a superb class for those interested in DL/ML/AI, but not a layup.\"",
            "review 3: \"20W with Lorenzo Torresani: Amazing Professor and terrific class. COSC 74 is a joke and the CS department should be ashamed for not teaching their students anything in that class but 78 is terrific -- largely because of Lorenzo. You learn a lot and implement a lot of Deep Learning models from scratch. Should have a follow up course to reinforce the knowledge. Beware now that Lorenzo is gone though, the CS department has several Professors that lack any rigor whatsoever.\"",
            "review 4: \"19W with Lorenzo Torresani: Takes a lot of time. There are 4 assignments where you more or less implement a regular neural net, then a convolutional neural net, a fully convolutional neural net (for semantic segmentation) and then finally the recurrent net/lstm -- from scratch on Matlab. If you are not familiar with matlab or don't know the basics of NN, you may not want to venture into this. The assignments are like 14 pages each and it involves a lot of study before you can actually get down to working on them. Also, although the initial classes are mathematical, starting CNN, it will be more conceptual. I didn't like the fact that he doesn't go over the maths of RNN or LSTM or CNN. I mean you are given the assignment and you have to go through the maths and implement it on code -- he doesn't go over it in class. It is especially challenging to implement RNN/LSTM without understanding it. Going through the assignment and trying to implement it on code is really really difficult. I hope he switches to python and goes over the mathematics involved. Overall: def not a layup. requires a lot of time and effort.\""
        ]
    },
    "COSC077": {
        "Bo Zhu": [
            "review 1: \"23W with Bo Zhu: Is it a lay up? Yes... I got 100s on everything without watching a single lecture after week 3. Bo is smart and nice but he also spends 2 hours on a lecture that can be summarized in 20 minutes... and damn it is boring, you are essentially translating physical equations like lighting effects into matrix math into C code zzzzzz. To top it off, the C library GLSL doesn't allow for print statements nor does it give you error logs for what went wrong, so half of your coding experience is finding a semicolon you forgot.\"",
            "review 2: \"23W with Bo Zhu: Bo is great. Absolutely love him. The material is neat too. There's a lot of math in this class but most of it is straightforward. The assignments are pretty easy to do well on since he explains almost every step you have to implement in detail. Debugging shaders can be a serious pain though. Final project counts for a lot, so be sure to put a good amount of effort into it but don't stress too much since the grading is lenient as long as you hit all the requirements, plus extra credit isn't too hard to earn. The quizzes weren't too great (at least for me, though the medians were pretty high) but I would've probably done better if I had gone to class beyond week 2, but ultimately they ended up not even hurting my grade because of how much the coding assignments were weighted. Not my favorite CS class, but definitely take it if you're looking for a light workload and easy grading.\"",
            "review 3: \"23W with Bo Zhu: I do think that COSC077 is a layup, but not on the level of a course like COSC 074. The thing is that Bo really isn't that great of a lecturer; his lectures will 100% put you to sleep. So it's up to you to figure out how to implement everything. Yes, all the coding assignments (5*8%+1*6%) are scaffolded (you literally get a starter pack repository with like 80% of everything written for you), but it still takes some time to go through the lecture slides and figure out how to put the remaining 20% together. Note that the coding assignments also all have extra credit if you want to extend your work. The two online Canvas quizzes don't count for that much (8% + 8%), but they're actually pretty tough both difficulty wise and time wise. Then there's some other stuff that's basically participation (Final presentation (3%); Posting on Slack (5%); Reading notes (5%)). The final project (25% - a group project, but you can choose your partners!) is the most difficult part of this course, but it's also potentially the most rewarding. You can make some genuinely cool work like realistic ocean waves, procedural Minecraft-esque terrain generation, etc. But there are four problems if you want to tryhard the final project: First, if you want to actually make a good looking project, you have to spend some serious time looking at material outside of class. Second, it's hard to tell how anything in Bo's starter pack actually works behind the hood, so good luck if you want to change anything there. Third, the grad students in this course are just guarenteed to make something better than your group can. And fourth (and most damning), the median for the final project ended up being 100, so you can almost certainly get by through doing less work. Overall, you get what you want out of this course. If you want to actually learn computer graphics and make some cool visuals, you can. If you just want an A and nothing else, you can also do that too.\"",
            "review 4: \"23W with Bo Zhu: Tbh not a layup. Did I go to a single class, nope. I love Bo Zhu and he is the sweetest guy, but a terrible lecturer and a waste of time. The psets are easy if you do it with friends who are hella smart or know someone who already took it. You will get a 100 on all of them. The 2 quizzes are very difficult. You definitely need a physics background. And GLSL and C++ suck to code in. But if you take it with smart friends or have friends who have taken it, it is kinda a layup.\"",
            "review 5: \"21W with Bo Zhu: Professor Zhu is a sweetheart and a very good prof. He and the TAs were always there on slack and ready to schedule last-minute zoom calls when I didn't understand anything. He's genuinely excited about this area of computer science and is doing a lot of research in it. In terms of difficulty, the actual material is very technical / math heavy, but it's not very hard to get a good grade, as the grade breakdown is pretty much all projects.\"",
            "review 6: \"21W with Bo Zhu: Prof. Zhu is really really nice, and he truly cares about his students. I agree with the comment below that this class is not hard, and not as time-consuming as others in the department. But you will have fun and learn a lot! I definitely recommend taking it with Prof. Zhu.\"",
            "review 7: \"21W with Bo Zhu: If you can take this class with Bo Zhu, I highly recommend doing so. I would honestly say that this course is a layup as far as computer science courses go. There are weekly labs and a couple quizzes, but the weekly labs are pretty straightforward and the quizzes aren't too bad either. Prof. Zhu is also a sweetheart who's great at explaining the fundamental concepts in graphics, so I found the class to be really fun and satisfyingly challenging, especially if you're interested in the application of graphics to digital mediums, like simulations or video games. Grading is very lenient and it's easy to succeed in the class as long as you consistently put in the effort. One of my favorite computer science experiences at Dartmouth.\""
        ],
        "Fabio Pellacini": [
            "review 1: \"09F with Fabio Pellacini: I went in expecting this class to be not too much work, and that was...a mistake. It's not as much work as some cs classes, but it's not an easy class, either. The class has an assignment due each week, and these alternate between programming assignments and written assignments. The written assignments had a lot of math, but didn't take that long. The programming assignments were really interesting, but start early. Because of the type of programming you do (all the output is pictures), it can be tricky to find bugs (especially since many can be small mathematical errors) which leads to a lot of extra hours programming. But the class was incredibly interesting, lectures were helpful and had a lot of fun facts, and I learned a ton from the homework. I would take it again, but would be prepared for a bit of work.\"",
            "review 2: \"08W with Fabio Pellacini: I really loved the material in this course, and found it really rewarding to get a visual representation of what you were coding. The assignments were all very interesting and cool. But the lectures were next to useless and Fabio is a terrible teacher. He is definitely very knowledgeable, and knows a lot of cool stuff, but he forces you to figure everything out on your own (and not in the good way). I'm not opposed to assignments being painful, but I never really had a clue what I was doing and I feel like I couldn't reproduce anything that I did in the course. Other students seemed to find it easy, though, so I guess if you're already a really good coder then you won't have as many problems as I did.\""
        ],
        "Wojciech Jarosz": [
            "review 1: \"17F with Wojciech Jarosz: Terrible, terrible professor. Doesn't know how to lecture and is also kind of a weird dude outside of class. The subject matter of the course was cool and interesting but the course was wasted for me because of Jarosz. He wasn't helpful whenever I went to him outside of class and his grading was god awful as well. Everyone else in class thought the same about him. Do not take this class or any class taught by him.\""
        ]
    },
    "COSC076": {
        "Alberto Quattrini Li": [
            "review 1: \"21F with Alberto Quattrini Li: Dude I don't know who called this a layup but it's just not. A TON of work. Still worth taking but holy hell I was lied to.\"",
            "review 2: \"21F with Alberto Quattrini Li: As mentioned below, this is like a ton of work. Interesting and worthwhile work but a lot of work nonetheless. Don't take with other workload-heavy classes.\"",
            "review 3: \"21F with Alberto Quattrini Li: Yeah, a ton of work, but really interesting. Programming assignments were fun when you finally got them\u2014it's pretty cool to see a computer (that you programmed) beat you in chess or solve a maze. Alberto is such a nice guy, too. He gave us extensions on almost every single assignment, on top of three free late days. On the flip side, it was unfortunately pretty easy to become reliant on this and find yourself cramming. Programming assignments were loosely based on key concepts, while short assignments directly reinforced understanding of the course material. They did get hard as the term progressed, so give yourself time to work through the examples from the lectures before you complete them. That said, lectures could be pretty dry and it was easy to not pay attention. Attendance dropped rapidly a couple weeks into the term. The final paper was kinda brutal, we were told it was gonna be a \"short reflective paper\" which somehow turned into an 8-page research paper on an AI ethics topic. Also, the cutoff for an A was ridiculously high (97%), with each programming assignment worth 10%. I thought they were graded pretty easily, but it was also easy to lose points for really trivial reasons. Overall, this class was a really good learning experience, but more so through completing assignments than through Alberto's lectures.\"",
            "review 4: \"21F with Alberto Quattrini Li: This is absolutely not a layup, but the workload to get an A is more clear-cut than something like CS 30 since it's mainly programming assignments around CS 50 level-difficulty, only in Python. Quattrini Li gave us so many extensions and is a genuinely nice guy who just wants to see students succeed in his class, so don't hesitate to ask him for more time on assignments.\"",
            "review 5: \"20F with Alberto Quattrini Li: Great class, there are weekly labs but they are fun and very doable, very easy to get a high grade in this course and you will also learn a lot. Definitely recommend taking this course with Quattrini Li.\""
        ],
        "Devin Balkcom": [
            "review 1: \"23F with Devin Balkcom: Devin's an interesting guy. If you have a strong grasp of both python and algorithmic design, then you'll excel in this class if it's taught by him. He speaks in very high-level terms, and kind of thinks of things on the fly that are really interesting. I didn't take any notes, but I felt like I walked out of each lecture having learned a lot. There were a total of 7 assignments no exams, no final project/test or anything, just the 7 assignments. For each one he presents some sort of problem that we have to solve. He presents the premise and approach of each project in class the week before the it is due, and for most of them there's a very in-depth explanation of the method in the book. That being said, there is A LOT of code to be written to do well in this class, and it is not to be underestimated. The catch with the no exams thing is that on each assignment if you do everything correctly you get a 20 out of 25 points, and you are left to mostly your own devices to figure out something cool to do to get the other 5. Also each one has a report. Very engineering-oriented, except you have to make up the problem too or something like that. You'll get really comfortable with implementing different graph-search algorithms and if you really engage with the course you'll find yourself applying this thinking elsewhere. Felt like I really stepped up my commenting game too.\"",
            "review 2: \"19W with Devin Balkcom: DO NOT TAKE THIS CLASS: The material in this course is interesting but before taking this class make sure you know the difference between AI and machine learning. Balkcom is a great professor. However, I would highly advise against taking this class. The workload is unreasonable. There are weekly projects that are essentially your whole grade. If you do the required parts of the project well and correctly you can earn 20 out of 25 points. Which corresponds to an A- on some projects and B- on others. In order to get a higher score you must extend the project beyond the assignment with \"creative\" extensions. If an assignment took six hours of work to get 20 points, then each point after that costs anywhere between 1 to 3 hours. Even if you are a good coder the workload feels like too much, I've been coding for four years and excelled in every CS class I've taken. I wanted to learn about the algorithms and have a solid understanding of how they worked but I felt like I only had time to do the projects and never had time to open the textbook and read about the theories behind the algorithms. I wish I could say that the extensions offered a cool opportunity to code creatively but most extensions end up being implementations of some of slightly different algorithm or heuristic and just feels like work for works sake. If I could redo 19W I would NOT have taken this class.\"",
            "review 3: \"19W with Devin Balkcom: This was my favorite class at Dartmouth so far. Balkcom is a great lecturer, and the assignments really help you understand the concepts despite being relatively time-consuming. There are no midterms nor a final, just 7 projects in Python which get increasingly more challenging (especially the robotics one with PRMs and RRTs). For each project, you are asked to do a write-up (you may want to familiarize yourself with Markdown and Pandoc, or just Latex) where you explain certain aspects of the project, add bonus components (which is part of your grade, but you are mostly given hints on what to add) and you also review and mock-grade a peer's solution. The class serves as a great introduction to AI, and you get to polish your Python skills. If you can, take this class with Balkcom.\"",
            "review 4: \"12W with Devin Balkcom: Course: cool assignments, interesting subject matter. would recommend. Professor: balkcom is probably the best CS prof. very clear lectures, very laid back and approachable guy. Workload: Like any CS course, you gotta stay on top of the coding exercises. That said, for me they were sort of a breeze. I'm super comfy with python and with coding in general. i consistently finished the projects a few days ahead of time, but i also had no life that quarter. also, no exams or even any sort of final. just a coding assignment every week. cool stuff.\"",
            "review 5: \"12W with Devin Balkcom: Course: nothing but positive things to say. cool material Professor: balkcom is the man. great lectures. very clear. Workload: reasonable, well-focused, interesting homeworks. well done.\""
        ],
        "Venkatramanan Subrahmanian": [
            "review 1: \"19F with Venkatramanan Subrahmanian: Course material is really easy but the assignments are tough in comparison. Exams were open book and easy; mostly asked the same/similar stuff on the slides.\""
        ],
        "Soroush Vosoughi": []
    },
    "COSC075": {
        "Stephen P.": [
            "review 1: \"04F with Stephen P.: Very interesting. Lots of fundamentals of 3D graphics, yet definately an improvement over the class last year (according to my friends). The assignments either were really short (a couple hours) or really long (10 to 15), but it depended on if it worked right the first time or not.\"",
            "review 2: \"04F with Stephen P.: homeworks were consistently a larger ordeal than anticipated, although I think this would have improved with a larger class. This was by far, the most available professor I've ever encountered at Dartmouth. I have never seen a prof so devoted to working with students and giving them individual attention. This is made even better by the fact that Linder is a pretty cool guy too if you give him a chance.\"",
            "review 3: \"03F with Stephen P.: I think this course will improve greatly next year if Prof. Linder is still around. The material was fairly interesting, a bit more math oriented then I had expected. Overall it took this course a little while to get into a regular pace, but once it did it was great. Ideologically I think this course was great. Prof. Linder's approach was a welcome change from what I've become accustomed to at Dartmouth. The emphasis on being able to implement the large concepts rather than worrying about tiny superficial details was good. That being said it's still a time consuming CS course. But nothing out of the ordinary for a CS major.\""
        ],
        "Christopher Bailey-kellogg": [
            "review 1: \"19F with Christopher Bailey-kellogg: The content was good, it was basically a huge overview of using different machine learning methods to try things with bio. You didn't need any bio background, he explains everything well. The workload was a bit heavier than other classes\""
        ],
        "Fabio Pellacini": [
            "review 1: \"05F with Fabio Pellacini: I think it was a very good overview of computer graphics --- Fabio is extremely knowledgeable and willing to help. The class does move very quickly, however.\""
        ],
        "Lorie Loeb": [
            "review 1: \"02F with Lorie Loeb: instead of being a graphics course, this was really a course in animation. we studied traditional animation as well as computer animation in Maya (3d). prof. loeb kept class interesting, although towards the middle of the term we weren't doing much of anything other than reading SIGGRAPH papers and listening to each others' presentations in class about the papers. the final projects were very open-ended. basically this wasn't at all like the ORC description, but apparently they're creating a new class for this animation course and the graphics course will revert back to its old mathematics roots (if they ever find a prof who'll teach it).\""
        ],
        "Christopher Bailey-Kellogg": [],
        "David Jewell": [],
        "Deeptak Verma": []
    },
    "COSC074": {
        "Soroush Vosoughi": [
            "review 1: \"23W with Soroush Vosoughi: You don't have to go to class, the assignments are easy, you get 6 free late days, very much suggested taking with Soroush.\"",
            "review 2: \"23W with Soroush Vosoughi: This might be a hot take but I honestly found Vosoughi's lectures to be incredibly disorganized and borderline annoying -- half, if not more, of each class was spent talking about the previous content over and over again. It didn't feel like a good use of 2 hours of my time, and most of the class seemed to zone out during these \"reviews.\" The lecture slides were kind of a mess and there was no telling when an actual new and useful concept would be introduced, prompting everyone to wake up from their stupor. However the new material, when actually presented, was interesting and coding assignments were easy. Vosoughi is great at answering questions and giving relevant examples. Layup 100%.\"",
            "review 3: \"23W with Soroush Vosoughi: The lectures were awful but the class is super easy for a CS class. We spent more than half the class doing review, and then he would hold us 5+ minutes over to squeeze in new material before the class ended. I just sat in class and read the slideshow and then did the assignments, which was a better use of time than paying attention. It's a good work environment tbh. Also, he moved the deadline for the final up by a week with very little warning and still made us do the fourth assignment due the same day. TLDR: easy class, but lectures are so boring that he bribes you to come with extra credit\"",
            "review 4: \"23W with Soroush Vosoughi: Yeah pretty much second the other reviews for the class. Lectures super boring, need to be more organized and concise so we actually learn new material each time. Final project took forever to run and not much guidance tbh, some TAs rarely showed up to their own office hours towards the end. But overall assignment were cool and I learn a lot from them.\"",
            "review 5: \"23W with Soroush Vosoughi: Lectures are just as how other reviewers described: maybe 3/4 of it is \"review\" from other lectures, which is great for reinforcing what he's already taught, but then he would try and cram in a new concept at the end, but it fit the pace of the course since there wasn't that much content to begin with. There's only 4 big \"topics\" fit to each of the homeworks, which were pretty easy as long as you didn't have dumb logic errors. Final project was a mess though\u2014very little time to do so because both professors believed the registrar when they said grades were due before finals (they weren't), so we only ended up having maybe a week and a half for this final project that took more time than all the other homeworks combined, which were each given two weeks or so to complete.\"",
            "review 6: \"21S with Soroush Vosoughi: I enjoyed this class. It is a sort of \"hands-off\" approach, where lectures were given and recorded every Tuesday/Thursday, and you'd have things to turn in every two weeks (other than the midterm and the final). It is not 100% a layup in that you never need to pay attention, but I found that I was able to get away with 1 hour of studying per week and around 6 - 8 hours per pset (which meant that I spent around 5 hours per week at most on this class outside of the lecture), which is certainly better than any other higher-level CS or math class you would take here. Midterm and final was open-Internet, which significantly reduced my stress. All in all, Prof Soroush's main goal is having you understand and be able to apply the material. He doesn't enforce B-medians and would rather everyone do well, so he structures his lectures to include significant amounts of review, his TA and personal office hours to be as comprehensive as possible, and his homework and exams to lead you through thinking rigorously so that you are more familiar with the concept after you complete them. I highly recommend this class to any CS or math majors in addition to their other core courses since it seems very applicable and is structured in a way that you can definitely take this class and \"double up\" on other STEM courses without feeling too heavy of a burden.\"",
            "review 7: \"21F with Soroush Vosoughi: Layup-y (only because the mathematical material can get confusing and the exams are kinda difficult). The bonus problems don't actually boost your grade that much. They can only make up for homework points you lose on other assignments. That makes getting an A a little tricky after he raised the cutoff, but very doable if you go to the professor's office hours each week. Vosoughi is also one of the coolest profs I've ever had, and I plan to take him to the Pine this winter. The material is also pretty interesting, and I would definitely recommend this course to any CS person!\"",
            "review 8: \"21F with Soroush Vosoughi: One of the best courses I've taken at Dartmouth. Vosoughi is an excellent lecturer and explains key concepts clearly. A lot more math in this class than the typical CS class but none of it is too hard to grasp. Assignments were 4 labs with many extra credit opportunities. Labs were around CS1 difficulty (some were easier) where you code ML algorithms in Jupyter NB using numpy and some sklearn. Also a midterm and a multiple choice final. Could definitely be taken as a layup but if you put more effort into the course, you can get a lot out of it.\"",
            "review 9: \"21F with Soroush Vosoughi: I had been looking forward to taking this class for a long time, and I'm glad it did not disappoint as I really enjoyed the course! The material was interesting, the workload was definitely manageable, and the professor was engaging and so kind. I would definitely recommend taking this class with Professor Vosoughi since he is a great lecturer and is understanding, approachable, responsive on Piazza, and so nice. He is really accessible outside of class and even held office hours outside of his normal office hours for the midterm and final exams. We were evaluated on 4 coding assignments, a midterm, and a final exam, which were all very doable and fair if you paid attention in lecture and kept up with the course material.\"",
            "review 10: \"21F with Soroush Vosoughi: Soroush is a really great guy. I attended about 5 lectures the entire term and watched the recordings from 21S he would post on Canvas for people who couldn't attend. The homework assignments were about COSC 1 level, could do them in a couple hours, and the midterm/final were both doable. The midterm was open-ended free response and the final was a multiple choice exam on Canvas. Since the midterm was free-response, a lot of people earned points back from explaining their viewpoint and he even curved the exam (which was originally out of 107) and made it out of a 100. Definitely a layup, and can be taken with a four-course term. Breakdown was 50% from assignments and 50% from exams.\"",
            "review 11: \"21F with Soroush Vosoughi: The material was pretty cool and Vosoughi explained things well. We used python / numpy for the assignments and although numpy would sometimes be annoying to debug, it really wasn't so bad. Easiest CS class I've taken at Dartmouth.\"",
            "review 12: \"20S with Soroush Vosoughi: Professor Vosoughi is awesome. He's obviously just really smart -- people would ask him clarifying questions during lecture and his spontaneous answers would use real-world examples that made concepts clear and much more easily comprehensible.\""
        ],
        "Souyoung Jin": [
            "review 1: \"24W with Souyoung Jin: Easy A. Lectures weren't very engaging, but the assignments were cool. Final project takes forever in comparison, but it's not hard, you just have to get lucky pretty much.\"",
            "review 2: \"24W with Souyoung Jin: To sum up this class, I would say this: \"The machines may be learning, but I certainly am not.\" I agree with the other reviews that prof Jin's lectures are extremely confusing and her slides contained sooooo many typos. Those who weren't skipping class were most certainly spacing out because the material is intuitive enough that you can figure it out without listening to the lecture. The homework assignments actually taught me more about the content than the lectures. Definitely a layup but really not worth your time. It's a shame that this class isn't taught better because the content is so foundational is CS now.\"",
            "review 3: \"24W with Souyoung Jin: Unlike the other reviews, I thought Prof Jin was a kind professor who was accessible and very understanding. She gave out numerous extensions, regardless of circumstances, with zero penalty. She helped me last second with debugging a lot, and genuinely wanted students to learn. I think that while her lecturing style does need to be improved, she would go out of her way to try to make sure the material was understood throughout. A lot of students viewed the class as a joke and thus didn\u2019t bother to ask questions, but machine learning is applicable to pretty much everything cs related today. You learn all the methods of machine learning, the different algorithms, and how they worked. I do this was a great class to take and I genuinely do think you learn a lot, if not from her, then definitely from the homework sets and final project.\"",
            "review 4: \"23W with Souyoung Jin: Very interesting and applicable material, assignments reinforced the material well and were rewarding, but Prof Jin is not good at explaining the concepts and connecting them to each other and the bigger picture. She\u2019s very nice- once she met with me very late at night over zoom to help me with a critical problem in my code, but her lectures can be a bit confusing. Sometimes learning the material on my own from the slides was easier than going to class and getting confused by her subpar explanations. Good class overall tho, fairly easy if you have python experience.\"",
            "review 5: \"23W with Souyoung Jin: For now, this class is still the biggest layup in the CS department. The course consists of only four assignments (12.5% * 4) and a final project (50%). Each assignment could be done in roughly 3 hours of work, most of which is spent looking up formulas stated on the lecture slides. And you get an eternity to do the assignments - for context, the first assignment was due roughly four weeks into the term. The same could not be said about the final project (making an Amazon review classifier), though - it was moved up to be due before the reading period (apparently, the profs believed the registrar's lie that grades had to be due before reading period.) In retrospect, the final project wasn't that conceptually hard (most of it was just learning SKLearn syntax), but having less than a week to do it was really stressful. All this being said, please note that Professor Jin sucks. True, she is a new prof. However, her pacing is ridiculously fast---she often went through her slides with 20 minutes left in class, and then we just sat there in class for the remaining 20 minutes. She also comes off as very condescending through Slack and email. In addition, she pushed for many of the new changes to make the class more difficult this term, such as a required baseline cutoff on the final project and the aforementioned change in due date. The last straw was when Professor Jin started cold calling students in class. That's when I dipped out of her section and instead started going to Vosoughi's lectures instead. Yeah, Vosoughi is kind of the opposite of Jin in that he is ridiculously slow and repeats things multiple times over successive lectures. However, Vosoughi does explain things very well when asked one-on-one and he makes sure to meet with each student individually during office hours. Plus, Vosoughi brought pizza to class one time, and you can't really hate a prof that does that. Again, this class is a layup for now, but first, good luck trying to get into this course. It's not just pretty much every CS majors at this school who wants to get into this course---all the applied math and QSS majors also want to get in as well. And second, I do think that the CS department is trying to make this course harder in the future, so good luck trying to get into this course sooner rather than later.\"",
            "review 6: \"23W with Souyoung Jin: Prof Jin's confusing explanations and her unclear, fast-paced teaching style might not be ideal due to her being very new; however, the class materials were so easy that those issues did not really affect my understanding. However, she was genuinely a nice person who really made efforts to make her lessons better. She was really helpful during office hours and was willing to sit and debug my code with me and other students, which I really appreciated. Her 4 assignments were easy, and the final projects were not difficult although running the models might take a lot of time. Regarding the comment someone made about her making the class more difficult: the changes (except for cold-calling) were jointly made by prof Jin and Vosoughi for both classes, so I don't think it's fair to put all the blame on her. Also the cold-calling questions were super easy if you actually paid attention in class, and there was no penalty for a wrong answer. I also think the baseline scores in the final project were actually reasonable, for when you do machine learning you actually do want your models to perform to a certain standard/do its job well.\""
        ],
        "Venkatramanan Subrahmanian": [
            "review 1: \"21W with Venkatramanan Subrahmanian: VS was a good lecturer. Content was an introductory overview of ML techniques. Homework was really easy, class average on those was something like 95%. 50% of the project is your team project, with an additional 10% individual extra credit portion. It was pretty easy to score well on the project, and the class median on that was around a 95 as well.\"",
            "review 2: \"21W with Venkatramanan Subrahmanian: Material is interesting and a good overview of basic ML, and VS is a good lecturer. I found the project a bit frustrating, so I def recommend starting early and getting very comfortable with the libraries (Pandas, Scikit-learn) early on. Homeworks were super easy, and the final exam is always take-home and open note with VS (even in non-online) with several days to work on it, which I really appreciated. There is a lot of set notation, so it may be useful to take CS 30 first? But its def not required. I wish we discussed more of the ethics and implications of ML but I guess that's not really within the purview of this class.\"",
            "review 3: \"21W with Venkatramanan Subrahmanian: VS is great. good lecturer, very understanding of circumstances. all the lectures are recorded so you never have to go to class (I went to a single class all term), I hate math but I found the material pretty interesting. Very reasonable courseload, honestly it's almost light for a CS class. You have 3 psets and 1 project that you complete by week 6ish, pretty manageable. Highly recommend this course if you need the 70s requirement for the major.\"",
            "review 4: \"21W with Venkatramanan Subrahmanian: My opinion of this class is a weighted average of the three other 21W reviews before mine and the 19W review. You can use backprop to approximate the optimal weights for this average, although you won't learn how to do that in this course.\"",
            "review 5: \"21W with Venkatramanan Subrahmanian: Great class. Make sure to get a good group quickly because most of the work is in the group project. The homeworks are super easy, I would normally start the day before and finish quickly (not a CS major or a math major so its very doable). TAs help a lot with the project if you need it and honestly classes are very optional. If you need info for the homeworks or project you can just look at the slides he posts and be able to figure it out. Final was a bit more challenging but weighted so low that you can miss a lot of points and still get an A in the class. I highly recommend, great class and great prof!\"",
            "review 6: \"19W with Venkatramanan Subrahmanian: Don't take this class it sucks. It's not worth it, you won't learn anything. A quick overview: The homework assignments are irrelevant to the lectures and essentially guess and check, the lecture notes are extremely detailed and all online, the tests are all open note. What this means for you is that there is no point in going to class, and you will learn nothing even if you do. This class has nothing to do with how Machine Learning is implemented in real life which is really sad because VS is actually incredibly accomplished and known in his field. Overall, I feel like I wasted a bunch of money to fall asleep in class.\""
        ],
        "Sarah Masud Preum": [
            "review 1: \"23F with Sarah Masud Preum: Great prof and interesting course, definitely learned a lot! That said, you can still get by without doing much work or even learning the materials. Highly recommend as both a very useful course and an easy GPA booster\"",
            "review 2: \"23F with Sarah Masud Preum: The workload was heavily weighted to the second part of the term. The lectures could be boring at times, but she tried to make them engaging. Professor was really nice and happy to help and give tips. I really enjoyed all of the homework assignments. The project was okay, a lot of it was changing a few parameters and running it to try and get your score higher. I think she tried to give Pop Quizzes this year to incentive people to show up but she clearly didn't want to stress people out, so the quizzes just ended up being mini homework assignments that were pretty much automatic hundreds. Having a good or bad partner will probably dictate how much you enjoy the project.\"",
            "review 3: \"23F with Sarah Masud Preum: Prof was super nice and helpful! And she tried her best to make this class engaing. A-medium class and definitely a layup. However, I don't feel like this class teaches ML well, and the CS department should be ashamed of how underwhelming and lousy our machine learning curriculum is.\""
        ],
        "Michael Casey": [
            "review 1: \"24W with Michael Casey: Easy class, lectures are useless and you don't need to go. Final project gets a bit annoying but you will get an A.\"",
            "review 2: \"24W with Michael Casey: Prof Casey creates a welcoming environment in the classroom and makes it easier for shy people to contribute. This is super special and rare in the COSC department. He also was very transparent about expectations surrounding homeworks, quizzes, and the final project. Lectures were engaging and included cool stories about Prof Casey's own work, what the material we were learning looked like at higher levels, and jokes. He was a little disorganized and forgot to post lectures and slides regularly but was chill about it if you reminded him. The pace was sometimes a little slow, sometimes a little fast. I think this speaks to the different baseline knowledge levels people entering the class have. The work was 1 quiz a week, 4 large homeworks, and a large final project. Overall, fair and challenging but not unreasonable. Idk why people hate on Casey, he is one of the nicer and more fun COSC profs I've had. Would def recommend as it is one of the easier and more interesting COSC classes I've taken.\""
        ],
        "Qiang Liu": [
            "review 1: \"17W with Qiang Liu: Course: Out of all the CS courses I've taken, this course had the lightest workload. Apparently the course was much more difficult with Lorenzo Torresani. The class had lectures on Monday and Thursday. In the lectures we would learn the math behind a machine learning algorithm and then in the weekly labs we implemented the formulas into code. The labs were not tricky and generally did not take more than six hours to complete on a given week. There were three in class quizzes and no final. We were given only 40 minutes to complete quiz 2 and quiz 3, which felt rushed. More frustrating was that the quizzes asked questions that we had little to no exposure to on the labs, such as asking us to think critically about and compare the machine learning algorithms we studied. 95% of our labs were just implementing algorithms in Matlab, which involved little problem solving / critical thinking. Professor: Prof. Liu was a decent lecturer. Since the class had a slow pace, Liu was able to stop and answer questions frequently, which made his lectures relatively easy to follow.\"",
            "review 2: \"17F with Qiang Liu: The class was super cool; easily had the most interesting material that I've learned in a course at Dartmouth. Liu is a decent lecturer, but not a great teacher (although he left Dartmouth after I took this class I'm pretty sure). This is basically a math class where homework assignments are in matlab. Liu provides very little resources for learning the material other than just attending lectures, so you either have to attend every lecture or make sure you know someone who does (and takes notes). The homework assignments aren't that hard, and the midterms were pretty reasonable, although the final exam was super hard. Overall, a cool course where even though the professor wasn't amazing, the material he teaches (which he clearly knows well) made the course a good experience overall.\""
        ],
        "Lorenzo Torresani": []
    },
    "COSC073": {
        "Wojciech Jarosz": [
            "review 1: \"20F with Wojciech Jarosz: Dope class. Would recommend taking it. Very cool programming assignments, a lot of time to finish them, and towards the end you have guests coming to class to show their research. One of the best CS classes I've taken so far.\"",
            "review 2: \"20F with Wojciech Jarosz: Very cool class. Wojciech is probably the best lecturer I've had in the CS department, and is really good in the remote format as well. Programming assignments aren't super challenging but cool conceptually. Everyone has to present a foundational or recent paper in computational photography which is a fair amount of work, but also very cool if you're into the topic. Authors came to participate in discussions for almost every single presentation.\""
        ]
    },
    "COSC071": {
        "Simon Shepherd": [
            "review 1: \"23F with Simon Shepherd: This was one of the best classes I have taken at Dartmouth with probably the best professor I have had. It is not an easy course by any means so make sure you have a strong background in MATLAB as well as a strong math background (especially calculus and ODEs - knowledge of PDEs definitely makes things easier towards the end). The material is extremely interesting and useful. The labs are challenging and doing them properly takes time. Exams had low medians but are pretty straightforward if you understand the material properly.\"",
            "review 2: \"08F with Simon Shepherd: Simon is such a great teacher....I would recommend this class to anyone who can fit it in their degree plans. He makes the assignments interesting, and the material is very useful for the future. The prereqs listed for 91 are a bit confusing, since it is an ENGS, COSC, and MATH class. If you are an ENGS major, you definitely need 22 and 23 (for ODEs and PDEs)....and the more comfortable you are with matlab, the better. The last section of the course is about linear algebra, which doesn't come up explicitly in 22/23, but Simon teaches it pretty well. I learned a ton in this class, and the best part is, almost all of the material will be applicable in some way to future classes. I really can't say enough about Simon - don't go through Thayer without taking a class with him!\"",
            "review 3: \"08F with Simon Shepherd: Professor Shepherd is one of the best profs in the engineering department and is a pleasure to learn from and work with. The material is interesting, and though difficult, the class is probably less time consuming than most upper level engs courses if you pay attention in class.\"",
            "review 4: \"07F with Simon Shepherd: this is a hard course and you will be spending a ton of time on the weekly \"labs.\" prof shepherd is great though\"",
            "review 5: \"07F with Simon Shepherd: This is the first math class that I've really enjoyed at Dartmouth - though the class's main department is engineering, I just love being able to say that. I'm an Engineering modified with Math major. Prof. Shepherd loves the material that he teaches, and it shows. I remember a few classes where he walked in, and began by saying, \"I was bored before class, so I was playing around with ___ that we learned yesterday, and figured out this awesome thing about it.\" He's very energetic and also quite funny. He writes everything on the blackboard - he's not a fan of pre-making PowerPoints or anything (which is quite nice) - and explains everything as he goes. The couple times he did use the projector, it was to demonstrate some graph behavior that was too complicated to draw on the board (and I think he may have had a little too much fun writing some of those programs...) He has his lecture notes, but he clearly knows everything and uses the notes just for guidance. If you ask any question in class, he will answer well and informatively. He's also a big fan of trying to get the class at least a little involved - to figure out what the next step is, what might work in some situation, etc. You will not be bored in class - I rarely found time to even look at the clock. Looking back on my around 50 pages of notes for the class, it's hard to believe that we covered that much information. Shepherd teaches so coherently and is so organized that everything just seems to flow together perfectly. I have nothing really negative to say about the class. That said, it is not a class for the faint of heart. If you miss a class, you miss a ton of material and you often miss the entire train of thought that leads up to the lesson the next day. You will use most of your x-hours, and will probably make use of the three TA's and Shepherd's daily office hours. The \"labs\" (not really labs, but called that because these weekly homework assignments are big) take a while to do - don't start them the night before - but are very good at helping you understand the material. They're generally in the form of programming a few numerical methods in MatLab, and then running data through them and analyzing them for error behavior. You don't need any fancy MatLab knowledge (basic loops, arithmetic, and mathematical function manipulation are really all you need), so if you know other languages, just start your first lab a couple days earlier to learn the MatLab syntax. MatLab isn't actually required, but it will make your life easier than just about any other language. This was my culminating experience class, and it definitely goes down amongst my favorite three courses at Dartmouth - the other two being classes from Prof. Christesen and Prof. Rutter in the Classics department.\"",
            "review 6: \"07F with Simon Shepherd: Lots of work that you probably wont understand, but cool to know how to code. Shepherd is a good prof, but very tough exams and homeworks, expects alot of you.\"",
            "review 7: \"06F with Simon Shepherd: This course takes a lot of work, but I thought it was worth it. It was always satisfying to finally get something tricky on the problem sets. Shepherd is a great lecturer--really enthusiastic and makes it easy to take notes.\"",
            "review 8: \"05F with Simon Shepherd: Yes, this course is rumored to be a nightmare of work, but it's not all that tricky. Then again, I came in a math major rather than an ENGS major, and the class is more math-based than your average ENGS course. You have programming assignments due every week... you won't have much of a problem if you go to the recitation sessions and start your assignments two days before they are due rather than one day. Keeping up with what Simon is saying in class takes some effort, but you can do it if you're alert. It also helps if you've taken Math 23 and have a good grasp of Differential Equations. Simon writes excellent exams -- they test to see if you understand the theory behind the numerical methods, rather than just testing to see if you can implement them correctly. And don't worry: there's a curve.\"",
            "review 9: \"04F with Simon Shepherd: While this course might be valuable for people other than engineers, non-engineers would probably get left behind with some of the math and programming. That being said, it's a great class for engineers. Difficult but manageable. One of the harder engineering classes I've taken, but not quite on par with engs 20 or 21. You learn a lot and you'll be much more in command of MATLAB afterwards. Be prepared for a lot of math. If you're just looking for an easy way to fill the numerical analysis requirement for the B.E, you should also look at 103, which is supposed to be much easier, but probably less rewarding.\"",
            "review 10: \"04F with Simon Shepherd: The course materials are very interesting and professor Shepherd gives clear and effective lectures. However, his tests are very difficult. This course requires dedication from students to understand materials.\""
        ],
        "Christopher E.": [
            "review 1: \"01F with Christopher E.: I was most unimpressed with the fact that I had to take this class (or one of the other options for the math requirement in the BE). I was simply not interested in the material and it truly was not relevant to anything I plan to do later in my schooling or life. The only thing I really took out of the class was a refresher on programming (in MATLAB). Prof. Naimie was a decent professor. He didn't make me any more interested in the subject the I had been going into the class, but he did a solid job of presenting the material and was always available to help. The only part of the class I desgreed with were the closed book exams. No \"cheat sheets\" were allowed and this meant memorizing 7 pages of equations and algorithms for the final. So despite the fact that I got excellent grades on my problem sets and the one open book exam, I did very poorly on the closed book exams. What can I say... for the math requirement, if you're not interested in fourier, stat's, or numerical analysis, it's a lesser of evils situation.\""
        ]
    },
    "COSC070": {
        "Bo Zhu": [
            "review 1: \"22S with Bo Zhu: This was a very fair and applicable CS class. The workload was substantial but I never really felt stressed about getting assignments done. Bo moves at a pretty slow pace and his lectures can get boring at times, but some of the assignments are fun and interesting as long as you start early. The TAs are great resources and generally very helpful with assignments so just make sure you block out time to go to office hours. Overall, a very positive experience!\"",
            "review 2: \"22F with Bo Zhu: Bo Zhu is the goat. He is single-handedly the reason I\u2019ve decided to stick with CS. This class requires relatively little work but is super interesting. Bo gives plenty of extensions and wants everyone to do well on every assignment. Go to every office hour you can and the class is a layup. Much love for Bo.\"",
            "review 3: \"22F with Bo Zhu: Definitely the easiest class in this department that I've taken. Anyone with background in linear algebra will find this class a breeze. Material honestly wasn't super helpful at all to what I would need to know as a CS major. Course grade is based on programming assignments (code), theory assignments (written problem sets), quizzes (total 3), and a final coding project (very easy). Everything was either straight from course notes or very trivial - probably explains why the averages for all the assignments were constantly near perfect scores. Would recommend taking with Bo to quickly and easily get a major credit out of the way.\"",
            "review 4: \"22F with Bo Zhu: This class was weird. It was both hard and easy. It should have been easier than it was. Bo Zhu is an awful lecturer. Simply one of the worst I have ever experienced. That does not mean he is a bad man (in fact he is super kind and approachable). He just sucks at teaching. His lectures were all over the place and it did not help that he has a very strong accent which made it hard to understand what he was saying a lot of the time. He dramatically overcomplicates what in reality are very simple concepts. The material is pretty simple, but he makes it harder than it needs to be. The Theory Assignments sometimes took a bit of time and occasionally asked questions that I had no idea how to answer without going to Office Hours. Go to Office Hours. The quizzes were quite easy (open note, take whenever you want for 75 minutes). The programming assignments also weren't too bad if you started them relatively early and went to Office Hours. Overall the course was the easiest CS class I've taken at Dartmouth, but probably also the worst. I learned the least. TLDR: Bo Zhu is a bad lecturer, but the class is pretty easy (but harder than it needs to be given how simple the material is). Overall, an annoying but not too difficult course.\"",
            "review 5: \"22F with Bo Zhu: I would go as far to say that CS70 with Bo Zhu is a layup. Honestly, Bo really isn't that great of a lecturer; his lectures will 100% put you to sleep. But you don't even need to go to class; the content is very easy (we spent like three weeks going over basic matrix multiplication lmao) and everything you need to pass the problem sets and exams is word for word on his released class notes. Not like the assessments are even hard to begin with --- the (Exam 1 / Exam 2 / Exam 3 / Final Project) medians were (99 / 96 / 100 / 100), respectively. That being said, the letter grade cutoff isn't great (I think it's a >97 for an A). But there are plenty of opportunities for extra credit too should you happen to screw up on one of the assessments. And Bo's late day policy is extremely generous, too --- no matter the reason why you're handing in the assignment late for the 27th time this term, he'll give you an extension. 100% take this class with Bo Zhu over Wojciech Jarosz, no matter what it takes. As for grading scheme: 3 online, one-hour Canvas quizzes taking up 24% (only 8% each --- very generous lmao), 7 problem sets taking up 32%, 5% for handing in your class notes, 3 coding assignments taking up 24%, final project 15%. You can also present practice problems at an X-hour once every three weeks for extra credit. There is also extra credit available on the final project. Overall, a very generous assignment weighting. (P.S: disregard any CS70 review that dates before 22W. The department changed the CS70 curriculum starting 22W, and now it's significantly easier.)\"",
            "review 6: \"22F with Bo Zhu: The material in this class is not extremely complicated, and the assignments, while a substantial amount of work, are doable with the textbook notes and TA sessions. While the cutoff for an A is high, if you complete the assignments thoughtfully and study for the online quizzes, you will most likely get an A. That said, proceed with caution. Bo Zhu was easily the worst lecturer that I have had at Dartmouth. He is extremely smart and a very nice guy, but really struggles to maintain consistent trains of thought that students can follow and understand. Class was rarely engaging, as he spends a very long time explaining simple topics, making them more confusing than they need to be. When the material becomes more complicated in the later half of the course, he moves at the same pace he did before. This was incredibly frustrating, and trying to apply to the tricky assignments what Bo taught in class was incredibly difficult. I had to learn most of the linear algebra concepts on Khan academy and stumbled through the last two weeks. I never looked forward to going to class. I think the material can be very interesting, and this is not to say to not take this class, but just know you will most likely be learning a lot of it on your own.\"",
            "review 7: \"22F with Bo Zhu: Bo Zhu is the GOAT and single-handedly makes this class bearable. Not a coding class, I maybe 150 lines of code the whole term outside of the final project. Go to office hours and they explain everything (and lowkey do the coding assignments, 30% of grade for you). If you've taken linalg before you're set for a while. Almost no one was in class by the end of the term. Do the TAs (25% of grade) and practice problems and tests aren't hard. Tests (25% of grade) were also \"take whenever you want in 24-hour period,\" which was nice...Material is boring as hell but poor Bo tries his best to make vectors interesting, bless his heart. Final project (coding, 15%) was easy.\"",
            "review 8: \"21S with Bo Zhu: Regret taking this class with Bo, just not an engaging prof and had labs that were just impossible. I would avoid this class with him - have heard better things about Wojciech\"",
            "review 9: \"21S with Bo Zhu: I LOVE BO ZHU :) Reduced # of quizzes to 3 from 4, and gave plenty and plenty of extra/late days for our difficult problem sets/programming assignments. He adapted Jarosz's curriculum and made it more manageable without the pressure of a B+ median hanging over our heads, and went slowly enough with the material to make sure everyone was on the same page all the time, as much as he could. Our last third of the class was focused on basics of machine learning/neural networks instead of Jarosz's curriculum (SVD I think).\"",
            "review 10: \"21F with Bo Zhu: Bo Zhu is a great great guy. He'll answer all your questions on slack, and spend as much time in office hours explaining concepts to you as you need. With that said, some of his lectures were a bit confusing. Often concepts needed to complete homework questions would be taught the day before the homework deadline. That said, there are ways to survive! Read the textbooks, they're all really helpful, go to office hours and see TAs for the homeworks and programming assignments. I'd shit-talk this class a lot more but Bo Zhu is too nice and he genuinely wishes the best for you\""
        ],
        "Wojciech Jarosz": [
            "review 1: \"23W with Wojciech Jarosz: I can't whole-heartedly agree with the previous reviewers, but I can't disagree, either. I'll try to keep this brief, but Jarosz is not the \"Professor Umbridge\" people make him out to be. In my experience, he was a decent enough lecturer (topics were interesting, he made them feel applicable, if partially just a recapitulation of his career and his own interests) but the assignments rarely matched up with lectures. Assignments in the class are broken into Programming Assignments, Theory Assignments, Reading Assignments, and Quizzes. The programming assignments were most related to lecture and worth doing; the theory assignments were kind of related to lecture, but sometimes you'd get these wild problems that hadn't been broached in other places; reading assignments were trivial, and not rigorously graded; quizzes were mostly related to content, though again contained some randomly difficult questions that hadn't appeared in lecture. If I were to take this class again, I'd take Jarosz's hints as suggestions; working with the material, especially understanding the practice quizzes, truly contributed more than the lectures. None of the on-the-ground examples were shown in class; so if you're looking for worked examples find them yourself. Additionally, Jarosz would often provide partial answers to the practice quizzes: TAs filled in the gaps, but why would he give solutions if he didn't want to give all of the solutions? Not a particularly hard class, but I would be prepared to work outside of lecture.\"",
            "review 2: \"23W with Wojciech Jarosz: Do NOT take this class with Jarosz if you can help it. I felt like I didn't learn much in this class, despite doing way more work than expected. It seems like it might be a layup with Bo, but I would not say the same for Jarosz. My main issues with the class were: assignments did not correspond to in-class material well in timing or content, Jarosz lectured with powerpoint when he should definitely derive/teach a lot of concepts by hand (he was horrible at working things out on the spot), the grading is ridiculous - you need a 97+ for an A!, and finally, this class is great if you want to cheat because the quizzes are posted for 24 hours and he says to \"give yourself 75 minutes to do them\" but as someone who doesn't cheat, I felt powerless while an absurd amount of people would get 100s on the quizzes. I read reviews of Jarosz beforehand, decided to risk it, and ended up regretting it - this was one of my least favorite classes at Dartmouth.\"",
            "review 3: \"22W with Wojciech Jarosz: The review comparing Jarosz to Professor Umbridge was spot on. His lectures rarely, if ever, covered material that was actually helpful for figuring out how to solve the homework assignments (which were divided into theory and programming, and we had one of each due every week). He does not go over how to use numpy and scipy, even though you have to use both for programming assignments, so you are essentially tasked with learning the syntax while also figuring out how to use them to solve problems. With the help of google and friends I did consistently well on theory and programming assignments but even understanding those was not enough to do well on tests because the tests often involved applying concepts in ways that were completely unfamiliar and had not been taught. Jarosz also told us that the final exam would not be cumulative but then proceeded to put cumulative material on it. Finally, I am not a fan of Professor Jarosz's grading policies. He refused to regrade theory assignments (even after admitting that the grade was wrong) unless you could provide proof that the TA who graded it had graded yours differently from another student's (which makes no sense, because if a TA made a conceptual mistake grading one person's problem then odds are good they gave the same incorrect grade across the board). Jarosz then set the overall grade limit for an A to be a 97, because \"CS 1 has a 97 cutoff for an A.\" First, even CS1 does not have a 97 cutoff for an A anymore. Second, I disagree with his opinion that this class is equal in difficulty to the department's introductory programming class. And Jarosz is very firm in his \"no rounding\" policy, so he will not care if you have a 96.99, you will still get an A- (and he may or may not be condescending when you email to ask about his rounding policy).\"",
            "review 4: \"22F with Bo Zhu: I would go as far to say that CS70 with Bo Zhu is a layup. Honestly, Bo really isn't that great of a lecturer; his lectures will 100% put you to sleep. But you don't even need to go to class; the content is very easy (we spent like three weeks going over basic matrix multiplication lmao) and everything you need to pass the problem sets and exams is word for word on his released class notes. Not like the assessments are even hard to begin with --- the (Exam 1 / Exam 2 / Exam 3 / Final Project) medians were (99 / 96 / 100 / 100), respectively. That being said, the letter grade cutoff isn't great (I think it's a >97 for an A). But there are plenty of opportunities for extra credit too should you happen to screw up on one of the assessments. And Bo's late day policy is extremely generous, too --- no matter the reason why you're handing in the assignment late for the 27th time this term, he'll give you an extension. 100% take this class with Bo Zhu over Wojciech Jarosz, no matter what it takes. As for grading scheme: 3 online, one-hour Canvas quizzes taking up 24% (only 8% each --- very generous lmao), 7 problem sets taking up 32%, 5% for handing in your class notes, 3 coding assignments taking up 24%, final project 15%. You can also present practice problems at an X-hour once every three weeks for extra credit. There is also extra credit available on the final project. Overall, a very generous assignment weighting. (P.S: disregard any CS70 review that dates before 22W. The department changed the CS70 curriculum starting 22W, and now it's significantly easier.)\"",
            "review 5: \"21W with Wojciech Jarosz: A quick review for those of you interested: Material: Interesting, it is sort of like an intro to machine learning course. Lectures: Alright, sometimes I had to google to clarify a few things but they were ok. They could be more detailed to clarify more things related to quizzes and hws. Homeworks: I feel like instructions were unclear and misleading, you needed to use Piazza often times to figure out what the prof really wants. If you are somebody who easily gets frustrated, it is tough. It is common that you will have a few points off despite spending a good amount of time communicating with the TAs. The stuff can be pretty frustrating and time consuming although conceptually they are not that hard. It might be helpful to have a study buddy for the homeworks. Quizzes: There are no practice materials available, and the ones offered are joke. Seriously, the practice quizzes are insanely easy and have nothing to do with the actual quiz. I almost bummed out once because of that. The quiz questions are often out of scope despite being conceptually easy. If you have some background in these stuff it shouldn't be hard, but covering yourself by practice quizzes and lectures with no further knowledge will not be enough to get around or above the median. Overall verdict: I liked the material, it is interesting and a nice introduction to these concepts. However, similar to the reviews in former years (look at cs 11 and cs 70.01 reviews), I think the class structure is still flawed and there is a lot of room and need for improvement. If you took Math 22/24, don't bother yourself taking this class. Otherwise, you kinda have to, and it is not that bad. It won't teach you much as a software engineer but provide some other useful skills.\"",
            "review 6: \"21W with Wojciech Jarosz: Easily the worst course I've taken at Dartmouth. CS70 is basically a linear algebra course with some NumPy and random applications tied into it. I consistently put 25+ hours a week into this class and still struggled with the homework and quizzes. Office hours were useless, Jarosz's lectures were only slightly related to the material on the quizzes and assignments. I wouldn't recommend this course to anyone, especially those who aren't very mathematically inclined. Walked away from this class feeling like I learned nothing.\"",
            "review 7: \"21W with Wojciech Jarosz: Jarosz teaches this course like how Umbridge taught the Defense Against the Dark Arts course at Hogwarts. He lectures about a bunch of topics theoretically, and shows you a bunch of cool pictures in his slides. However, during the quizzes, you're somehow expected to apply these concepts that you've learned about theoretically, and do calculations that you've had no practice with before. Also, the coding assignments, while cool, were often one more level of abstraction away from what he taught in class, and office hours were often unhelpful. This means that his lectures were essentially useless for both the quizzes and the coding assignments. I walked away from this course having learned very little about linear algebra (but at least I can use numpy!!). Also, he set the grade cutoff for an A to a 96 with no prior notice. I would not recommend taking this course with him unless you want to put yourself through a ton of pain and suffering for not much learning.\""
        ],
        "Soroush Vosoughi": [
            "review 1: \"23F with Soroush Vosoughi: Pretty easy to do well in, but Soroush was pretty disorganized in this class. He was late to every class (and was even late to the final quiz), would often ramble about different topics, and was scattered in many different aspects of the class. That being said, it was his first time teaching the class and he had to do it pretty last minute. He did communicate the material pretty well, and was a fair and understanding professor. It was a pretty light workload and the median was an A. Overall, good class, and effectively necessary for all majors.\""
        ],
        "Hany Farid": [],
        "Qiang Liu": []
    },
    "COSC069": {
        "Devin Balkcom": [
            "review 1: \"05S with Devin Balkcom: This course is very math and theory intensive. It requires a substantial amount of time outside of class, and the homework assignments generally require you to visit the prof several times for help. The midterm and final are both lengthy take home tests. That said, being able to program a robotic arm for the labs is quite fun.\""
        ],
        "Paul Thompson": [
            "review 1: \"05W with Paul Thompson: Data mining is not glamourous, nor is it interesting. Professor Thompson gives terribly ineffective and boring lectures. Was not very hard though, but I think we might have gotten lucky on the project.\""
        ],
        "Andrew Campbell": []
    },
    "COSC069.09": {
        "Andrew Campbell": [
            "review 1: \"20S with Andrew Campbell: Easy layup. Discuss papers and do basic pandas/sklearn/statsmodel analysis on jupyter notebook. There's a final project involved but you can literally do anything and make it. Take it if you're looking for a layup.\""
        ]
    },
    "COSC065": {
        "Andrew Campbell": [
            "review 1: \"20S with Andrew Campbell: This course gave me the basics to be able to code a functioning app, which is super cool. However, like already mentioned, it takes a lot of coding time. Taking this class virtually meant coding by myself most of the time, and it was frustrating and a little isolating in that respect since it was harder to ask others for help. Prof Campbell is a little disorganized, but overall he's good.\"",
            "review 2: \"20S with Andrew Campbell: Took this course remotely in a different timezone. The course provided me with a good foundation in app development, particularly android programming. The course is entirely assessed on programming/lab assignments with no midterms or finals, so be ready to code over 10-15 hours a week. Professor Campbell is funny and engaging, but very disorganized. The lectures never covered all aspects of the coding assignments, but only scratched the surface, leaving the student to google/check the documentation 90% of the time. This severely impacted the learning experience, which was exacerbated because of the remote setting.\"",
            "review 3: \"16W with Andrew Campbell: In one sentence: This class involved 20 hours of coding per week during the middle four weeks of the term, but if your other classes are easy and you are willing to invest all your effort into this class it will pay you back powerfully. Campbell is a very nice guy and a good professor. He does a great job explaining things. But the amount of work this class requires is shocking. Every week you code part of an app. Most weekly \"labs\" are building part of one big app, MyRuns. You do MyRuns 1 - 6. I think I spent over 30 hours on MyRuns 4 where we added Google Maps to the app. Debugging can be intense and highly frustrating. But the success just feels so good. The sense of accomplishment in writing a full Android app is so high. If you do a good job on your app, which if you put in the time, you most likely will, you will get nearly a 100% on it. The midterm was a bit annoying, but if you don't work with a partner on your coding labs and really try to understand how your building the app (which makes it more fun), I think you will do very well. I did. I also recommend finding a few people to work with, not really as partners, but just to work alongside. You can joke with each other and ask/answer questions. But overall, an extremely time consuming but fun and rewarding class. If you want to learn how to code Android apps, maybe for a startup, look no further than Campbell's CS65: Smartphone Programming\""
        ],
        "Xing-dong Yang": [
            "review 1: \"21W with Xing-dong Yang: This class sucked my soul out of my body. 30+ hours a week of assignments. XD was a really kind and caring prof, but beyond that didn't really teach us much. I ended up google at least 50% of the material for the assignments, which was both frustrating and time-consuming. The class notes and demo files are all really outdated, and many of the classes we learned about were deprecated - a ton of time wasted there. The final group project was a bit more fun because we got to work on something that excited us, but the timeline for that was so stress-inducing. XD literally calls the final presentation \"Demo or Die Day,\" and yet he still says he cares about our mental health. That being said, I definitely learned a lot in this class and I imagine these skills will be extremely useful in the industry, but I suffered the entire time.\"",
            "review 2: \"21W with Xing-dong Yang: Biiiig work load. I feel like I only got through it ok because I had some previous android development experience. Basically every week you're building upon this MyRuns app you're creating to replicate the demo apk he gives you. Last few weeks is a big group project to make a full functioning app. Very crunched timeline. This class will eat up so much of your time. I would not try to take this with any other project heavy classes. Definitely hang out in TA hours because you will run into weird bugs very specific to Android that will take ages to figure out otherwise\"",
            "review 3: \"21F with Xing-dong Yang: Sick class. Learned a lot and the projects were a ton of fun. While it was a lot of work, it was the most gratifying class I've taken thus far, especially surrounding the final project of building your own app.\""
        ],
        "Sergey Bratus": [],
        "Xing-Dong Yang": []
    },
    "COSC063": {
        "Stephen Taylor": []
    },
    "COSC061": {
        "Charles Palmer": [
            "review 1: \"22F with Charles Palmer: Probably the most relevant course for industry jobs. Palmer's not the best lecturer but the material is very important especially on db design and optimizations, normalizations and other techniques... and may be harder to learn properly outside of a class focused on the material. Would recommend taking this course right after 50 to prepare for internships.\"",
            "review 2: \"19W with Charles Palmer: Overall I think databases with Charles Palmer was a somewhat poorly taught class. It also is not much of a layup anymore (apparently it used to be a layup a year ago). There are 7 weekly labs, 5 of which are done with a partner. I thought the pace of this course was somewhat inconsistent. For 7 of the weeks we had an average amount of work of about 5 hours per week. But for labs 2c, 2d and 3b there was 15 hours of work per partner. Palmer made his lectures required for participation and did a relatively poor job lecturing. Much of the lectures were him showing SQL or mongo examples on the projector and were hard to follow. The Professor put online notes that covered all the lecture material but they were somewhat poorly made. The labs and exams were reasonable in difficulty (apart from the three really long labs) and reasonably graded. However the lab specs were very vague and students had to message on Piazza frequently to clarify the vagueness in lab descriptions. I thought the content of the course was useful for an aspiring software engineer, it was just poorly and inefficiently conveyed.\"",
            "review 3: \"17S with Charles Palmer: I came into the class with about 2 months worth of high school SQL knowledge and basically knew everything for the first 4 weeks. I enjoyed the class, Palmer is good.\""
        ],
        "M. Douglas": [
            "review 1: \"02S with M. Douglas: This guy's a genius. He had an instrumental role in the development of various Unix technologies. Unfortunately, this subject matter is very dry, and it only touches briefly on SQL, the only practical aspect of the course. Unfortunately, most of the CS classes at Dartmouth are very theoretical and provide little preparation for the real world. Unless you want to work at Oracle, take another elective.\"",
            "review 2: \"02S with M. Douglas: this is a miserable excuse for a course and the worst part about this course is certainly prof mcilroy. this is an awful awful course. the material of the homeworks is never really covered in class.. or in the book for that matter. prof mcilroy drones on and on focusing on the most tedious aspects of the course which are never followed up on in homeworks and exams. it was in short a waste of my time and knowing what i do now i would NEVER have taken this course.\""
        ],
        "Geeta Chaudhry": [
            "review 1: \"04S with Geeta Chaudhry: I originally took CS33 thinking I would learn to use SQL and understand its implementations. However, the class turned out a lot more theoretical than I expected. Relations are discussed in much more depth than I would have liked. If you like theory and believe that SQL is an easy language to be learned outside of class, however, then this class is not that bad.\""
        ],
        "Timothy Pierson": []
    },
    "COSC060": {
        "David F.": [
            "review 1: \"02S with David F.: This was a tough class, but it was one of the more interesting CS classes I've taken. Exams were difficult, but the projects usually included extra credit which was a good thing. I think that this is a better option than 58 if you're considering which to take for your CS major course requirement.\"",
            "review 2: \"02S with David F.: Unlike some courses in the CS department, this could actually be useful after you graduate! Theory comes in when appropriate, but after this course, you might just feel inspired to code the next Napster. Still, this is an overview course, so expect several sections of the course to cover in excruciating detail plenty of concepts you don't give a shit about. This course uses Java, not C++ which is great. If you have Mac OS X, you have an advantage because of the great Java support, UNIX underpinnings, and nice free development tools, so you don't have to spend all your time in Sudikoff. =)\"",
            "review 3: \"02S with David F.: This is a terrific class. Professor Kotz is excellent and really gets you interested in the material. The homeworks are poor, and are graded poorly too, but the Projects which are the programming components of the course are incredible! Honestly this was the best programming experience I have ever had! Despite the fact that this class is not a lot of work as CS courses go, I do not recommend this class if you are looking for an easy grade. Prof. Kotz does not grade and so grades are poor... but regardless I learned more practical knowledge in this course than any other at Dartmouth.\"",
            "review 4: \"02S with David F.: This course really covered in some detail the theory behind networks and how they work in general with some practical examples and looking at real-world systems (like the internet, for example). Prof Kotz generally gave well-organized lectures with useful aids such as powerpoint when necessary to illustrate a concept. The TAs \u2013 I didn\u2019t use them much, but I gather that they were available and useful for those who did. The written homework was pretty easy and not too time-consuming. Basic coverage of the reading and lectures. The programming projects were very interesting and though the first two weren\u2019t that lengthy, the last one (overlay peer to peer network) \u2013 well, just plan ahead on that one. Prof. Kotz was available outside of class as needed, by appointment or in office hours. The wireless networking series comes highly recommended. Many people found the lectures were unnecessary, judging from the large number of people in the midterm and exam who weren\u2019t in class. I think the lectures were useful, however, and recommend going. The midterm was a little lengthy and more difficult than I expected, but the final seemed to be easier and not as long. Networks are so important in computing these days - a strong foundation can be quite useful.\""
        ],
        "Andrew Campbell": [
            "review 1: \"12S with Andrew Campbell: Course: Great course, you build the itnernet and a p2p client. I mean what else is there to say. You get really comfortable with sockets and threads and run a big code base. This is a great experiece for any developer. Professor: Campbell is probably the most fun prof in the CS department. He will have you do stuff that sounds just crazy and really cool. Just get it to work and you get an A. Campbell is one of my top profs for sure. Workload: If you start early you will be fine. I had a two other major courses this term and two jobs and this one was not a problem. You might want to find a dual screen for this since you will be ssh-ing into 8 machines or more to test your networiking protocols (ot you might be some crazy scrip monkey, I'm not). But start early! otherise you are screwed.\"",
            "review 2: \"09S with Andrew Campbell: The class is really interesting: the technology is really up-and-coming, and this is a great topic to be knowledgeable in. Not nearly as good as Campbell's 23 class. Also the TA was terrible.\"",
            "review 3: \"06S with Andrew Campbell: Apparently they hired Campbell for his research, because he spent about 0 hours on the class. He used the slides provided by the textbook, and often didn't know what they said on them until he saw them in class. He threw the homeworks together from the stuff provided by the book, and usually it just ended up being frustrating busy work. We had about 4 weeks to work on a final project, but he kept assigning homeworks during the first couple weeks. For the project we had to do 3 different presentations and 4 different meetings with the prof / TAs outside of class, so we spent about half of our time just preparing for those, rather than actually programming. On the plus side, it was Campbell's first term at Dartmouth, so he'll probably get better.\"",
            "review 4: \"06S with Andrew Campbell: The rumor is that this is \"the easy cs class,\" but it wasn't when I took it. I really like the subject a lot, but the thing about this class that made the term rough was the amount of work given out. Written homeworks, labs, programming assignments, a book report. He poured it on. The work was definitely doable, it's just that there was so much at any given time. Also, both exams (the midterm and final) were fair, but too long for the time given (1 hour for the midterm and 2 hours for the final). Professor Campbell heard this from us and said he would grad them accordingly, but we'll see if he goes through with that or not (the term's not over yet). In all fairness though, it was Professor Campbell's first time teaching at Dartmouth. He was responsive to our suggestions/complaints (such as giving a lab, a homework, and a programming assignment all in one week), so my guess is that next time around he'll have a better idea of how to handle it.\""
        ],
        "Sebastiaan Joze Joosten": [
            "review 1: \"21F with Sebastiaan Joze Joosten: Honestly pretty good class. Really cool and relevant material, but labs can be pretty difficult, and the TA has no idea what's going on. Joosten is good and is there for help whenever you need it. Weekly quizzes aren't too bad as long as you listen during lecture, but are so short that they can mess you up. Labs are pretty equivalent to CS 50 workload wise, but you have a lot more freedom in how you do things.\"",
            "review 2: \"21F with Sebastiaan Joze Joosten: Very lecture heavy. Some lectures were made by Joosten, although he used a lot of material from the book and a couple from Zhou's term teaching the course. I found the quizzes super hard. There were like 8 of them and they last 10 minutes, and in total they constitute 30% of your grade which I found wayyy too stressful. You had the option to do a \"resit\" essay for a better grade if you screwed up on them -- which was easy to do given there are 3 questions in 10 minutes -- but could do this for only up to 3 quizzes. Assignments (aka labs) 1 and 2 are fine, but 3 and 4 were SO hard and confusing. I should have gone to him for help earlier because he is indeed pretty helpful if you ask for it, but the assignments were tough. Make sure you understand Threading (or python Select package). Also the performance differences between Windows and Mac/Linux were pretty big for a lot of networking stuff, so just be prepared to be stuck on bugs and receive no sympathy from him if you're on Windows. Group assignment was a pretty large project but incorporated content from assignments 2-4 which was nice. Final exam was actually really reasonable compared to the quizzes - broader questions compared to what I thought were nitpicky questions for the quizzes. Overall, hard class with a lot of hard content. Joosten is one of the worse lecturers I've had, but he's at least mostly nice (but occasionally a bit condescending). Best bet for assignments is to go straight to him with questions.\"",
            "review 3: \"21F with Sebastiaan Joze Joosten: This class was all over the map. Joosten isn't a good lecturer so get ready to read the textbook. The weekly quizzes weren't bad if you read the slides very carefully beforehand, but they were close to impossible to do well on if that studying didn't happen. With the 3 retake essays he allowed us for the 8 quizzes, I used all three and they took less time to just write the essays rather than studying, which was a poor reflection of his teaching. The labs were very difficult, but because so many people dropped the class after labs 2 and 3 he took the time to closely grade the last two labs (3 and 4) which made the grading more generous. My real issue was with the final. The average grade on the final was an 80 and the lowest score was a 55 (rip that person). Keep in mind, this class had 12 people out of the 50 that it was allotted. It started out with a normal amount signed up, probably about 25, but so many people dropped because if you didn't get the material you were completely screwed. So, it meant that the 12 of us left were all doing really well in the class and were confident in the material. All of the quizzes and the labs had A means and only somewhat bad low scores. Therefore, it should go to show that Joosten pulled a douche move on the final. He does not give partial credit, so you're either completely correct or completely incorrect on questions that are \"open ended\", and there are no multiple choice esque questions anywhere on the test. So, if you take this class be prepared to get a last minute kick in the teeth because I know I did.\""
        ],
        "Tristan N.": [
            "review 1: \"05S with Tristan N.: If you want to know about how the Internet works, take this class. It provides a great overview, and Tristan is good at hitting all the important topics. This ended up being one of my favorite CS classes at Dartmouth.\"",
            "review 2: \"05S with Tristan N.: This isn't a bad course, it's just not particularly fascinating. It gives you a very broad and complete perspective on Networks, which is good. It's not terribly hard, and Tristan's a pretty good lecturer. This being said, the material isn't exactly fascinating. Having taken both, I think CS58 was way more fun (also more work) if you can fit it into your major. Otherwise, this course is fine, it just won't leave you excited about the subject.\""
        ],
        "Xia Zhou": [
            "review 1: \"21S with Xia Zhou: Would not recommend this class with Professor Zhou. Lectures were alright (very fast-paced and the slides she hands out later aren't very detailed), and the amount of content you needed to absorb to do well on the daily lecture/reading quizzes was quite a lot. Also, the reading quizzes occasionally contained things not covered in lecture, so readings needed to be done. Final project was about implementing blockchain and simple application layer on top. The 4 labs were graded relatively easily by our TA's, but they were a lot of work (roughly the amount of CS50 labs). We were able to choose our own preferred language for the labs, and I highly recommend using Python and not C (the language recommended for us by Prof. Zhou), as I duly found out after spending too much time on memory allocation for my first two labs.\"",
            "review 2: \"21S with Xia Zhou: Generally I enjoyed taking this class with Prof. Zhou. Her lectures were clear and I can see this is really her area of expertise. Since computer networking was of my interest, I had no problem taking the time to read the textbook, which I found helpful (of course!) for understanding her lectures. But I do think the labs should be improved, particularly lab3. It was way harder than the other labs and the rubric was just not detailed enough. Final note: Choose your teammates carefully for the final project!\""
        ],
        "Christopher S.": [
            "review 1: \"04S with Christopher S.: The prof was quite good and knew what he was talking about. Homework wasn't too bad in this class, as there were three or four problem sets (one per week till midterms-- three or four hours per set) and two projects(which took up a fair amount of time). The projects were given out two to three weeks in advance, and were approximately 20 to 40 hours each. So if you start early, it's ok, but if you start late, you effectively have to do it all in one week and that's not fun. The tests weren't bad either, but there tended to be not enough time for the number of problems. The class was scaled though. Outside of the homework mentioned above, there's only ~20 pages of optional reading for each class. Basically, if you have any interest in networks, you'll like this class/prof and it's not that hard most of the time.\""
        ],
        "Sergey Bratus": [
            "review 1: \"24S with Sergey Bratus: This class was so bad. Lectures were boring and long, and labs were extremely difficult. He's a nice guy, but this class was structured very poorly and they assumed we knew so much more going into the class\""
        ],
        "Sebastiaan Joosten": []
    },
    "COSC059": {
        "Christopher K.": [
            "review 1: \"02W with Christopher K.: This class suffered from a really strange syllabus which called for a ton of arcane information about language implementation. Had it stayed more on the level of a comparative evaluation of languages, it might have been more worthwhile. Hawblitzel, while still not the most dynamic of lecturers, is improving. Especially in regard to having organized lectures.\"",
            "review 2: \"02W with Christopher K.: I don't know if this is the lesser of the two evils, CS 48 or 68, but every lecture seemed more boring than the next. The lectures consist of reading off of the slides in a semi-dark room that puts everyone to sleep. It seemed you could never go to class and just get the slides off the Web. The homeworks took a long time, regardless of whether you went to class or not, but this is typical of CS homeworks.\"",
            "review 3: \"02W with Christopher K.: I really liked Professor Hawblitzel. He's a really nice guy, and he was very willing to help us out. On the other hand, I really didn't like the class at all. Most of the material is stuff you have to pick up on your own to get by in other CS courses. The book was pretty much irrelevent to anything we covered. The homeworks were a pain.\"",
            "review 4: \"02W with Christopher K.: Unfortunately, this incredibly intelligent and knowledgeable professor has a tendency to put people to sleep in class. If you want to have any hope of staying awake after Hawblitzel turns down the lights and begins speaking in a monotone for 65 minutes, get a good solid 7-8 hours before coming to class. That said, if you listen carefully in CS 68 you'll learn something, and also probably have a few laughs at Hawblitzel's deadpan humor. Many people bemoan the fact that you learn only obscure, impractical languages in 68, but the principles behind those languages are actually pretty interesting and relevant. The material covered is very similar to CS 18, and it was interesting for me to go back to that material in the context of everything else I've learned from the CS major. It's too bad that Hawblitzel's speaking voice does not really convey his enthusiasm for the topics covered in 68. He is a dedicated young professor who is very accessible outside of class (I didn't go to office hours, but asked him questions over blitz and always got quick responses) and who does everything he can to help students learn the material on their own. He also seems dedicated to improving his teaching skills, so the class might even be better next time around.\""
        ],
        "Christopher Bailey-Kellogg": [
            "review 1: \"06W with Christopher Bailey-Kellogg: Decent class. Required for the major. Professor Bailey-Kellogg is a really good prof who delivers effective lectures and makes sure you nderstand the material. The one complaint is the language used \"Oz\" is really not that useful. It would be nice to have used a bunch of different languages each of which was appropriate for the paradigm we were currently studying. This may change in future course offerings, however.\"",
            "review 2: \"06W with Christopher Bailey-Kellogg: The class had a lot of interesting topics, and the language we used (Oz) was cool because it had built in support for everything we covered. It's hard to understand at first, but eventually you start to figure it out and it gets easier. I guess it would have been nice to learn other languages, but that's what the language project is for. Plus this way you don't have to worry about learning a new syntax every week. Professor Bailey-Kellogg was ok, he knows what he's talking about but he's sometimes hard to follow. He's very helpful though and obviously wants you to learn this stuff.\"",
            "review 3: \"06W with Christopher Bailey-Kellogg: It wasn't quite what I was expecting. I thought the course would be slightly more practical ... the orc said \"program development strategies\" would be discussed, but that didn't really happen. There were weekly programming assignments, and some written exercises. The tests were open-book, open-notes, which helped reduce some of the stress. It wasn't that interesting...it was somewhat interesting. The homeworks were a fair amount of work....typical of cs.\""
        ],
        "Sergey Bratus": [
            "review 1: \"16S with Sergey Bratus: Honestly was never sure what was happening in thiss class. Submitted 40% of assignments late consistently, and learned LISP the night before the final assignment and banged out somemthing barely functional and still got an A-. Sergey is also hilarious\""
        ],
        "Sebastiaan Joze Joosten": []
    },
    "COSC058": {
        "Sean Smith": [
            "review 1: \"24W with Sean Smith: Very, very difficult. Much more difficult than CS50, but you're assumed to be better in coding than you were when you took CS50, so it somewhat balances out. The class is self-selecting, in that most students are bright undergraduates or masters students. We had at least 8 masters students in the class this term. Yet, the grades for exams ranged from 9/100 to 94/100. Select a good partner - mine was awesome and we consistently completed the checkpoints in time. One of the most difficult parts of the project is that a bug in one area seemingly completely unrelated can screw you over in something else. For example, a bug in our Kernel delay code caused an error in our IO handler. However, I will say that this is one of the coolest projects I've worked on and you will seriously appreciate operating systems. This class is for the brave. Godspeed.\"",
            "review 2: \"22W with Sean Smith: This was a very time-consuming and difficult class -- despite this, it was also very rewarding. It definitely developed my understanding of how computers actually work and seems very helpful to know, regardless of the kind of software development you might be doing. Sean Smith is a great professor, though his lectures can drag on from time to time. Overall, I would recommend this class if you are interested in the topic, though be weary of the significant workload.\"",
            "review 3: \"22W with Sean Smith: This course is hard, and will need quite the time commitment. You do two programming assignments, code an OS, along with a midterm and final -- It's a lot of work. It is very rewarding though, and really important if you want to get into lower level stuff. Definitely a must-do for cybersecurity. Sean Smith is a fantastic professor, he'll reply to emails pretty quickly and is really helpful when trying to debug. Make sure you go to Sean's lectures, he'll likely ask questions in the midterm and final about things that aren't in the textbook or reading, but he mentioned once in one of his lectures. Get a good partner to work on the project with.\"",
            "review 4: \"22W with Sean Smith: Very interesting material, and I think this class is a must-have if you want to go lower-level. That being said, it's a ton of work, and the final project is one where you have to carefully plan out what you code unless you want to spend a ridiculous amount of time debugging inscrutable bugs.\"",
            "review 5: \"22W with Sean Smith: This class was bad for my mental health. Taking it my senior winter gave me constant stress because of office hours that were too short (45 mins) and scheduled either too close to the deadline (6 hours) or too far (a week prior). The final project is very difficult and a lot of work, a lot of it is conceptually not that hard, but very buggy to implement. As someone else mentioned, do NOT take this class unless you are in love with operating systems, or have a very good grasp of C from the get-go (for example, take CS 51, which I did not take). The midterm was online and we were given 90 minutes. Not enough time, and I many people I spoke to barely finished or did not finish. So unless you like midterms and finals on top of a final project that is quite difficult, I would recommend another class.\"",
            "review 6: \"19F with Sean Smith: This course is difficult, but worth the time and effort. You definitely learn a lot by making the operating system. The lectures can seem a bit scattered/abstract, but become more clear when actually implementing some of the topics during the project. Project: There are a couple of warm-up assignments in C that are not too difficult, and the operating system project is broken down into several ~weekly checkpoints. Some of these checkpoints are extremely difficult while some are a relative breeze. You do get experience working on a scale larger than in other coding classes like 50. Exams: On top of the OS, there are a midterm and final which cover a lot of material, but are not too difficult. Sean and the TA are helpful with solving bugs encountered while writing the OS\"",
            "review 7: \"19F with Sean Smith: As awesome as Sean is, there is just no way I would recommend taking this class unless you already know for sure you're in love with operating systems. It's so so hard, way harder than COSC 50 and way more work. I definitely learned a lot, but in the way where I was forced to against my will. Only take this if you are prepared for a ton of work.\"",
            "review 8: \"12F with Sean Smith: Course: really interesting and hands on. one issue is that for the course to be possible everything runs in simulated environment. however, this couse really teaches you not to be afraid of hacking system itnernals and poking around the actual implementations of APIs. I think I became a more robust developer after it, since it is impossible to do anything itneresting without hacking internals :_ Professor: Professor is awesome. It's Sean Smith! Workload: workload tends to get crazy for about two weeks (context switching) since the abstaction of the hardware can become too much to handle. You will be coding with major bugs for about two months until you finally understand what's what and how to fix them (impossible to fix those bugs until you are pretty much finished, really hippie experience). Great course. Pick a good partner!\"",
            "review 9: \"05F with Sean Smith: That is all.\"",
            "review 10: \"05F with Sean Smith: Making the operating system was a great experience. I really recommend this course. There is a lot of work, but the TA was very helpful and Sean is always ready to help if you need it.\"",
            "review 11: \"04F with Sean Smith: I am glad to have taken this course. It covers lots of useful ground and exposed me to the complexities of threading, synchronization, scheduling and other goodies for the first time. As far as Dartmouth CS courses go, this one packs lots of practical material. The time commitment here for the course is huge. I spent most of my waking, end of the term hours working on Yalnix, the team OS project. Pick out a good, strong/smart team, as you will need it. Make sure that each member is willing to work. The material that you will cover in code is interesting and finishable if you put in the time early. More often than not the weeks assignment took 3-4 afternoons/evenings of working/thinking to get it done, and then that was that. Sean is a great guy to speak with one-on-one, and helped my team squash a few very evasive bugs, so go to him for help. In the class room, however, he jumps around alot in his lectures and I often got lost/had material go over my head. Print out the lecture notes before class and bring them in...that will help some. His notes are scattered with questions to the reader that he will often answer in class. FILL THEM IN to help with the studying for the exams. Be sure to read them several times over before the exams, as the material will likely pop up. The test can throw you for a loop, so watch out. The problem is that Yalnix takes lots of time, so Sean (kindly) does not assign extra hw that would let you practice the material covered in class. Thus when I faced the midterm questions (which for us were cunning \"how would you solve this\" problems, having lots to do with synchronization and memory management (pagetables, TLBs and such)), I was doing stuff for the first that i had only read about. Painful. Sean realized that lot of us got walluped the first time around, and the final thus contained easier \"code this\" questions but a new acronym decoding section that infuriated some of my friends but worked for me, having studied the the course notes. Basically, they are a moving target,. Sean does curve, so work hard but don't worry too much. Exams aside I am quite happy with the overall experience, and would recommend the course to a CS major.\"",
            "review 12: \"04F with Sean Smith: Operating Systems in many was was the best class I've taken in the CS major, but it was also definitely the hardest. The coursework includes both a major term project - writing a UNIX-style kernel in C - and the usual coursework of midterms, finals, homeworks, etc. The term project alone was more work than most courses require, so adding in exams and the like places this class very high as far as workload goes. However, as a disillusioned senior-year CS student, I found that the class - and the project in particular - was more interesting and exciting than most of the work I have done in CS classes. It's a good balance of conceptual struggling and real-world implementation. Of course, I finish the class with yet another useless skill (who writes operating systems these days?) but at least it was kind of fun.\"",
            "review 13: \"04F with Sean Smith: Solid in several ways. Interesting material, striking a compromise between programming and theory people pretty well. Probably leaning more toward the programmer, but I'm a theory person and I still enjoyed it. It's also a solid amount of work though. The homework and studying time for exams is not that much at all, if you regularly attend lectures (you rarely even have to look at the book), but the project is gonna take a big bite out of your time. Writing a whole operating system in 6 weeks is not an easy task. Basically, my only complaint is that I wish the term were longer, or this class were 2 terms long, so that we could have the time to play around with it instead of just sticking to a tight schedule.\"",
            "review 14: \"04F with Sean Smith: The bulk of this course consists of building an operating system. You work in a team of 3 people, and you are given 7 weeks to code an operating system. It's a lot of work, but it's very interesting and quite fun. Sean is a good prof for this type of course, in that he's very accessible outside of class and very helpful. His lectures are a bit disorganized, but quite entertaining. Beware of his exams, as the material they cover can be quite different from what you'd expect.\"",
            "review 15: \"04F with Sean Smith: It's either really easy and only a couple hours of work a week (6 or so) or a seriously painful (15+). But the prof is excellent, and the material is fun if you're into that type of thing.\"",
            "review 16: \"04F with Sean Smith: The subject matter is everything you need to know to make you conversant with computers. This should actually be an intro class; it is called Operating Systems but it touches on every other aspect of computer science - networking, hardware, disks, I/O, security etc, and many of the algorithms associated with these topics. There is a lot of material for just one term so keeping up with the lecture notes is essential. Also, reading the textbook is crucial if you want to do well in the exams and written assignments. The programming project was about the most interesting I have ever had to do in the CS department at Dartmouth.\"",
            "review 17: \"03F with Sean Smith: Operating Systems is the core of computer science. The subject itself is interesting and important, but the professor of CS 58 definitely does a sub-standard job delivering lectures. He coins vague terms and fails to explain concepts clearly. So definitely take the class, but with a different prof if possible.\"",
            "review 18: \"03F with Sean Smith: Overall, this was an interesting course. Prof. Smith's lectures were somewhat disorganized, but I had no other complaints about the course.\"",
            "review 19: \"02F with Sean Smith: There's a lot of work involved. There are hundreds of pages of tedious reading if you decide to do it. But if you attend all the lectures, you probably could get away with a decent grade on the exams without reading. Lecture notes online. There were 2 minor programming projects, then a midterm. After that, yalnix was assigned. Having a final exam (to cover lecture material) as well as the big yalnix project (hands-on learning) was a bit much, but manageable. Sean Smith definitely keeps your attention during lectures. He's got a real enthusiasm for the subject, and always seems to want to say more than we have time for. He has some great stories. And he's really happy to give help if you ask for it.\"",
            "review 20: \"01F with Sean Smith: Although the exams and hw were far too difficult, the material was interesting and the class was worthwhile. The professor was very helpful as well and brought useful anecdotes about his experiences designing operating systems.\"",
            "review 21: \"01F with Sean Smith: The Computer Science department warns students about CS 23, but not about this one. It was by far the most work of any class I have taken at Dartmouth, and the work was extremely tedious and frustrating. I did not feel prepared for what was expected of me, even though I have taken far more than the course's prereqs. I also did not find the material especially interesting. However, Professor Smith was extremely helpful and willing to answer questions. He held office hours every day, and lab hours at least once a week. This was really necessary because everyone was as confused as I was by the coursework, and the TAs were not very helpful. I would definitely recommend taking courses from Professor Smith.\"",
            "review 22: \"01F with Sean Smith: Unlike the great majority of practical CS classes (5,15,23,37,68) the homework in this class was truly difficult in addition to being time-consuming. However, I can't really say that they were unfair. The final Yalnix project was really dificult, and really time-consuming, but also very rewarding and a very good culmination of the class. Professor Smith is a good professor. No complaints.\"",
            "review 23: \"01F with Sean Smith: I strongly recommend this class, but regrettably I had a terrible partner for my final project, so it was lots more work than it should have been. I actually felt like it was something useful that will help me with my job when I graduate. I thought the professor was great, especially since he had real world stories about what this stuff is good for in industry instead of just academia. Take this class with prof smith if you can. It's tough but worth it.\"",
            "review 24: \"01F with Sean Smith: This course was interesting and challenging but be ready to put in a lot of your time in the lab.\"",
            "review 25: \"01F with Sean Smith: The course was great overall. The best part, though, was the project. We worked with Yalnix (a Texas pun on Unix), which is a teaching tool that sets up the \"hardware\" for a fictional machine and lets you write your own operating system for it. The requirements for the operating system are pretty thorough and laid out well, but you do all the implementation from scratch. This is great because you get to apply all the concepts you learn about in class. Some of the trickier parts are done for you, but you do most of it--the major things you implement include the process scheduler, the virtual memory manager, the I/O request queues, and synchronization constructs. Some things you don't implement are a filesystem, networking, and the I/O device drivers (hey, the term is only so long!). Your operating system runs on top of linux, but not in a virtual machine--you actually get to handle the linux interrupts, etc. It's a great way to learn about operating systems, and if you enjoy programming it's a lot of fun! WARNING: It's also a lot of work! You really need to stay on top of it and make the checkpoints (which may be harder than they seem at first), and you'll still probably be putting in major hours the last week. So make sure you're prepared for a significant time commitment later in the term. It's a great experience and definitely worth it, though.\"",
            "review 26: \"01F with Sean Smith: In lecture Sean is a little dodgy. His lecturing style is willy-nilly and you'll find yourself confused if you drift off for even a split second. This might not be Sean's fault, since the material itself is very broad and in order to get it all in, at times it seems like topics get brushed over... But by far the highlight of this course is the Yalnix project. You actually get to code your own operating system! You'll find yourself slaving away for hours and hours, days and days, weeks and weeks, but after a whole lot of work and a whole lot of help (professor Smith was incredible! He was helping people at all hours of the day. Outside the classroom, this professor's a keeper!) you still might not getting it working properly, but you'll understand how a simple operating system works, inside and out. This project rocks!\""
        ],
        "Andrew Campbell": []
    },
    "COSC057": {
        "Vasanta Lakshmi Kommineni": [
            "review 1: \"23S with Vasanta Lakshmi Kommineni: The subject matter covered in this course is highly challenging and falls under the category of advanced computing. However, Vasanta has succeeded in making it more accessible by presenting the material in a relatable manner. She stands out for her exceptional warmth towards us, fostering a supportive learning environment. You can get a good grade if you complete the steps to the optimizer.\"",
            "review 2: \"23S with Vasanta Lakshmi Kommineni: Overall a pretty good course, and Vasanta does a good job explaining concepts clearly. The course is split into 4 distinct units, each spanning 2 weeks, and, each representing a distinct section in the breakdown of a compiler. Specifically: Part 1: Building an AST and Semantic Analysis Part 2: Turning the AST into LLVM Intermediate Representation (LLVM IR) (this was optional/extra credit during this course) Part 3: Optimizing the LLVM IR Part 4: Converting the LLVM IR to X86 Assembly The concepts are not exactly straightforward and definitely requires a lot of thinking, but with Vasanta's availability and resources and the prerequisites it is very manageable. I only have two main complaints with the course, the first being that there is no formal documentation on the language we are trying to compile. We are supposed to be writing a file for 'mini C', which is a stripped down version of the C programming language, although it was very unclear at the beginning of the course exactly what features were and were not expected. The second complaint would be that the difficulty and time required varies drastically across the course, with certain sections giving us pseudocode that we can follow while others have fewer resources/expectations of the course. Really, I still had a good time with this course. I found the information learned to be appropriate, interesting, and applicable, and it was generally not overly time intensive (5-10 hours a week max). It is also not too difficult to achieve a high grade, as Vasanta mainly grades on completion. I hope that as Vasanta continues to teach this course she will only become more organized. It is still definitely a worthwhile course to take.\""
        ],
        "John Brady": [],
        "Sean Smith": []
    },
    "COSC056": {
        "Eric Hansen": [
            "review 1: \"21X with Eric Hansen: This class has pretty interesting content if you're interested in learning more about hardware, but it is definitely more geared towards engineering than CS. Nothing you learn in this class is vital to becoming a better programmer, or more fluent in computer science, but the material is still interesting. The biggest con is how time consuming it is. Professor Hansen does use the x-hour every week, and the in-person labs often take longer than the allotted 3 hour time frame. But the TAs are always really helpful, and both Professor Hansen and the graduate TA will spend as much with you time as you need helping you get through the labs/homeworks.\"",
            "review 2: \"17X with Eric Hansen: Hansen is an excellent professor, but the course is not good. It won't make you a better computer scientist and it won't make you write better code. The labs are awful. Good luck, but if you're a CS major I suggest you not take this course. Again, none of what you cover in this course will in any way translate to making you a better software engineer. Better to take architecture.\"",
            "review 3: \"17X with Eric Hansen: COSC 56 was one of the best taught and structured class I\u2019ve taken. The class had six weekly labs and one final exam. The final was not particularly difficult and the Professor provided two practice exams that were helpful in preparing for it. The labs were a fair amount of work. I would say they were slightly less work than typical CS course such as CS10, so long as you split the work with a good partner. COSC 56 used the \"flipped classroom\" structure, where we would read out of the textbook or watch videos before each lecture to cover the content of the lecture, leaving most of the lecture to solve practice problems and ask the Professor/TA/Learning Fellows questions. I really wish more CS/Engineering/Math courses at Dartmouth were structured this way. In these classes, the dense material can often be better absorbed by reading. On the other side it is really useful and enjoyable to get the opportunity to do practice problems for most of the lectures. The problem solving aspect, as opposed to the material covering aspect, is usually the hardest and most rewarding part of most STEM classes and that is why it is so useful to be able to do it while in company of the Professor and classmates. It is also really motivating to be able to show off your hard work from reading the textbook and videos through being able to outperform classmates on the in class problems.\"",
            "review 4: \"10X with Eric Hansen: The course required an incredible amount of VHDL coding which I didn't realize. Coding is a necessary evil to me so I struggled a bit with that (you need it for ever lab except the first and the final project), but I did learn a lot about digital electronics and did a cool project at the end. Start early on the project and get advice from the TA's and Hansen on the best way to go about it. They become less available (and so does the digital lab) as the term winds down and you don't want to end up spending 3 straight days in the lab til 4am finishing your project. There's only one exam in week 6 or 7 of the course and after that you don't have class and just work on your projects.\"",
            "review 5: \"08X with Eric Hansen: Overall, this class was excellent. It began with a comprehensive introduction to Boolean algebra and logic, and quickly moved to more advanced applications based on these methods. Hansen's lectures were consistently great, and helped me understand things that didn't make much sense in the book. The exams seemed to be right in line with what he went over in class; my only complaint is that it took a while to have them graded. The project phase of the course was by far the most work. Hansen provided us with plenty of support, though I'd suggest choosing a project using technology with which he and the TA's are familiar. Towards the end of our project, we ran into some bugs that none of us could really figure out. Hansen was incredibly supportive and dedicated a lot of time to helping us, but our project ultimately didn't work as expected, which was a bit of a disappointment after all the time we spent on it.\"",
            "review 6: \"08X with Eric Hansen: This is a great class. Professor Hansen is enthusiastic and knowledgeable about the material, and if you have any sort of tangential interest in the subject matter you'll probably find the material relatively intuitive and interesting. The subject material concerns digital electronics- Boolean logic, registers that store bits of data, inputs and outputs, state machines, etc. While the first few labs involve wiring together discrete components (e.g. microchips, seven-segment LED displays) on a breadboard, the majority of the class is spent learning a pseudo-programming language called VHDL, which is used to configure logic upon a microprocessor called an FPGA. The upshot of all of this is that you will probably end up spending more time writing code on a computer and 'flashing' it onto your VHDL board than doing anything else. That being said, the concepts are still the same. The class is set up so that six weeks of lectures four days a week culminates in a 'final', around the time most other classes are having their (second) midterms. After this, classes end as groups of two work upon the culminating project over the next few weeks. The best thing about the class is that it can only get better with time, largely because next year's curriculum will to a large extent be built upon the lessons learned from this year and last year. The use of the FPGA is relatively recent, and as such there were many kinks to be worked out while building various final projects. (Our class's final projects included synthesizers and 'keyboards' that played sounds when buttons were pressed, a simple RPN calculator, some games, an electronic 'mailbox', and some attempts to use a computer screen to good effect. If you don't wait until the last minute, it is definitely possible to come up with an interesting project that'll be fun to work on.)\"",
            "review 7: \"08X with Eric Hansen: lots of work class, is great as a class that you plan on devoting a lot of time to. very satisfying in the end if you get your project to work. advice, dont pick a project if you even think you might no be able to handle it... hansen is awesome\"",
            "review 8: \"08X with Eric Hansen: Professor Hansen is wonderful. He is the best lecturer I've had at Dartmouth, and it somehow able to make the most complex concepts simple to understand. The labs are a ton of work, and you have to be ready to spend hours and hours going through troubleshooting and problem solving techniques, but it's worth it. Great intro to digital design.\"",
            "review 9: \"07X with Eric Hansen: Hansen is an amazing prof. His ability to explain concepts is remarkable and you will find yourself leaving class having understood and learned a lot. This should your primary class for the term, however. The entire course is basically the lab. Hansen breaks it up into six weeks of 4-day a week classes culminating in \"final\" of course material. After that, classes become optional as you work on your project. The project is huge and combines everything you learned throughout the year. The lab definitely prepare you for it though. In the end, this class bridged the gap between 1's and 0's and a working computer.\"",
            "review 10: \"07X with Eric Hansen: Hansen is fantastic. he obviously loves this stuff when he is still in the lab with you at 11 pm trying to get your lab to work. the material itself is pretty interesting. you look at the world in a whole new way after this class. you'll have a basic understanding of how so many things work after this class. even if you're not an electronics guy, this is still a great class to take.\"",
            "review 11: \"07X with Eric Hansen: this is an amazing course and i highly recommend it, especially if you're only taking 2 courses for summer. Hansen is the best prof in the department and will put tons of time into making the class great. however, he expects the same from you. so be prepared for 7 weeks of hard labs, impossible problem sets, and no free time, followed by 3 weeks of non-stop project work which will literally consume your entire life.\""
        ],
        "Brian Pogue": [
            "review 1: \"07S with Brian Pogue: If you're thinking about taking this course because think it will be 'fun' or youre 'interested' in the subject, stop right now. Yeah, it was pretty interesting, but it's a pretty big pain, and if you're not an ENGS major you're going to have a tough time with it. You also can't NRO it, which is a bummer. Find a good group for the final project and do well on that.\"",
            "review 2: \"07S with Brian Pogue: The lectures were tedious and boring. When Prof. Pogue went away for a conference, and Prof. Hansen took over, it was like night and day. Take it with Hansen if you can.\""
        ],
        "Stephen Taylor": [
            "review 1: \"08S with Stephen Taylor: Prof was nothing great, course ok, though\"",
            "review 2: \"08S with Stephen Taylor: It wasn't even worth looking at his ppts b/c there were so many errors. If you don't know/trust the TAs, don't take the course\""
        ],
        "Ben Dobbins": [
            "review 1: \"22X with Ben Dobbins: If you are a CS major and not an ENGS major I would recommend avoiding this class. It is somewhat deceptive that this course is cross listed in the CS department, because when I took the course 95% of the students were ENGS students and I spent the first 5 weeks of the class just trying to catch up to the baseline level of knowledge of electrical engineering that most of my classmates already had going in. My project partner and I essentially lived in office hours all term and I don't think it would've been possible for us to get through the psets otherwise (each one was pages long and involved a combination of conceptual and on-paper coding questions). VHDL also took a little bit to get the hang of because it is quite different from other coding languages taught in the CS dept, but none of the code was conceptually tricky (no problem-solving is really required, just an understanding of how to write each different code block to build the different electronic parts). The final exam was in-person and involved writing VHDL code from scratch on paper. The final project is a much bigger time commitment than I had expected but was doable. Expect to spend a lot of time in a windowless Thayer lab because you have to be there in-person any time you want to work on the project. Ben Dobbins was a great prof and was so understanding and kind (he repeatedly told us that no assignment in the class was worth losing sleep over), and I think the course would have been even harder with a different prof (Ben is sadly no longer teaching at Dartmouth).\"",
            "review 2: \"22S with Geoffrey Luke: This class was, to put it shortly, extremely intense. It kind of took over my whole term. You learn essentially a whole ten week's worth of material in seven and a half weeks via the usage of every x-hour and a flipped classroom, and then take a tough final in the middle of Week 8 when you have a lot else going on. However, that's just the beginning - there's also weekly three-hour lab, and then a huge two-week final project complete with final report at the end which people were basically working on constantly during that time. You are in for a ride. The course's organization was pretty questionable, with the worst part being that nothing was graded until Week 10. I heard rumors that this was due to some miscommunications that I bet will be resolved in the future. I'm glad that I ended up doing well, because if I hadn't, I wouldn't have really known until the very end; well past the course's drop deadline. That said, I found the content very interesting, and the lab instructor Ben Dobbins made that whole portion of the course very accessible and streamlined, and knew what he was doing. It's definitely a course worth taking, but I wouldn't with other time-intensive courses if you can avoid it.\""
        ],
        "Geoffrey Luke": [
            "review 1: \"22S with Geoffrey Luke: This class was, to put it shortly, extremely intense. It kind of took over my whole term. You learn essentially a whole ten week's worth of material in seven and a half weeks via the usage of every x-hour and a flipped classroom, and then take a tough final in the middle of Week 8 when you have a lot else going on. However, that's just the beginning - there's also weekly three-hour lab, and then a huge two-week final project complete with final report at the end which people were basically working on constantly during that time. You are in for a ride. The course's organization was pretty questionable, with the worst part being that nothing was graded until Week 10. I heard rumors that this was due to some miscommunications that I bet will be resolved in the future. I'm glad that I ended up doing well, because if I hadn't, I wouldn't have really known until the very end; well past the course's drop deadline. That said, I found the content very interesting, and the lab instructor Ben Dobbins made that whole portion of the course very accessible and streamlined, and knew what he was doing. It's definitely a course worth taking, but I wouldn't with other time-intensive courses if you can avoid it.\""
        ]
    },
    "COSC055": {
        "Charles Palmer": [
            "review 1: \"20F with Charles Palmer: I'm writing a review because this class has changed a lot from what I've heard about other years. Palmer is a great guy who really knows his stuff. There was an open sourced security lab recently created which Palmer added to the course. Half of them are pretty easy and just require you sit down and dedicate an afternoon. The other half are actually quite confusing and can take longer. The exams require studying but were open notes during zoom, so should be pretty easy to do well. Although I would still consider this class to be one of the easier courses in the CS department, the hours you spend on it have increased. I will say that as someone who went to >85% of the lectures, I learned a lot about security (theory), and is worth taking.\"",
            "review 2: \"20F with Charles Palmer: This class was okay, the material is not as interesting as other material in the CS department. There are weekly quizzes with super obscure questions and they are pretty difficult. If you are looking to take this class as a layup, don't, only take this class if you are actually interested in learning the material. It is very reading heavy and requires a lot of studying.\"",
            "review 3: \"18F with Charles Palmer: I have mixed reviews about this class. On one hand, it is probably the easiest class I've taken at Dartmouth. I probably have less than 20% attendance and have an A. On the other hand, I can tell you that you won't learn much in the class. For the most part, Prof. Palmer usually talks about general security ideas and his experience at IBM. If you're hoping to learn the technical side of computer security, this is definitely not the class for you. At the end of the term, you won't really have a good understanding of securing systems, instead, you'll know that it's a good idea to not set your password to 'password'. The homework is really easy (It's so general that you don't even need to go through the lectures in order to answer.) All slides are posted online and no attendance is taken.\""
        ],
        "Jason Reeves": [
            "review 1: \"23X with Jason Reeves: This professor is the best. Imagine a middle-aged dad that would coach his kids soccer games and go to all of their school plays. Not only did I learn a lot in this class, but got the experience of having another dad for the summer term. Come for the lessons in security and privacy, stay for the experience of a family dinner table style conversation led by your dad trying out his new stand up comedy routine. You\u2019ll laugh, you\u2019ll cry, you\u2019ll do some fun assignments and take some open resource multiple choice tests\"",
            "review 2: \"23X with Jason Reeves: Goated sophomore summer class. You could easily not go to a single class and still get a 100. One assignment per week that was just following instructions for an hour. One midterm and a final. Both online and open note. You can command F the course slides to answer every question. I did not study for a single minute for the final. I would recommend making one massive slide deck with all of the other slide decks to improve command F efficiency. Jason Reeves is chill af. He is a little awkward and a boring lecturer, but means very well. Overall, electric class to take if you want a layup CS class, especially for the 50 range.\"",
            "review 3: \"23X with Jason Reeves: What can I say except Reeves = GOAT. Yes it was easy, quite literally have not had an easier class since elementary school. My biggest regret is taking just 55 and 61 sophomore summer thinking one of them would be hard. Lol. But you still actually get some cool hands on experience and still come away with gained knowledge. Reeves is like the most lovable Reddit mod of all time. Long live Jason.\""
        ],
        "Sean Smith": [
            "review 1: \"06S with Sean Smith: Professor Smith tries to cover a lot of material in a short amount of time. As such, he kind of just skims the surface of every issue, and you only get in depth on a few things. If you think you're interested in the material, take it, but if not I wouldn't recommend it.\"",
            "review 2: \"06S with Sean Smith: Only take this course if you are already interested in the material. If you are interested, Sean is a great resource and will continue to fuel your passion for security topics. Otherwise, he does a poor job of inspiring initial interest. He goes up to the whiteboard, tells anecdotes about his times at IBM, etc. and occassionally scribbles a few words down on the whiteboard. It's hard to discern what is important and what is not. This is not your average computer science course. There is a lot of fuzzy thinking. Again, do not take this course unless you are aleady familiar with and interested in security.\""
        ],
        "Timothy Pierson": [
            "review 1: \"21W with Timothy Pierson: This was the first time Prof Pierson taught CS 55, and it was very interesting and pretty easy. The midterm and final are open note and are very straightforward; everything you need to know is basically provided in Pierson's lecture notes, and he also emphasizes concepts that are important to know during lecture. Pierson is a great professor who is very passionate and excited about the applications and implications of security and privacy in tech, so his enthusiasm definitely makes class more interesting. Labs are done by assigned groups of 3, which makes completing them much easier.\"",
            "review 2: \"21W with Timothy Pierson: This class has a final and a midterm, as well as 5 labs which were done in groups of 3. The labs were a pretty simple extension of the material covered in class, and the exams were open notes with the material covered in class. Definitely recommend taking this class, it was easy to do well, no busy work, and super interesting lectures.\""
        ],
        "Sergey Bratus": [
            "review 1: \"05S with Sergey Bratus: On the whole, the course was enjoyable and informative. Professor Bratus's presentation was very strongly Linux oriented, sometimes seeming to prefer discussing details of security implementations and issues on Linux rather than addresses broader concerns in security or privacy; however, the majority of the course material was interesting.\""
        ],
        "Shagufta Mehnaz": []
    },
    "COSC051": {
        "Sean Smith": [
            "review 1: \"23F with Sean Smith: One of the worst professors I have ever had. He does not explain anything clearly, and he overcomplicates the most simple concepts. His instructions for the homework are so vague that you spend half the time just trying to figure out what he is even asking.\"",
            "review 2: \"23F with Sean Smith: Good dude who's very eccentric. Fun class content, homeworks are pretty difficult. Not as time consuming as COSC50 but just as hard imo. Don't mindlessly take this class because you couldn't get into something else, you'll be regretting it.\"",
            "review 3: \"22S with Sean Smith: I really liked the material in this class and felt like I definitely learned a lot. All of the homework assignments were super cool (mostly designing circuits in Logisim, plus some assembly programming) and very satisfying to figure out. I really wanted to like the lectures but I honestly never got anything out of them and stopped going towards the end, since Smith is kind of hard to follow unless you've already been exposed to the material. The only way I could effectively learn in this class was by reading the textbook and then rewatching the lectures afterwards on Panopto. The exams, as others have said, can be kind of tricky, though I found the final much easier than the midterm since we had more time and the questions were generally more straightforward in my opinion.\"",
            "review 4: \"22S with Sean Smith: His lectures are impossible to listen to. Super weird lecturing style and lecture notes are vague and hard to follow. Still, I really enjoyed this class. 8 homeworks, 1 midterm and a final - homeworks vary in difficulty but are pretty manageable. Exams were meh but overall recommend the class. Sean is quirky and fun.\"",
            "review 5: \"21W with Sean Smith: Smith's style of lecturing takes some getting used to. He's kind of all over the place and he can be hard to follow, but I found that I actually got somewhat used to his style. Sometimes I'd have to rewatch his lectures (the class was on zoom) and then everything would click, and I'd start to understand why he explained things the way he did. Although it was frustrating at times, the course is a good one to take and the material is interesting. As with most CS classes, this one definitely requires work, but I'd say it's less demanding than classes like 10/30/50\"",
            "review 6: \"21F with Sean Smith: Very very cool class, I mean we built a CPU on Logisim as a final project. The material is really interesting, homework assignments will require you to put in the time. I put in over 10 hours a week. But if you care about the content, it's really rewarding. That said, Sean's lectures were all over the place, his lecture notes often gave more questions than answers, many of his answers to your questions during lectures were \"we'll get to that\". I really enjoyed it; if you think you would, form a study group with friends, read the textbook and you'll survive.\"",
            "review 7: \"21F with Sean Smith: One of my favorite classes (material-wise) that I've ever taken. Like others have said, Professor Smith isn't the best lecturer and some concepts can be really fuzzy until you start the homeworks (try to take detailed notes during lecture even though it can be rambly and boring). That being said, everything that we covered was genuinely so interesting and makes everything else you learn in the CS major make a lot more sense. In terms of work, the problem sets take a good amount of time and the exams are pretty difficult so expect to put in over 10 hours a week. But if you're willing to work at it, this class will be so rewarding and one of the coolest you'll take in the CS department imo.\"",
            "review 8: \"20W with Sean Smith: This is my favorite computer science course that I've taken at Dartmouth. It will demystify computers for you, and you will understand how they work at a deep level--it makes you a much better programmer. That said, it is a reasonable amount of work, and Prof. Smith is not a good lecturer. He explains things very well one-on-one, but I got almost nothing out his lectures (which seemed very scattered and tended to go on long-tangents).\"",
            "review 9: \"17S with Sean Smith: Just to balance out some of the negative reviews below, this is probably my second or third favorite class (out of 24) that I've taken. I agree with a lot of the characterizations other reviews put forth: Sean's lectures go on a tangent at times (usually due to classmates' questions) and looking at the slides from class are next to useless, even if you took notes during class. The homework was also often very confusing initially. However, if you're willing to put in the time and think about how computers work, a lot of these concerns are irrelevant. His teaching style is certainly not for everyone - it reminds me of the Socratic method, where he poses a lot of questions and you're forced to think about the concepts deeply. This is not a class like CS10 where the teacher will cover everything you need to know in class - you're going to have to put in some effort into not just memorizing, but understanding. In terms of reviewing material and textbooks, I bought two textbooks to follow the course, the names of which I've forgotten, but any modern computer architecture textbook should have enough information to get you through the course. The points were based on one lab per week, a midterm, and final. The labs were highly variable, taking anywhere from 2 hours to 14 hours. My time spent averaged out to around 10 hours per week on this course. Be sure to go to every class and actually pay attention, some of the smaller things he says in class will show up on the midterm or final! This class is a soft (but highly recommended) pre-req for compilers (57), operating systems (58), and it makes digital electronics (56/engs31) a breeze. If you want to get into embedded programming and other low-level programming, this is a must-take class.\"",
            "review 10: \"16S with Sean Smith: This class was awful, made worse by how interesting it could have been. Sean Smith lectures were poorly planned, even worse executed, and not particularly informative. The lesson notes he provides are as bad as the lectures. This means it is hard to have a good source of notes. Combine this with the lack of textbook that follows along with the whole course, and it's easy to see why this course can seem so difficult. The HW assignments are given with little explanation and almost no help from Professor Smith (hope you get good TAs). The exams are also pretty dreadful, although if you follow the trends of weird comments he makes in lecture and work very hard to find similar course notes on line you can manage. As I mentioned, the worst part is that the course could really be fascinating. If you are willing to put a large amount of work in out of class, it might just be worth it.\"",
            "review 11: \"09S with Sean Smith: This class moves quickly and there's a lot of work. Overall, pretty interesting material, and it's very satisfying watching what you made run.\"",
            "review 12: \"08S with Sean Smith: With Professor Smith teaching, CS 37 is NOT a joke class or an easy A, like it has been described in the past. Classes are involved and you need to be following along, because chances are you are going to have to answer at least one question every class. Labs range from fairly straightforward to very complicated assignments that will take you many hours to make and test. The circuit simulation software (Logicworks) can be very frustrating at times. The grading isn't too bad. Overall, it was a great course and I learned a ton of interesting, useful stuff. Just don't take it and expect to blow it off.\"",
            "review 13: \"08S with Sean Smith: The class was organized into 7-8 weekly assignments that were 50% of the grade. Two 10% quizzes and a 30% final. The main assignment in this course is to make a simulated processor. And each assignment makes you build some part of it and the last one requires you to put it all together. Which sounds very cool but it is not actually. Because there is not enough help - the TA rarely knew what was going on, and Sean doesn't really help you out either. Secondly, there were bugs in the simulation software we used which made life really hard. Thirdly, he wants us to build everything, which means hours of tedious work connecting wires etc.(in LogicWorks). Not exactly the best way to learn. Fourth, the assignment questions themselves were vague and Smith had to send several emails clearing doubts and typos. Sometimes he didn't seem sure of what he wanted from us. All this made the class really frustrating. The exams were not easy. They tested a lot of conceptual stuff along with little info from here and there in the text. However, one could do well if you read the book and paid attention in class. The lectures were boring and hard to follow. Almost all I learned was from the book and the weekly assignments. Smith basically rambled on what was already in the book or told us stories from the real world. Inspite, of all this I am optimistic that the class will improve in the future as this was the first time it was taught by Smith who changed it completely. All majors need to take the class so there is no getting around it. However, be prepared to put in a significant amount of time.\"",
            "review 14: \"08S with Sean Smith: It's a lot of work; a couple problem sets were too much, but just because it's in the middle of being redone. Smith was really responsive to feedback about when problem sets were too hard, and was helpful when I got stuck - but if you're looking for someone to feed you the answer, it won't be him. Class itself was interesting, if a little boring. Ask questions if you're getting lost - Smith really encourages it, and people don't do it enough. The tests were pretty easy, as long as you studied for them and understood what was going on.\"",
            "review 15: \"08S with Sean Smith: This class was terrible. Every CS student I know told me this was an easy CS class, but that was before Professor Smith changed the course around. His assignments were sometimes ridiculously hard and the exams were some of the hardest I've seen in any class. In class Professor Smith didn't really explain concepts well, and in office hours , when I asked him a simple question he sometimes would try to confuse me into understanding the answer which annoyed me, because it just made me more confused. The TA Vibhor was really helpful though, if he wasn't there I know I wouldn't have been able to do most of the assignments. Overall if you can don't take this class with Professor Smith if you can help it At least with Vibhor teaching it in the Summer it will probably be better than with Smith.\""
        ],
        "Katherine M.": [
            "review 1: \"07X with Katherine M.: Professor Forbes-Riley definitely knows her stuff. She makes excellent slides, and gives students all the resources they need to succeed. Several students didn't particularly like her personality. I however, did not find it a problem. In fact, it probably takes someone who's a bit machine like to teach this class. She has this thing she does where she calls on anybody in the class at random to give an answer, it's not a problem if you keep up with the class, but she will definitely notice if you're not keeping up or not attending. The class itself, like all computer science classes, has lengthy problem sets that will take up your whole weekend. The material, also seems the most 'arbitrary' of the 4 computer science classes I have taken thus far. What I mean is that I have the feeling I will never use most of what I learned again. But, the material at the beginning of the class, including boolean logic and designing circuits, is very interesting.\"",
            "review 2: \"07S with Katherine M.: This class was pretty monotonous. The professor had very good powerpoints of all the lectures that were available to the students, but if you could understand these on your own, going to class wouldn't add anything. She just read straight through the powerpoints for her lectures. The book didn't add much either. The course was reasonably paced, which is uncommon at Dartmouth and allowed for review at the beginning of every class. She also requires class participation by asking everybody questions, so you have to somewhat pay attention too. Not a very exciting class. The material was interesting, but I feel like they could have done more with it in this course. The course definitely has the reputation for being the easiest CS course, which is definitely true, although I wouldn't say it's easy for someone who doesn't know anything about architecture yet. Definitely doable for anybody though.\"",
            "review 3: \"06S with Katherine M.: This is one of the easier (if not the easiest) CS classes you can take as a major. It's not that time consuming, but also it's not that interesting. I feel like the material could have been made a lot more interesting and a lot more challenging. The prof just wasn't a good lecturer. She had slides prepared for each class and just read off the slides mostly. They were great slides, I have to give her that. If you read the slides you probably didn't even need to go to class or read the textbook to understand the material. But then again, this material isn't rocket science. I did learn a lot of things I didn't know before so that's a plus, I just didn't get real excited about the material and felt pretty bored the whole time. She went really slow and reviewed the previous class's material at the beginning of each period. Seemed too much like junior high school. There was a bunch of busy work in the homework too. Do we really need to expand the floating points out to 23 places to demonstrate that we understand how to do it?\""
        ],
        "Robert S.": [
            "review 1: \"04X with Robert S.: Prof Gray (Bob) was interesting and tried hard to make a relatively dull subject work. This course has the roumor of being the easiest cs major class, mainly because there's not that much syllabus that it needs to cover, but the homeworks were challenging (but very doable). Overall, this was a fun course and I enjoyed taking it.\"",
            "review 2: \"04X with Robert S.: This class covers a lot of topics, some of it interesting, some if it not. It doesn't go into much depth into any of it, it's more of an overview. This was Professor Gray's first time teaching here, and he did a good job. He's a really nice guy and he'll try to help you learn, so I highly recommend him. Sometimes the lectures can be a bit dry though.\"",
            "review 3: \"04X with Robert S.: I think that Prof Gray worked really hard on this class. The subject matter is different from the other cs courses and is a good overview of computer architecture. At times the material and textbook weren't interesting, but Prof Gray tried his best to make the lectures more interesting by bringing in props when applicable.\""
        ],
        "Luiz F.": [
            "review 1: \"02X with Luiz F.: The lectures tended to be overly theoretical, thus useless when one tried to do the homework. The readings were heavy-handed and overloaded with material that, unless one is earnestly interested, made the class slightly boring. TA's and the professor were not always available, and when they are, everyone was clamouring for help.\"",
            "review 2: \"02X with Luiz F.: This class is not very hard. The Homeworks are quite easy. Just start them a couple of days before they are due and you can finish them very comfortably. Exams were easy provided you don't make silly mistakes. In fact, I felt that the exams tested whether you can the questions properly or not. Professor Felipe Perrone is an awesome individual although not an accomplished teacher. He is pretty easy on grading and even gives you a chance to write an extra credit paper which can boost your grade by 5%. TA's are awful. For solutions to one of the homework problems, they changed their answers thrice. If in any doubt, go to Prof. Perrone rather than wasting time with TA's.\""
        ],
        "Christopher K.": [
            "review 1: \"02S with Christopher K.: You have to admit, being able to build your own processor is pretty cool. Learning computer architecture in general and figuring out how a computer really works I find to be really interesting. Chris is even an ok prof. However, he could definitely make the class more fun. I would say the class was less work than most others. I never had to read the book until the homeworks and even so the homeworks generally only took several hours to complete. Several hours per week isn't bad at all for a class and I can't complain about the open-notes and -book exams. Anyway, it's required for cs majors so you might as well try to enjoy the course. And if you try, it's not that bad.\""
        ]
    },
    "COSC050": {
        "Charles Palmer": [
            "review 1: \"24W with Charles Palmer: Palmer is an OK professor. Palmer is an OK professor. Palmer is an OK professor. Palmer is an OK professor. Palmer is an OK professor. Palmer is an OK professor. Palmer is an OK professor. Palmer is an OK professor. Palmer is an OK professor. Palmer is an OK professor.\"",
            "review 2: \"24W with Charles Palmer: All my homies love Palmer\"",
            "review 3: \"24W with Charles Palmer: A lot of work!!!!!!!!!! Labs and final project are not necessarily hard, but they are super time consuming\"",
            "review 4: \"24S with Charles Palmer: Palmers the man. So smart and knows what hes doing. Flipped classroom but the readings and videos were pretty light and actually made it easier to learn, especially when you are able to do what the videos do on your computer. In class spent on assignments that enforced the videos. You are forced to get pretty close with your team. I would try and switch out if you see issues because the final project is a lot. Labs were actually fucked. So unbelievable hard and difficult. Coding in C is no joke. I recommend coming into this class having learned the basics of bash and C. The first week covers bash and the first few labs were chill but the tiny search engine is no joke. So much joke and only 6 days to do each of them. Save your extensions and get help early. Do not take with any other classes that take a lot of time. This is not easy but when you finish, you will be so proud of yourself.\"",
            "review 5: \"23W with Charles Palmer: If you are smart and have a lot of time to dedicate to the class - you can get an A. I ended with term with a 99 before the group projects. However, I don't know if I would suggest taking it with Charles Palmer. I don't think a single lecture taught us useful information, just about 99% of everything I learned was by myself or scrolling through the github page. The TA's were super helpful and office hours were pretty accessible. Overall learned a ton from this course, just almost all of it was self-taught.\"",
            "review 6: \"23W with Charles Palmer: This class is like fine. As others have said, Palmer is a pretty useless lecturer. Class is usually not actually helpful for completing the assignments, and most of your learning will come from googling and stack overflow. While I learned a lot, I found that this class is more of a crash course in C than actual \"software development\". I think it is definitely worth taking, though, if you can handle the insane workload. We have one lab a week and each takes 10-20 hours of work. You are pretty reliant on the TAs, who for the most part are very helpful. Luckily, if your code works you will probably get an A on the assingnments which is nice.\"",
            "review 7: \"23W with Charles Palmer: Professor Palmer himself is a nice dude, but his lectures are boring and I don't think anybody listens. The class itself is hard and time-consuming but incredibly rewarding. Do NOT take with other hard classes, once the group project comes around you'll screw over your teammates if you aren't present. Godspeed.\"",
            "review 8: \"23W with Charles Palmer: As expected, this class was hell. TL;DR, Charles Palmer is going to teach you shit and you need to learn everything yourself online. The resources on the CS50 GitHub and the videos he links made by David Kotz are super helpful. It's recommended you know a little bit of Bash and C before going into this class because I went in without much knowledge and struggled to keep up. The class is structured on a weekly Lab project basis and a final project given to your team. I was living on a week-to-week basis barely making it past each Lab despite starting early. You could try to use ChatGPT for the first couple of labs but it's not recommended because its ability to help you will decrease with later labs and you wouldn't have learned much from the earlier labs. Use office hours as much as possible (some are useless, some are helpful. Find the right TA) and go to class because your section leader will take attendance. Make sure you build good team chemistry (randomly assigned) because you need as many hands on deck as possible for the final project. Make sure you attempt extra credit on the final project because I did and it pushed my grade to an A.\"",
            "review 9: \"23S with Charles Palmer: TLDR; heavy heavy workload, but very cool projects (Tiny Search Engine and a multiplayer game!). The rest of this is basically tips I wish I had gotten, if it helps: use vscode & valgrind, do bash & c tutorial, read the assignments comprehensively, start early, ask TAs for debug help, invest in making a good group dynamic. \u2014\u2014\u2014\u2014\u2014\u2014 Professor Palmer is quite a character. Has good advice and can spot a bug from miles away, but his lectures are pretty disorganized\u2014 not just the content, but also the timing of the lectures in the bigger timeline of the term. I was so lost for the first couple weeks before I realized most of the learning was just going to happen on our own by us actually writing all the code and debugging and learning as you go, etc. (TIP 0) oops also USE VSCODE and VALGRIND gives you links you can click on to see the code where the bugs are happening. (TIP 1) My BIGGEST ADVICE is to do a bash tutorial and C tutorial (whatever your preferred learning platform, I think it\u2019s enough to just watch some youtube video 2x speed) before term starts. Palmer did like a week of messing around with bash in front of us and I retained almost zilch of the commands he taught us because there wasn\u2019t any structure it was just like \u201cthis one does this\u201d \u201cand this one does this\u201d. Plus bash is all abbreviations, so it\u2019s hard to remember which commands you want to use. (TIP 2) Also, this might be a hot take and I know it\u2019s not useful for everyone, but I\u2019d really recommend reading the requirements/design/implementation specs fullout, and the assignment instructions all the way through. And if there are learning units in the \u201cknowledge\u201d page associated with the assignment, skim them for important details, too. David Kotz who designed the course has a lot of clear instructions written out, which helped me a lot. (TIP 3) Workload was about 1 project a week, due at 10pm so if you\u2019re going to stay up late working you have to start the day before. That being said, don\u2019t do that. Get on top of the work early, start early, finish early, and go on to the next one early (because reading the assignment instructions is enough, you don\u2019t really NEED in-class lecture to start working). (TIP 4) TAs are really helpful with bugs once you have actually written the code that might have bugs (it will have bugs). Doing all of the projects was really rewarding, though. I learned so much and I feel like a much stronger coder. Plus the Tiny Search Engine and Nuggets Project are immensely cool. :) (TIP 5) Oh also, for final group project, communicate with your group constantly to make sure you are all on the same page about who\u2019s doing what, and how specifically (check to make sure your programs actually work together as you go, to decrease debugging at the end).\"",
            "review 10: \"23S with Charles Palmer: Overall, CS50 is a useful class if you're looking to work on your programming skills and gain a slight insight into what it might be like to work in the field. This class can be VERY time-consuming at times (especially finishing up the final project), and I missed out on some things as a result, but with manageable classes for my other two classes, it was all certainly doable. I'd estimate that the class takes 20-25 hours per week to complete the labs (which are the only assignment other than readings, which not many people did from what I know), and maybe a bit less for the first couple labs and if you're very good at it. The final project is the most demanding, so make sure you balance everything outside of this class. Palmer is a solid professor. I took away very little from his lectures, which sucked because attendance is 100% required, and they mark it. However, he is very knowledgeable and very easy to reach outside of class so he is good like that. TLDR: good class to take if you're into CS, it can be very time-consuming, and Palmer is a solid instructor.\"",
            "review 11: \"22W with Charles Palmer: Palmer was very nice and was always willing to help outside of class. That being said, this class was miserable. 30+ hours of work for each of the 6 labs if you don't know C or how to use git, bash, or makefiles. I can't say whether the class is better with other profs. I can say that lecture was basically worthless despite Palmer's good intentions. This course probably stole 25 hours of sleep from me and, with help from other harder than anticipated courses, ensured that I did nothing social for the term, though some of that may be attributable to my less than great time management skills. If you have experience with C, gdb, and the command line, it probably would not be as bad, but if your CS knowledge, like mine was, is comprised of little more than COSC10, be prepared for a difficult term, and try to familiarize yourself with C before taking the course. Also, start labs as early as possible. There were a number of occasions when I would start with 72 hours to spare before the deadline and I would still find myself submitting late because of the insane debugging required with C. Roughly a third of the class dropped. It's doable, but not fun.\"",
            "review 12: \"22W with Charles Palmer: HOLY SHIT WAS THIS CLASS A LOT OF WORK. You need to really understand the material to do the final projects. Labs are tough. Debugging in C is a PAIN. That said, it's the most rewarding CS class I've ever taken. I learnt so much and grew so much in confidence. Tips to survive: 1. Find a good study group to cry with 2. Start labs early 3. Go to office hours 4. Be clear with your CS10 CONCEPTS. The language matters way less than the concepts 5. Be prepared to be frustrated while debugging. It will work out in the end. Just keep trying.\"",
            "review 13: \"21W with Charles Palmer: DON'T TAKE THIS CLASS WITH PALMER. He doesn't know what is going on, and his lectures are super pointless with mandatory attendance. I think this class should be flipped classroom method. Other than that, not so easy material, a LOT of coding. Debugging C is the most frustrating part for sure. It is a lot of assignments and conceptually difficult. Don't take this class with any other class that is time-consuming/difficult, or you will fail. It is highly rewarding if you are unfamiliar with shell programming, using GitHub, or programming in C. I would try to get familiarize with the basics of these even before the course starts, since first 3-4 weeks is so fast-paced that you will have difficulty catching up with the material and assignments.\"",
            "review 14: \"21W with Charles Palmer: This class is entirely based on labs and a final project (no exams) but these assignments take a lot of time so definitely expect to spend a lot of hours writing code in this class. Debugging in C is a pain and the latter labs (TSE) also require you to write a lot of documentation so make sure you get started ahead of time. One problem is that this course is scheduled to teach the most crucial material for completing the lab like the day before the lab is due...there were several times I started early on a lab and got stuck for days trying to figure out how to do something, only to have the professor teach it to us either the day before or on the same day as when the lab is due. Lectures are also very pointless and all you do is just watch the professor read over the lecture notes and go over the sample code. I never paid attention during lectures and ended with a 99% in this course (not trying to brag - just emphasizing how meaningless paying attention to the lectures are in doing well in this course). Instead, I'd recommend just going over the lecture notes on the course webpage on your own time. Professor Palmer is not the best lecturer but very helpful in one-on-one settings. He also loves using Slack so contact him using Slack (instead of email) if you ever need his help.\"",
            "review 15: \"21W with Charles Palmer: Material is not difficult, but very very time-consuming. Totally doable if you put in the time. Palmer is fine--he mainly just reads off of the lecture notes, but everything you need is there or easily searchable online.\"",
            "review 16: \"21W with Charles Palmer: Reading the other reviews from this term, I am so glad this class went well for some of my classmates. I was not one of them. I put my blood, sweat, and tears in this class, yet I do not feel like I understand a lot of the things we discussed. I did everything I could to study and participate, but something did not click. This was the hardest I have worked on a class so far (cs10 was second), yet the worst grade I have received at Dartmouth. I am not sure what it takes to succeed in this course, but if you are like me -- struggled with CS1 and CS10 but like computer science -- wait to take this course or get a lot of help. I took two lighter courses with it and still had no time for other things I wanted to do. Heed my warning if you are not a natural computer science person! Take some other CS courses first. Side note, Prof. Palmer made time for me every time I asked, and was very patient and encouraging. Perhaps I needed to read lecture notes more than his lectures, to which I paid a lot of attention.\"",
            "review 17: \"21W with Charles Palmer: Idk why people are ripping on Palmer. He's really not bad, just a boring lecturer (so you kinda learn everything by doing), and he always answers on the slack. For some reason, I went into this class thinking it'd be easy because of the high median, but found it to be so much more work than CS10. This class was very rewarding, and for anyone interested in CS/Software, take it (also do extra credit on the final. we got like +20% for it).\"",
            "review 18: \"21S with Charles Palmer: This class is a TON of work but very rewarding. Do not take other hard classes at the same time, you will regret it. Expect to spend like 20-30 hours on the labs. I really liked Professor Palmer, he was always willing to hold extra office hours and even set up individual meeting if you are having trouble. I also liked how the class was structured around group work, but the learning fellow for my group didn't always know what was going on which got annoying. Overall great class 10/10 recommend.\"",
            "review 19: \"21F with Charles Palmer: Palmer is more a programmer than an educator. His class sessions are not incredibly useful, as he just walks through certain things (not necessarily in the best order, nor does he cover everything we need for the Labs/assignments). Personally, class was boring and a waste of time, but attendance was taken so I just showed up and worked on my assignments as he droned on. TAs were great for answering questions/helping with problems however. If you're not familiar with C, bash, etc., its not incredibly intuitive like Python so may need a bit more effort. The first week or two of bash programming is a big grind and becomes completely pointless once the second lab rolls around. Need a good group for the final project, really comes down to luck on who you're assigned to. Overall good class, learned a lot, although the style of teaching could be better.\"",
            "review 20: \"21F with Charles Palmer: Before we get to the horrifying experiences, lets start with the good stuff! Professor Palmer is a good guy and helps students outside of class, but... 1.) Whether you are watching a Netflix show in class or actively listening to Palmer, you would walk away with the same amount of knowledge about CS. The lectures were mandatory and unfortunately poor. There are videos on GitHub that condenses his confusing/boring lectures to 5 minute videos. He spends more time talking about his glory days of IBM rather than teaching understandable code, so labs are basically you using StackOverFlow to learn C. 2.) CS50 labs are tedious with scattered instructions. There a few long docs you have to read for each lab, all with random small code requirements all over the place. Oh you got your code working? Nah jk you gotta rewrite cus CS50 wants you to implement it this way. You think you are done? Nope you have to reread each of the documents to make sure you didn't miss small detail x and y. Enjoy reading! (oh and enjoy essay writing cus you have to write a lot of README.md IMPLEMENTATION.md and DESIGN.md that all say the same thing) Will your grade be fine? Probably. Is the class required for CS major? Yeah. Will you enjoy? : D\"",
            "review 21: \"21F with Charles Palmer: Honestly, although he knew a lot about the subject, his lectures were boring and hard to follow at times. It was honestly a lot of googling and working with your friends. Take this class with your friends!\"",
            "review 22: \"18S with Charles Palmer: The projects are interesting, useful, and challenging, but going to lectures is pretty pointless. Basically, you just watch the Prof follow the lecture notes and do some basic exploration of bash, scripts, and introductory C programming. Most of the learning happens through the lecture notes and doing the projects. The projects start out on the easier side and get more difficult as the course goes on. Pretty much all of the projects just take time. Annoyingly, there is a lack of clarity in terms of expectations for projects and frequently discrepancies between what the Prof mentions in class and what is in the assignment description. Sometimes these are resolved on Piazza, sometimes they aren't. Conceptually, maybe as hard as CS10, just more code. Nice not to have a midterm or final though. Also, Piazza is a significant element of the participation grade.\"",
            "review 23: \"13S with Charles Palmer: Course: Really interesting course. The very beginning was a bit fast-paced as it got everyone situated with working in unix, shell scripting, and C in just a couple weeks, but the progression of projects afterward felt very reasonable and interesting. Professor: Palmer was a pretty boring lecturer. Workload: The workload was very manageable but ramps up quickly. Since the class is 100% project-based it's important to dedicate your time to really get things right.\"",
            "review 24: \"13S with Charles Palmer: Course: Pace is too fast. Professor does not take time to explain things slowly and clearly. He just glosses over all the concepts. His lectures use a lot of advanced terminology that I have never heard of before, and I get absolutely nothing out of them. I wouldn't even know where to begin asking questions because every other word in his lecture is a word I don't know or some tripe saying that has no educational value. The directions for the lab assignments are frequently unclear, and requires a lot of assumptions to be made. Then, students are docked points for these assumptions in their grade. Asking for clarification from the professor is nearly useless because the professor is oftentimes unclear about what the assignment asks himself. One time, when a student asked if HTML tags need to be parsed out for the tinysearch engine project, the professor said to the student that choosing to parse out HTML tags is a \"design choice\". However, in the assignment, it CLEARLY says that we must parse them out. He has made many other mistakes like this as well. Professor: Lectures are also disorganized and hastily put together. Many times, the students have to help the professor understand his code in the notes, or the errors in his demos. Furthermore, the professor is only available after class and by appointment, so it is difficult for students to get help. The T.A., Ray, is also sarcastic, rude, and unapproachable. I had made a mistake in my code one time of including a .c file, and he said in a condescending tone, \"Why are you including .c files? We've told you a THOUSAND times not to include .c files.\" Furthermore, he is irresponsible and does his job terribly. Ray had only graded Lab 2 by the time the last lab was assigned, and he and the professor have the audacity to lecture us on time management. Workload: The professor himself has said that the material the class covers is way beyond what should be covered in one quarter. If that's so, he should do something about it rather than just try to cram all that material into such a short time. It obviously can't be done effectively. Sure, some students have learned most of the material before, or are just very fast learners, but what about those who need more time to figure things out? The class gives off the impression that those people don't matter. Most importantly, though, the professor is a (I think fulltime) employee at IBM. It's pretty obvious that being a professor is not his priority. This is by far the worst class I've taken at Dartmouth. I can't believe Dartmouth has best Undergraduate Teaching, yet have a class like this. No one should take this class.\""
        ],
        "Xia Zhou": [
            "review 1: \"22S with Xia Zhou: This class is an absurd amount of work, and most of it is pretty mundane busywork IMO. I wasn't personally a big fan of coding in C, although the class will convey the merits of the language. I also didn't think the labs were that conceptually interesting, so that made all the coding more of a chore. On the other hand, I think the class does teach software engineering principles well, and Zhou is a decent lecturer who is available for help outside of class. TL;DR: For me it was sort of a meh class, it was irritating just how much time the assignments took up and I didn't find anything in the class particularly fascinating. But I took it as a major req so I didn't have a choice. YMMV.\"",
            "review 2: \"21X with Xia Zhou: If you're a CS major, you basically have to take CS 50. So might as well take it with Zhou. She truly respects her students and tries her best so that her students understand the material. Some of the TAs are super helpful and will exactly pinpoint your memory leaks and help you solve them. Start early on the labs so that you have plenty of time to debug. Test your code rigorously so that you're super confident there are no memory leaks. I managed to get a 100% on all six labs thanks to this. I would recommend saving this class for sophomore summer if you're a CS major because you probably already took CS 30 by then (one of the few other CS major courses offered in the summer) and I'd rather code than do math during sophomore summer. With that said, don't take this class with another super time-consuming class like ENGS 21. Your friends will be like \"where have you been all summer?\"\"",
            "review 3: \"21X with Xia Zhou: Hard class, a lot of work, but totally doable. some tas were annoyingly stingy with grades, but others were chill. prof posts recorded lectures that are mildly helpful, but is great if you ask for help outside class.\"",
            "review 4: \"21X with Xia Zhou: Not a huge fan of Zhou because I thought she was generally bad (but not terrible) at explaining things and answering questions. At least she was nice I guess. To be honest there wasn't a ton of conceptually difficult material that was taught, this class is pretty much all about just getting comfortable using command line and using C (C can be pretty annoying). But the projects definitely took some time, obviously try to start them early and they'll be manageable. This is a similar amount of work to what CS10 was, if anything 50 is slightly less.\"",
            "review 5: \"21X with Xia Zhou: Not an easy class by any means, but manageable if you start the labs early and put in enough hours. Don't take it with other hard classes or your grades all around will suffer. Would recommend taking it during sophomore summer if that's an option for you. I liked Prof Zhou and thought her lectures were good, but the class meetings were not super useful in that she just reviewed things from the lecture so you only needed to pay attention to either the videos or the in class sessions. The labs weren't the most interesting and we were given the pseudocode for essentially all of them, but you learn good documentation and some basic git skills along the way.\"",
            "review 6: \"20X with Xia Zhou: Really great professor, super nice and caring and very understanding. Answered SO many questions so often and has incredible patience. Really just wanted to see everyone succeed. Great prof, recommend taking with her, I have NO clue how people on her said she was an awful prof, literally one of the sweetest people alive\"",
            "review 7: \"20X with Xia Zhou: (Remote due to COVID) I read some reviews on here and honestly went into the class nervous about a prof that's reviewed as either the best or worst professor ever. Now that I'm coming out of the class, I'm honestly baffled rereading some of the reviews. Prof Zhou doesn't leave a big impression, but she seems like a very qualified professor that always tries her best. The class was remote and thus adopted a flipped classroom method, where we would watch her recorded video lecture and show up in Zoom for an activity with an assigned group (that's also your final project group). Prof Zhou honestly did her best to answer everyone's questions and was always available if you ping her for questions. My only frustration with the course was that the assignment information was disorganized (e.g. some hints in the lecture video, some on the assignment page, some on github, and more in a miscellaneous link found elsewhere) but this seemed to be a problem more with how assignments were passed down from prof to prof than with Prof Zhou personally. Learned a lot, would definitely recommend taking CS50 with her\"",
            "review 8: \"19X with Xia Zhou: Xia Zhou is the worst professor I've ever had at Dartmouth; I don't think I have the words to explain how terrible this class was. Obviously I came in knowing it would be time intensive and difficult, but both she and the TA's made it more difficult than it needed to be. She doesn't explain anything at all during lecture, and the TA's simply didn't show up to their assigned hours. She was incredibly rude, and even though I voiced concerns early on she wouldn't help and didn't care if her students understand course material. The TA's would grade all my projects incorrectly, so watch your grades like a hawk. I was given a 60 on an assignment but I think I ended up earning a A-/B+ once the corrections were made. The final group project at the end can be wonderful or terrible depending on your group, which you have no control over. I had a deep passion for CS, but this class made me rethink everything. I think Vasanta is now teaching this class and she is a godsend\u2013the best professor I've had at Dartmouth\u2013so if you can get into her class DO IT!!!!\"",
            "review 9: \"19X with Xia Zhou: Best CS class I've taken at Dartmouth hands down. You're only ever given assignments (no midterm or final), which is great because all the profs and TAs are super helpful during office hours and in class, all the lectures are recorded, it's not super hard to get points back during regrades, guest lectures were great, and overall it's just a very well organized class. Sure, if you aren't ready to be coding for hours every day, you might not have a great time because that's often what this class demands, but otherwise it's really great.\"",
            "review 10: \"19W with Xia Zhou: CS50 with Professor Zhou is awesome. Her communication skills during lectures are lacking, but she is very good at teaching during office hours. The concepts of the class are very straightforward. While the functionality of the code is graded, the main focus of the class is on having neat, readable code and documentation of that code. There are only 6 labs and a project, and they really are not hard, though they will take a while to document so start early. There are no exams either, so it's really not necessary to learn all of the information. If you finish your labs early, which is doable, you'll find this class to be a complete layup with no other work to do. Otherwise, you'll spend the last day of the lab stressing to get it done. Also, Zhou has the easiest final project so take it with her.\"",
            "review 11: \"18X with Xia Zhou: Run away. Don't walk. Prof Zhou is the worst prof I've had here in 2+ years. Poor communication. Moves too fast. Lectures are worthless. You will work a ton (perhaps too much material for a 1 unit class) in this class and you will receive little to no feedback along the way (constructive or otherwise). She does not have the interest of her students in mind- or seem to care that you learn the material. The material itself is straightforward enough- thank goodness, as I had to basically teach myself the concepts with the help of the TA's. I used to enjoy CS. Not so much anymore. Despite her best efforts, I still managed a good grade- but it required a lot of work outside of class- hitting any and all available resources to complete the projects.\""
        ],
        "Christopher S.": [
            "review 1: \"09W with Christopher S.: I'm honestly not sure what to say about this class. The homework assignments were REALLY hard and I ended up spending tons of time on them. Midway through the term we finally got some of the homework assignments back and I found out I'd done pretty badly on them, so I was really discouraged and aggravated because I'd put more work into this course than any other class I'd taken. However, I ended up getting a good grade in this class so honestly I'm not sure how much your homework grades even count as far as the final grade you receive. The final project wasn't too bad--the assignment was kind of impossible overall and I don't think anyone really completed it, and there was a lot of aggravation with the robots not working, but it didn't really matter in the end I guess. You do end up putting a lot of time in for the project though. Mostly I'd say go into this class expecting to put a LOT of time in and be really frustrated that you can't do all of the homework assignments fully or correctly, but know that you'll probably end up with an okay grade in the end.\"",
            "review 2: \"07W with Christopher S.: really hard class, lots of work, although the grades ended up really high\"",
            "review 3: \"07S with Christopher S.: What an awesome prof...Chris McDonald has a sweet aussie accent and I had a lot of fun in this course as well as learning more about how to find help on my own and how to deal with working in a group. It was definitely a different dynamic programming in a group for the second half of this class, and dealing with all the source control and communication issues that this presents is an important lesson to learn before heading out on a cs internship. The labs for the first half of the course were very easy (5 in all, the first one or two were not graded), and we had a break for about two weeks in the middle of the term while we were planning our final project, so this didn't feel like as much work as a typical cs course...\"",
            "review 4: \"07S with Christopher S.: This is a VERY time consuming class. Both the problem sets and the final group project will force you to have late nights in the lab. The key is the group project (50% of grade) and having a good group dynamic from the start. Make sure that everyone understands the problem and his/her own responsibilities from the start. Also, each team member should be hassled to get their work done early. You don't want to be in a situation where one team member has finished his work but it can't be tested because the other group members haven't started yet with their parts!\"",
            "review 5: \"06W with Christopher S.: Yes, all the rumors you've heard are true - that's a tough class, it will swallow up all of your free time, and if you don't survive it you'd better reconsider the CS major. On the other hand, this class is SO MUCH FUN and you learn tons within the 10 weeks of term. I feel like I've gotten more out of this class than any other I've taken at Dartmouth. Chris is a good prof, he has this fascinating Australian accent and a fresh sense of humor. However, we never got back any code we submitted for the short assignments, so I couldn't really figure out where my weak spots in C programming were or how to fix them. Other than this, the class is totally worth it and you do end up feeling like you can go out into the real world and contribute to a large project.\"",
            "review 6: \"06W with Christopher S.: You will have to do a LOT of coding, especially towards the end of the term. That being said, you will learn how to code pretty well and gain confidence from having completed a relatively large-scale software project. A big part of this course is learning to teach yourself what you need. We were often pointed in the direction of documentation instead of given simple responses. While this was initially annoying, by the end of the term, you no longer need a professor to hold your hand while you code, which is a satisfying feeling.\""
        ],
        "Stephen Taylor": [
            "review 1: \"23W with Stephen Taylor: Condescending professor. Cut me off before I could finish every time I went to ask a question and fixated on whatever he perceived to be bothersome in my code rather than my actual question. As a woman POC I sensed that he was more friendly to the white male students. Class was a \"flipped\" format so we would have to watch recorded lectures from several years ago outside of class in addition to do the assignments, while class is just a work session. This class and the vibe that the professor gave off was one of the worst experiences I've ever had. If you're in the mood to be mansplained to by an old white man, take this class.\"",
            "review 2: \"23W with Stephen Taylor: Unengaged prof and teaching. This class was all self-learning, and the prof did not even remember his 3-year-old prerecorded lectures. Bad experience overall. Learning-wise, you are definitely better off with the COSC section instead of the ENGS prof. Grade-wise, however, this class was definitely easier to get an A since it is all completion-based and you do not have a final project.\"",
            "review 3: \"23F with Stephen Taylor: I have no good things to say about Stephen Taylor as a professor. This course is entirely self taught, he just has videos that you watch, and modules/labs to complete. In addition there are weekly quizzes that are worth 20% of your grade, but they're basically from the textbook. The only saving grace of this course is that it is completion based and done in groups of 3 from week three and onwards. But honestly, it feels like not enough TA office hours coming in from CS10, and the you don't even have to come to class save for getting your work checked off, because I cannot emphasize enough how Prof. Taylor does. not. teach. The class is very hard without a prior knowledge of C, github and unix. He also feels somewhat condescending, it feels like especially towards women. This class made me quit CS.\"",
            "review 4: \"23F with Stephen Taylor: This class is awesome and if you're going to take it, take it with Professor Taylor! The class is entirely flipped classroom and automated such that you can pace yourself through the course. As a result I managed to have the bulk of the course completed by week 6. Class time is basically like office hours and since nearly no-one goes to class, it ends up being a great biweekly 2 hour block to work on assignments and get debugging help from Professor Taylor. Professor Taylor will equip you with all the tools necessary to excel in this class, all you need is to have the ability to think. He does not hold your hand in debugging code, but guides you towards developing strategies to debug your own code.\"",
            "review 5: \"23F with Stephen Taylor: I decided to take the ENGS 50 section instead of COSC 50 because I thought it would be less workload and I would not have to wake up 4 days a week for a 9L. All of that was true. Classes were essentially optional office hours because the class itself was a flipped classroom. There were a few video lectures on Canvas, but besides that, you\u2019re on your own. Taylor does not lecture in class and does not explain concepts basically at all. I think Taylor is a very nice human being and pretty lenient at times with grading, but he is not a good professor. He expects you to know or at least figure out everything (including debugging) on your own. That being said, the actual project of building a Tiny Search Engine (TSE) is done in a group of 3 students. However, if your group is not on the same page or doesn\u2019t do work, you\u2019re basically stranded to do everything on your own or get a horrible grade. Each module is graded out of 10, which means 1 mistake and your grade drops to an A- or worse. Grading-wise ENGS 50 is MUCH HARDER than COSC 50, and I would pull multiple all-nighters to make sure I got an A in the class. If you\u2019re thinking about taking ENGS 50 because it\u2019s \u201ceasier\u201d than COSC 50, that may be the case, if you\u2019re willing to do everything on your own. If you don\u2019t have the time to do everything on your own, don\u2019t even think about taking this course. COSC 50, while more time-consuming has so much more STRUCTURE, and thus is easier. Plus the grading for COSC 50 is out of 100 for labs and much easier to get an A. Overall, you\u2019re going to risk a lot of time and effort on this class, and it is A STRUGGLE. Best of luck. Maybe try to take COSC 50 with your friends and suffer the 9L.\"",
            "review 6: \"19F with Stephen Taylor: If you take this course, take it with Taylor. Hands-down the best CS course I have taken at Dartmouth. The Professor is extremely engaging and interested in your success and you are graded on completion. The course is split into modules where you incrementally build a search engine. The workload is fair and you are paired with a partner from week 3 onward. Be warned though, the course assumes you are able to work independently. Professor Taylor will be there to help but he does not hold regular lectures and instead provides you with pre-recorded videos that you can access whenever you wish. You are also expected to use the man pages(you will find out what that is, don't worry). Overall, an excellent course that is relatively easy if you are willing to figure some stuff on your own. Not for those who want their hand held at every tiny step of the way. If you stick with it, you will get an A. Almost everyone did.\""
        ],
        "Andrew Campbell": [
            "review 1: \"15S with Andrew Campbell: I really enjoyed this class. CS50 is not hard conceptually - we actually spent many of the lectures going over how to do the homework. The workload is very heavy however, with 2 big projects: one Tiny Search Engine project that is divided into 3 sub-projects over 3 weeks, and one final group project over the last 2 weeks. Just take it with 2 manageable classes, don't procrastinate, and you'll be fine. Prof. Campbell is also a great prof, very accessible during office hours and very good at explaining concepts in class. Overall I highly recommend this class for anyone interested in becoming a CS major/minor.\"",
            "review 2: \"08W with Andrew Campbell: The main challenge in this class for both students and professor I think is that it is simply intended to cover too much. It really is not possible to thoroughly cover software development principles AND *nix AND C (not that I ever think learning a specific language should be the focus of a course, but pointers and manual memory management are nontrivial subjects for some students) in only one term. The class starts out reasonably slowly, covering *NIX commands/shell-scripting and some basic software design principles. It then progresses to challenging but enjoyable labs in C. I was lucky enough to be familiar with C before starting the course, and I still found the labs to be a fairly significant amount of work, so especially if you do not already know C, be warned that the labs are nothing to start the night before. The final team project, which from what I hear has changed considerably over the history of the course, involved robotics and distributed systems this term. It was a very interesting and practical final project, and I enjoyed it greatly. Time-wise, however, it's a bit of a crunch and I definitely found myself a bit short of sleep during the last week. The course was newly revised for this term, and Campbell seemed genuinely interested in hearing students' opinions on how it had turned out and what worked/didn't work. The newly revised nature of the course did make it feel a little disorganized at times, but both Campbell and the TA were very friendly, helpful, and available. A couple last notes: If you have the opportunity to run linux on your own machine, I highly recommend that you do so. You will then be able to do most of the labs from the comfort of wherever you like to work, rather than being confined to Sudikoff lab 001 (not of course that there's anything wrong with the lab). If you already know C/C++ and have a decent reference book, I don't recommend buying the course book. For better or worse, the course is no longer taught with K&R C, but merely with some fairly generic C textbook/reference book that you can save about $70 on if you don't need it.\"",
            "review 3: \"08W with Andrew Campbell: Just a great course. Campbell is an ideal professor for it. If you can take it, do. One caveat, however: the final project can take some time, and you'll have to schedule around it because of the deadlines. I wouldn't take this course if you are worried about studying for your other courses during reading period.\"",
            "review 4: \"08W with Andrew Campbell: First time this course was taught. We were often given faulty code to work with and obscure, unclear directions and instructions for assignments. I was never able to complete a single assignment without extensive clarification and help from the TAs. This should improve as the course is taught more.\"",
            "review 5: \"08S with Andrew Campbell: Professor Campbell is entertaining and does a decent job at shoving a whole lot of material at us in the time allotted. Any prior knowledge of UNIX (and/or C) makes this class significantly easier. The lectures were sometimes repetitive (eg. a week going over the same lab). I think many students stopped taking notes after the first few weeks. This class is more about coding and doing than it is sitting in a classroom - there is a strong emphasis actually programming that forced us to get good at writing C. The real burden is on students to learn the language themselves, through homework. Overall, it was enjoyable and worthwhile. The end project is a lot of fun.\""
        ],
        "David Kotz": [
            "review 1: \"23W with Charles Palmer: As expected, this class was hell. TL;DR, Charles Palmer is going to teach you shit and you need to learn everything yourself online. The resources on the CS50 GitHub and the videos he links made by David Kotz are super helpful. It's recommended you know a little bit of Bash and C before going into this class because I went in without much knowledge and struggled to keep up. The class is structured on a weekly Lab project basis and a final project given to your team. I was living on a week-to-week basis barely making it past each Lab despite starting early. You could try to use ChatGPT for the first couple of labs but it's not recommended because its ability to help you will decrease with later labs and you wouldn't have learned much from the earlier labs. Use office hours as much as possible (some are useless, some are helpful. Find the right TA) and go to class because your section leader will take attendance. Make sure you build good team chemistry (randomly assigned) because you need as many hands on deck as possible for the final project. Make sure you attempt extra credit on the final project because I did and it pushed my grade to an A.\"",
            "review 2: \"23S with Charles Palmer: TLDR; heavy heavy workload, but very cool projects (Tiny Search Engine and a multiplayer game!). The rest of this is basically tips I wish I had gotten, if it helps: use vscode & valgrind, do bash & c tutorial, read the assignments comprehensively, start early, ask TAs for debug help, invest in making a good group dynamic. \u2014\u2014\u2014\u2014\u2014\u2014 Professor Palmer is quite a character. Has good advice and can spot a bug from miles away, but his lectures are pretty disorganized\u2014 not just the content, but also the timing of the lectures in the bigger timeline of the term. I was so lost for the first couple weeks before I realized most of the learning was just going to happen on our own by us actually writing all the code and debugging and learning as you go, etc. (TIP 0) oops also USE VSCODE and VALGRIND gives you links you can click on to see the code where the bugs are happening. (TIP 1) My BIGGEST ADVICE is to do a bash tutorial and C tutorial (whatever your preferred learning platform, I think it\u2019s enough to just watch some youtube video 2x speed) before term starts. Palmer did like a week of messing around with bash in front of us and I retained almost zilch of the commands he taught us because there wasn\u2019t any structure it was just like \u201cthis one does this\u201d \u201cand this one does this\u201d. Plus bash is all abbreviations, so it\u2019s hard to remember which commands you want to use. (TIP 2) Also, this might be a hot take and I know it\u2019s not useful for everyone, but I\u2019d really recommend reading the requirements/design/implementation specs fullout, and the assignment instructions all the way through. And if there are learning units in the \u201cknowledge\u201d page associated with the assignment, skim them for important details, too. David Kotz who designed the course has a lot of clear instructions written out, which helped me a lot. (TIP 3) Workload was about 1 project a week, due at 10pm so if you\u2019re going to stay up late working you have to start the day before. That being said, don\u2019t do that. Get on top of the work early, start early, finish early, and go on to the next one early (because reading the assignment instructions is enough, you don\u2019t really NEED in-class lecture to start working). (TIP 4) TAs are really helpful with bugs once you have actually written the code that might have bugs (it will have bugs). Doing all of the projects was really rewarding, though. I learned so much and I feel like a much stronger coder. Plus the Tiny Search Engine and Nuggets Project are immensely cool. :) (TIP 5) Oh also, for final group project, communicate with your group constantly to make sure you are all on the same page about who\u2019s doing what, and how specifically (check to make sure your programs actually work together as you go, to decrease debugging at the end).\"",
            "review 3: \"21S with David Kotz: This class was just as much work as every other review said it was, but I honestly found it pretty easy to get a good grade by putting in the hours and meeting all the requirements for each lab. However, I am writing this review to give fair warning that David Kotz is by far the worst professor I have ever had at Dartmouth. He is apathetic and always responds to honest questions with snarky comments. I usually like these brutally honest professors that tell it as it is, but he was a complete dick multiple times when I asked questions about his ambiguous instructions. He also refused to give extensions on work even for one of my group mates who had to fly back home for a funeral. I highly recommend taking this class because of the usefulness of the course material, but be warned if you take it with David Kotz, it is no surprise to me that he is the new Dean Lively.\"",
            "review 4: \"21S with David Kotz: This time-intensive course teaches the fundamentals of C programming, memory management, and debugging. Objectively, the material is very interesting and empowering to any CS major. This course certainly rewards hardwork, long nights, and even some prerequisite familiarity with basic bash and C concepts. However, BEWARE taking this class with David Kotz. He is condescending and intimidating, and his demeanor on slack and with lab feedbacks was unnecessarily disparaging. I tried to enjoy this class as much as possible, but Professor Kotz was without a doubt the worst professor I've ever had at Dartmouth.\"",
            "review 5: \"21S with David Kotz: This class was very informative but time consuming. The flipped classroom format was great for getting questions answered, but we were never actually taught anything. The \"lecture\" videos were short and not really helpful, so it was basically a teach yourself kind of class. Very frustrating class in general but Kotz tries his best to make it interesting. Very time-consuming... make sure you block out time to go to office hours.\"",
            "review 6: \"16S with David Kotz: I'm in it right now and it's not that bad!\"",
            "review 7: \"16S with David Kotz: Do not, I repeat, do NOT take this class with David Kotz. He is, without doubt, the worst professor I have ever encountered at Dartmouth. He is unhelpful, arrogant, and cannot teach. His lectures consists entirely of him coding on his computer while haphazardly explaining a fraction of the things he does. He scrolls too fast to make it possible to take notes, and often changes things or makes additions without any explanation. To make matters worse, his programs DO NOT WORK half the time, with lectures often ending late and with him ensuring he'll put the \"correct\" version later online. He is cold and biased. Participation is based entirely upon his impression of you, not on actual attendance or even your \"piazza participation.\" I've had friends contribute nothing and get full scores, and vice versa. His assignments were awfully paced. His first 6 labs were extremely simple and straightforward. To compensate, he made the final project was a shit show. It was essentially a competition of which group could drink enough red bulls and sacrifice their other classes. It was unnecessarily long and did not at all test our coding or critical thinking skills. It was just brute force coding. \"Full score\" on the lab was 65%... you needed to do even more tedious \"extra credit\" in order to achieve a decent grade. And your payoff for all this work? 1 or 2 lined feedback that together would be a fifth the size of this review. Overall, David Kotz has singlehandedly converted me from a passionate CS major to a student that gets nauseated every time I even look at Sublime. I don't think I ever want to take another CS class, not to mention another class with him. I'm sure he's a very accomplished CS professional. He was just an unacceptably poor professor.\""
        ],
        "Michael J.": [
            "review 1: \"06S with Michael J.: I love everything about this class..My group was great and everything went well...At first when you look at the assignments you wonder how you are going to do it but by the end you won't even realize that you have finished it... Very time consuming but worth it...I'll definitely take the course over again...\"",
            "review 2: \"06S with Michael J.: mike does a very good job\"",
            "review 3: \"06S with Michael J.: This course is definitely part of the Sudikoff foreign study program. The course load picks up towards the end of term and the final project requires a significant time commitment. Michael is a fantastic prof who made the hard work manageable and even enjoyable. CS23 is a fun class in which you actually do something practical. I highly recommend it.\"",
            "review 4: \"06S with Michael J.: This course might be reworked soon from what I hear, but as it is taught now it various a lot from student to student what you might or might not get out of this course. The \"textbook\" is really just a tutorial on C. We use C in 3 out of the 4 required labs, and it's really not enough to learn it well but it's a nice intro to C for those who haven't had experience with it. (It's a really rushed and forced intro to C at that). However, in the major part of the course (the final project) we didn't wind up using C at all. In that sense this course is kind of trying to be too many things at once. Yes, you get to program a LOT, and learn how to use version control, and JUnit testing, etc. You also get exposed to the C and Unix environment, which every developer probably should know. Maybe it's just trying to squeeze too much into one term? The way it was structured we read the entire C textbook in two weeks and we had quizzes on the reading every class period during those couple of weeks. So in the first 2 and a half weeks, if you don't know all 3 of Unix, C , AND Java, you'll be doing lots of teaching yourself. This whole course is about teaching yourself really.... Oh yea, but if your group works well together and your project comes together in the end, it's all pretty rewarding!\"",
            "review 5: \"04S with Michael J.: Welcome to \"FSP Sudikoff\". There is a reason that's the nickname: at the end of the course, when doing my final project, my partner and i were doing nearly 40 hours a week for this class. It will consume your life. That said, you come out feeling smarter, and will definitely be proud of your project. Michael is a great teacher. At the time I took the course, he was still a grad student (but there's a reason Dartmouth lets him teach hard courses, and that's because he is a truly great techer). He'll be in Sudikoff at 2 AM on some weekends, ready to help and all. He also gives at his AIM screenname and his blitz, so he definitely makes himself available. If you can take a course with Michael, do it, because he's one of the better CS instructors... Now for the material. Hmm. The first 5 weeks are pretty straightforward, that is, you have an assignment per week, and you go to the lab and do it. Lectures are mostly just to familiarize students with the C language, and some basic paradigms that are required by later concepts (i.e. socket coding). Each assignment builds in complexity. Then you have the final project. Michael canceled lectures from that point on, instead requiring weekly 'check-ups' to make sure the projects were getting done. All projects in our class were based on 'image processing' from webcam data. All of the previous assignments were made with this in mind, so the material you learn in this class is very specific to the final project. Be warned: IMAGE PROCESSING IS HARD. Every member is our class deserved an A (with few exceptions) simply based on the time commitment. You ARE, however, expected to have a working project for the demo day, and you MOST DEFINITELY cannot put off the project until the last minute. Anything good about CS23? Well, you come out with something that is truly your own - nobody has done your project for you (the ideas themselves try to be as original as possible). This isn't a cookie-cutter course where you learn design paradigms; you get your hands dirty from the start. The other good thing is that you def. bond with oyur classmates (there were 12 students in my class). Sudi 001 will be your torture chamber for 10 weeks, but hey, you're all being tortured together.\""
        ],
        "Vasanta Lakshmi Kommineni": [
            "review 1: \"20S with Vasanta Lakshmi Kommineni: Vasanta is the best. She is the kindest and most accommodating professor in the CS department. For instance, she gave us free 24-48 hour extensions for over half of the labs to make sure we could get more help and finish. Go to her office hours, and seek clarification for anything you're stuck on or don't understand. It will save you so much busy work, and most of all, you will learn so much.\"",
            "review 2: \"20S with Vasanta Lakshmi Kommineni: Hands-down an amazing professor for this class, even after knowing that it was her first time teaching. Since COVID hit hard this term and we were all remote, the term was P/F, but everyone who took the course passed. The labs were long, as always, but Vasanta made the knowledge required for each of them very accessible and explained things very well through her recorded lectures. Having a friend as a TA definitely helped, as whenever I had a question, I could just text them--most probably won't have this, but there were daily office hours and according to others in the class, they were always pretty helpful in solving bugs. We also used slack instead of piazza this term, which was a really nice change as it allowed for both final project team communications and quick responses to anyone's questions with lots of followups without cluttering the screen.\"",
            "review 3: \"20S with Vasanta Lakshmi Kommineni: Vasanta is a super nice professor who really tries and cares about her students! It may have been because of the online term, but the class was a little disorganized, with 24 hour extensions sometimes being announced 2 hours before the lab was due and materials being posted late. The assignments may seem intimidating at first, but they are all pretty straightforward. Would highly recommend taking with Vasanta, as she is really considerate and caring.\"",
            "review 4: \"20S with Vasanta Lakshmi Kommineni: Vasanta is one of the best CS professors to take a class with!!! She was so accommodating for the class and always made the material accessible. Even though CS 50 is notoriously hard with lots of coding, Vasanta had lots of help available for understanding the concepts and debugging. For the final project, she gave us a much easier assignment with making Sudoku, which was very fun to solve AND didn't involve the CS 50 servers that frequently crash when other students work on the final project. She's incredibly kind and caring about her students and wants everyone to succeed. Definitely learned a lot and didn't want to die.\"",
            "review 5: \"20S with Vasanta Lakshmi Kommineni: Vasanta was an outstanding professor. I would highly recommending taking this or any class with her. She was accommodating and always cheerful in lecture. The class was a lot of work but the projects were all interesting and any CS major would surely enjoy completing them\""
        ],
        "Kristen McNall": [
            "review 1: \"02S with Kristen McNall: The class in theory is based on an excellent idea. Make the students push to learn new material. Unfortutely this visiting prof was SWAMPED with CS 5 at the same time. Lectures were alright. Some of the stuff was relevant, yet it could be found on the website, so there wasnt really a point to going to classes. Working with a team was fun at first, but then got to be a real chafe when type A personalities collided. There was a TON of work to do in the last 2/3 weeks of classes that pretty much took up all my time\"",
            "review 2: \"02S with Kristen McNall: CS 23 is meant to teach CS majors UNIX and C++. By completing several moderately-sized homeworks and one major group project, the student is forced to learn both and learn them well. Prof. McNall, however, was a visiting prof who had no idea how to teach college students, especially with the inevitable overly-enthusiastic members of the class constantly leading her on pointless tangents and trivia. Despite the fact that I attended (and stayed awake) through every class, the lectures taught me nothing. All the work was done by the students outside of the class. That means you're paying thousands of dollars in tuition to learn C++ on your own. On the plus side that means you learn how to pick up a programming language on your own. On the negative side it means a huge time commitment (i.e. you will neither be sleeping nor socializing). The whole group project also teaches you how to work with others (something many CS people tend to lack) and how to mix very different styles of coding itno a cohesive whole. However, the division of the projects into parts tends to make you learn only the pieces of C++ you need to make your part work. While I would say that I know the pieces I needed really well, I would also say that I have little to no idea how to use pieces of C++ I didn't need. These range from minor things like enums to major issues like error handling. With no need to use these things in my pieces, I never picked them up on my own, and with the prof not actually teaching anything in class, you can't pick them up there, and with all your time consumed by your parts of the project, you're complete lack of freetime prevents you from just reading about them for fun (or for future use once you hit the real world). Furthermore, the prof had no control over her graders so we didn't get the comments on our homework until the night before our final project was due. (Think: \"Oh, does that mean I need to have memory management in the six thousand lines of code in my final project?\") Overall, I think the course is based on the good concept to teach CS majors the skills they need to know: UNIX, C++, how to plan a project, how to work with others, how to follow through on coding and interworking pieces for a major project, and how to learn by doing. Even with a horrible prof, the class was a good experience if only for the bonding experience of the group, so I think with a halfway decent prof the course would actually be enjoyable and the time commitment wouldn't be nearly as obscene.\"",
            "review 3: \"02S with Kristen McNall: First of all, people recommend taking only one other class with this one. They're right, because you will spend a LOT of time on it. However, even though it's hard, it's great fun. You learn how to manage a large project and how to work on a team. You write thousands of lines of code, go through writing requirements, testing, manuals, etc but at the end you've got something really impressive (in our case a database program) It's also probably the most useful course if you are going to work with CS later on. I can't really comment on Professor McNall, since the main focus of this course is on the project and the team work, and the prof has limited influence on the experience. However Kris made a good job guiding us. The baseline: don't take this if you're not going to be a major, but otherwise enjoy it.\"",
            "review 4: \"02S with Kristen McNall: McNall's lectures were largely incomprehensible, although maybe that is due to her complete lack of a teaching background (She used to be corporate). There are much better Computer Science profs here at Dartmouth, so you have no excuse for any course with her.\""
        ],
        "Thomas Cormen": [
            "review 1: \"02W with Thomas Cormen: Not as bad as rumors say the class is. You will definitely spend time in Sudikoff, though. This is the most intersting and mind bending class I have taken here at Dartmouth. I recommend it to those who are up for a challenge.\"",
            "review 2: \"02W with Thomas Cormen: The general concensus is that when you take CS23 you will live in Sudikoff, and that's just not true. My team had extremely disciplined time management and we decided that we will dedicate at least a couple of hours each day to this course and our project, and we did well, didn't pull any all-nighters in the lab. It's not as bad as what most people tell you, but you will be spending a great deal of time on the course. Don't expect to take this class, 2 other classes, and have an active extra-curricular schedule.\"",
            "review 3: \"02W with Thomas Cormen: If you are taking this course, you're probably a CS major. It's definitely an experience, I worked more for this class than for any I've had so far. Attending class itself is essentially unnecessary after about the 4th week, since by that point you already know enough to do the project, which is your only remaining grade. The readings are useful, but most of the books are essentially reference volumes, so you don't need to stick directly to the syllabus. You'll use them plenty when you're coding. As far as the project goes, GET STARTED EARLY! But along with that, THINK ABOUT WHAT YOU'RE DOING! You can really waste time by duplicating functions, redoing things another group member has already done, doing something completely wrong, etc. so think it through before you start coding. The time commitment isn't as bad as everyone says - our team was probably the furthest behind, we pulled two all-nighters in the last two weeks of the term, but that was because we didn't spend much time in the lab before then. Prof. Cormen is a great prof, very funny and interesting. The prof is somewhat irrelevant to this course, although he did give us several very helpful suggestions (listen to what he says about birthdates (you'll see)!!!). This course is not so much about learning book knowledge as it is about really learning how to work in a team on a big project. Your life will be tough while taking this class, but it's a good experience, and very applicable to the working world.\""
        ],
        "Temiloluwa Prioleau": [
            "review 1: \"21F with Temiloluwa Prioleau: Honestly, the content of this course is super cool and applicable, and you learn a ton during the course. That said, it is a TON of work (talking 20-25 hours per week outside of class), but if you commit yourself to scouring the notes and doing practice outside of class then honestly the entire experience really isn't that bad! As for Prioleau, It's quite frank that she doesn't really know what she's doing (she pretty much just reads out the class notes during class), so don't expect to really learn too much from the lectures. Instead, I learned best by talking through problems with the LFs who were honestly life savers and talking through things with my group members. All in all though, it's a fine course as long as you are prepared for it.\"",
            "review 2: \"20W with Temiloluwa Prioleau: Bad class, boring lectures, and not a very engaging or confident prof. All the assignments were individual and a ton of work. Take this class with literally anyone else.\""
        ],
        "Stephen P.": [
            "review 1: \"05S with Stephen P.: The stuff was good, the prof. did absolutely nothing, choose your project wisely and prepare urself2devote some time\"",
            "review 2: \"04W with Stephen P.: When you start spending 16 hours straight in a computer lab you know something's wrong. What were they thinking when they designed this course? Sure, if you didn't have any other classes, you could likely take this class and be only moderately overworked. Linder is the worst professor in the history of the universe, he taught absolutely NOTHING. Luckily the class was full of geniuses and they basically taught him (and me as well). The only good part about Linder was that he let you do whatever you wanted, which means even though you had to figure everything out on your own, at least he wasn't nitpicky about what you did. I wish I hadn't spent $40,000 to teach myself though. The thing is though, the class itself is very interesting. It's basically just programming, and it's a lot of fun, even though it takes an insane amount of programming. And classes were cancelled for us for the last 4 weeks or so, which means we just got to code all the time and not bother with going to classes (which were useless anyway). Bottom line, you take this class, you don't sleep all term. And DO NOT GET LINDER.\""
        ],
        "Timothy Pierson": [
            "review 1: \"22F with Timothy Pierson: This is one of those classes where, by inherent design of the course, you have to figure out everything on your own. You just don't learn that much from looking at the lecture slides; all the learning happens outside of the classroom, through working on the projects. I've heard some people say this class is easier than CS10, but I think that's completely false. Yes, there is a lot of annoying, but not too difficult documentation stuff (\"design principles\", they say --- it's really just busywork.) But in addition, you have to deal with a bunch of random memory leak, pointer, and C syntax shit that I would classify as a conceptual difficulty. I guess the real difficulty of this class is that it's a black hole that eats all your time away. Maybe the first two lab assignments don't take that long, but by the end it takes at least 20 hours (in practice, it's even more) to do one. But the worst is the final project. I've heard that they skill match members on your final project (i.e., they intentionally pair the good students with the bad.) As such, you're very likely to get one member who either doesn't know how to do anything, and/or doesn't want to do anything. Even one free rider is enough to send your group spiraling - personally, I spent over 40 hours working on my group's final project, much of it having to fix my partners' parts. As for the prof: I love Pierson as a person, but his somewhat dry lecturing becomes much more prominent in this class than it was in CS10. He also enacted a new final project that was sort of cool (Blackjack through web sockets), but ended up being much harder than other past CS50 final projects were (because of said web sockets.) Pierson did try really hard to get some class engagement going by having activities at the end of each class. But often, there wasn't enough time to finish said activities before the class ended. If I had any recommendation for Pierson, it would be to hold his office hours at a more accessible time --- one day before each assignment deadline is too late. But even with that all in mind, I don't really think that the CS50 prof you get matters that much; again, all your learning happens outside of the classroom. As for the TAs: they sucked. This isn't a class where everyone has the exact same answer; as such, the TAs would pretend to look at your code for five minutes, then \"give up\" and claim they couldn't figure out your issue. Same thing with the learning fellows, except they were, on average, even more clueless. This lack of support made the class even more stressful. Overall, I ended up hating this course more than either of CS30 or CS31, which says something. While you have more guarantee over what grade you're going to get, you pay that insurance in a whole lot of time.\""
        ],
        "Gevorg Grigoryan": []
    },
    "COSC049": {
        "Prasad Jayanti": [
            "review 1: \"03F with Prasad Jayanti: Thanks to the material involved, this class has a tendency to get difficult at times. In the first week or two, the class covers infinite sets and similar things, and it can be hard to grasp some of it intuitively. All of the material builds on itself until the very end, so going to all the classes is important. My main issue with this class was the grading style. Initially, it was extremely harsh, and everybody would lose 5 points at random for being \"not rigorous enough\". As time went on, the graders lightened up somewhat, but getting good grades on the homework was still difficult. The tests were both takehomes. We had a week to work on the midterm, and 48 hours for the final (which takes place during the regular finals period, so be prepared to either do poorly on this one or not study at all for your other finals). That all said, Prof. Jayanti is great. If you have to take this class, make sure to take it with him. He enjoys teaching the material, and this helps a lot in making it interesting.\"",
            "review 2: \"03F with Prasad Jayanti: This course is really hard. Many CS majors actually modify their major to avoid taking it. I wouldn't say it's worth doing that, but definitely do not take another hard course in the same term as this one. Professor Jayanti is one of the best professors I've ever had, though, and the lectures were consistently interesting and informative. His excitement about the material was contagious. So if you don't have to take 49, don't! But if you do, be sure to take it with Professor Jayanti.\"",
            "review 3: \"03F with Prasad Jayanti: Professor Jayanti's lectures are full of life. The man himself is knowledgable and passionate about the course subject. He delivers effective lectures and actively answers questions raised in class.\"",
            "review 4: \"03F with Prasad Jayanti: If I hadn't already taken a theory of computation course in the math department, this course would have put me off the subject forever. The homework is repetitive, the lectures are amazingly slow, and I found the grading standards to be much more concerned about whether you followed specific patterns in your writeup than whether your answer was correct and rigorous.\"",
            "review 5: \"02F with Prasad Jayanti: Jayanti, like most CS profs, is excellent. He has a knack for teaching complex theory in such a way that it seems trivial, which can almost make the class a little boring at times. Not only does he make it easy to learn, his Indian accent is a kick to listen too, and nothing beats watching him impersonate finite state automata. This is a fun class with a great prof. Take it if you have the chance!\"",
            "review 6: \"02F with Prasad Jayanti: if you are a computer theory nerd then you might like this class. jayanti is excellent at explaining the concepts and he's a really engaging prof. the exams were way too hard compared to the homeworks and i wasn't really interested in the subject matter. this course is required for the cs major (minor also, probably). i would say try to take it with jayanti because he's really good. one bad thing is that the median grade was set pretty low.\"",
            "review 7: \"02F with Prasad Jayanti: If you're considering taking this class, you're probably either (a) a major and have to take it, or (b) a minor and *should* take it. Independent of whether (a) or (b) applies, take it with Jayanti. Or at least take *some* class with Jayanti. The man is easily the best teacher I've ever had, in any subject and at any level. Jayanti actually received ovations after a few of his more beautiful lectures. I don't know if this is common at Dartmouth, but I certainly hadn't seen it before. The only exception is if you, in Dijkstra form, are not an anthropomorphization fan. Jayanti is the king of personification. E.g.: \"I split myself up into three incarnations and suddenly there are three Prasads\" (on nondeterminism). Personally, I find that this pedagogic style leads to ease of understanding and entertainment, but some people find it distracting or annoying. I found the material fun, too; but that's just me.\"",
            "review 8: \"01F with Prasad Jayanti: This course was even better than I expected. I really liked the material, but Professor Jayanti made the class fantastic. He was interesting and funny, and he made the material much more interesting than it otherwise would be. I'd recommend taking any class with him, especially CS 49. Be prepared to think, but it's well worth it.\"",
            "review 9: \"01F with Prasad Jayanti: Not the most interesting material, but a good class nonetheless Jayanti is an amazing lecturer, really inspires interest\"",
            "review 10: \"01F with Prasad Jayanti: Although the topic is interesting, the professor definitely makes the course. His lectures made the difficult material easy to understand and his cheerful attitude also made the course a pleasure to take. I would suggest taking any course that he teaches.\"",
            "review 11: \"01F with Prasad Jayanti: First of all, taking this class without Jayanti would've been a million times different. He is absolutely one of the best professor's at dartmouth, and his enthusiasm is contagious, almost. Unofortunately I found this class only mildy more interesting than 21 and 25. My only other gripe about the class was that I thought the exams were pretty hard. Sometimes you just won't get a problem even after 3 days, and that can really kill you when you're not allowed to work in groups.\"",
            "review 12: \"01F with Prasad Jayanti: Not only is this some of the most interesting material in the computer science department, Prasad makes the class a joy to go to. His animated lecture style and anthropomorphic methods make him high on my list of professors at Dartmouth. You'll be hard pressed to find a better professor than Prasad. If you take one course beyond CS 25 (a prereq), take this one!\"",
            "review 13: \"01F with Prasad Jayanti: This review isn't so much about the course, though CS 49 does cover some interesting topics. I'm convinced that Prasad can make any CS course you take. I have had Professor Jayanti for CS 15 and now 49, and the energy and clarity he lectures with is amazing.\""
        ],
        "Amit Chakrabarti": [
            "review 1: \"06W with Amit Chakrabarti: ..then you should definitely take this class. The structure of the class is a little unusual. For the first 2 or 3 weeks, Prof. Chakrabarti lectured, covering the basics of information theory. Then we began reading research papers on applications of information theory to a range of areas (with special emphasis on communication complexity). These papers were presented in turn by the students, with an occasional introduction by Prof. Chakrabarti. These presentations had ups and downs. Prof. Chakrabarti's lectures were clear and well-structured. The students' were a little less so, so unless you had read the paper being presented pretty thoroughly it was often hard to follow. On the other hand, when it was your turn to present, you had to read your paper *really* carefully, digesting it for weeks. So that gave some hands-on experience in reading research papers, a useful skill if you're considering grad school. Even if you work in industry, you might occasionally want to apply serious theoretical work. Graded work is not much, and include only 1 assignment (based on the basic material in the first few weeks), the presentation, and 1 lecture's worth of class notes (which you have to LaTeX, as you do the assignment). So most of the work is really up to you: read the papers, especially your own. To sum up, if you're mathematically oriented, and into theoretical computer science, you'll enjoy this class. If not, you probably won't.\""
        ],
        "Peter Winkler": []
    },
    "COSC049.04": {
        "Prasad Jayanti": []
    },
    "COSC040": {
        "Amit Chakrabarti": []
    },
    "COSC039": {
        "Amit Chakrabarti": [
            "review 1: \"23W with Amit Chakrabarti: There\u2019s another review with the class breakdown, so I won\u2019t go into detail about that. The class itself had interesting content but it\u2019s tainted by the fact it\u2019s taught by Amit. His lectures are very dry and not engaging at all. The content was interesting at least, and I think if another prof taught it I would recommend this class\"",
            "review 2: \"23W with Amit Chakrabarti: Professor Chakrabarti is one of the best lecturers I've had in the CS department. He made the class very interesting yet intuitive. There were 7 HW sets worth 35% of your grade. The HW sets were sometimes tough, but I just went to office hours when I was stuck, and the TAs were helpful. A unique thing is that you get 3 bonus points for submitting each HW on time, and you can submit 1 day late for full credit but no bonus points. The HW sets were usually 45-60 points each, so the 3 bonus points each week really helped. There were 2 exams, a midterm (worth 20%) and a final (worth 27%), but both were take-home and open notes -- which took a lot of stress away from studying and cramming. The exams were similar in format to the HW sets. Lastly, there were 2 quizzes throughout the term whch are taken in-class and are closed notes. But the quizzes only count for 7% each, so if you do poorly under time pressure it's not too big of a deal. Overall, the class was one of the most interesting I've taken at Dartmouth, but it's not a layup.\"",
            "review 3: \"07F with Amit Chakrabarti: Amit is a tremendous prof. He knows the stuff - does all the lectures without notes. Any question you ask, he understands exactly what you're wondering and nails the answer. The material is hard but very rewarding - form a study group and you'll be fine. Excellent class - lots of work though, so don't take it with a really hard class.\"",
            "review 4: \"07F with Amit Chakrabarti: Amit is a fantastic lecturer. (And has impeccable handwriting.) Definitely recommend taking it with him. In general the course reminded me of CS19 or CS25 except not quite as time consuming or stressful. The topics are all pretty interesting, and even when I didn't completely understand something thought it was pretty cool. Finally a good explanation of P and NP! Pacing was a bit of a problem - some of the homeworks were really challenging and took a LOT longer than others, so beware. Probably not a good idea to start the night before anyway. Difficult to get an A - Amit doesn't give them out easily, but the curve isn't bad. All in all, solid class.\"",
            "review 5: \"05W with Amit Chakrabarti: Prof. Chakrabarti is impressive and really knows his material so understanding the topics will not be a problem for even the slowest student. However, the exams and quizes can be somewhat damaging; these comprise of 5 or 6 questions, each carrying quite some weight and sometimes no partial credit may be awarded so be careful. It can get really painful when you had the idea but didn't come up with the right solution. After all your efforts you just might get rewarded with a 0 on a 20 point question and that's really damaging. Regardless, the course material is not too difficult and the class is a lot of fun. Just be thorough with your final solutions and perhaps your grade will not be too disappointing.\"",
            "review 6: \"05W with Amit Chakrabarti: After taking algorithms I was kind of dreading how much work and how difficult this class would be. But Professor Chakrabarti kept me interested and on top of the material the entire way. His lectures were incredibly clear and sometimes it's pretty amazing to see him deliver difficult proofs on the fly with incredible clarity and precision. The workload can be rough, but it wasn't as much as I expected and on the whole I would say it wasn't as much as in algorithms. Working in groups with your classmates on the homeworks is a good idea. Exams can be rough because the difficulty ramps up and you can't use your classmates as a crutch to help you out on them. On the whole, I liked the class a lot and am happy that I had the opportunity to take a class with a prof. as gifted as Prof. Chakrabarti clearly is.\"",
            "review 7: \"05F with Amit Chakrabarti: This was a good class, much better than algorithms.. the material was more interesting and not as difficult (at first anyway, it gets hard toward the end). The book is good also, and Amit taught the class well, he makes things easy to understand and he's very responsive to questions. I would say he's nearly as good as Prasad, and that's saying something.\"",
            "review 8: \"05F with Amit Chakrabarti: Chakrabarti is a clear lecturer and does a good job presenting the material. The course is less time consuming the algorithms and equally interesting.\"",
            "review 9: \"05F with Amit Chakrabarti: wish there hadnt been stuff in class that wasnt in any text... class notes would've been great\"",
            "review 10: \"05F with Amit Chakrabarti: This class was extremely educational and one of my favorite classes so far at Dartmouth. However, it will be pure hell if you are mathematically inexperienced. The concepts are very interesting and fun, but if you fall behind you'll be in trouble fast. Highly recommended for CS and Math majors.\"",
            "review 11: \"04F with Amit Chakrabarti: Just to preface this review, I hate CS Theory, but as a CS major, I am required to take the classes. This course is a ton of work and the tests actually make your brain hurt. If you don't like theory, modify your major if possible because these classes cause major stress headaches. Both the midterm and the final are killer.\"",
            "review 12: \"04F with Amit Chakrabarti: CS 39 provided an interesting new perspective on computers, and I enjoyed exploring the capabilities of different formal models of computation. Some of the classes got a little slow with multiple-day proofs, but some days were filled with important examples so it's pretty risky to miss class. The math was not particularly difficult, if you can keep up with the theory it shouldn't be any more work than 25 (i.e. a lot but not worth modifying your major to avoid)\"",
            "review 13: \"04F with Amit Chakrabarti: People have modified their majors to avoid this class. I don't think it was quite worthy of that but it comes close. The workload is much like CS25, with the exception that it starts significantly easier and ends with homeworks of almost impossible difficulty. 2 in-class quizzes were managable, but the midterm and final are amazingly more difficult than the rest of the homework material. Amit is a great prof but if you miss class you will sorely regret it... you NEED class notes for pretty much everything you do, and he will do proofs in class that you can use on the homework which are not provided anywhere else including the textbook. Don't take this class with other tough ones, or do a 2-class term if you can spare it.\"",
            "review 14: \"04F with Amit Chakrabarti: I see a lot of tough reviews out there. This class was hard, indeed. Computer Science is hard, folks, wear a helmet. This class is about 3 times as interesting as CS25. This class is about 1/3 as hard as CS25. Those are honest figures. Professor Chakrabarti is terrific. He's very responsive to students, and kind. He's super-clear when it comes to explanations and answers. Yes, of course, the final exam had 60% median, and the homeworks were too hard. Whatever, he curved pretty hard, and hopefully future instances of the class will be a little easier. Theory of Computation is definitely more fun than it sounds, and is NOTHING compared to the pain of 25.\"",
            "review 15: \"04F with Amit Chakrabarti: It's a major class, but it's not very fun.\""
        ],
        "Hsien-chih Chang": [
            "review 1: \"21W with Hsien-chih Chang: This is the best zoom class I've taken - the material is interesting and Hsien is great at keeping students engaged during lectures. Half of classes are \"working sessions\" where you work on problems in groups like a recitation which are really helpful and fun. Homeworks are short, one or two problems, but they can be pretty challenging. Exams are similar to homework/working session problems, but were also a bit challenging. Overall, highly recommend!\""
        ],
        "Peter Winkler": [
            "review 1: \"16W with Peter Winkler: I come from a math background, and this was the first CS class I've taken at Dartmouth. I found the course material to be really interesting (those who like logic and algebra would probably like it the most) and the pacing was reasonable overall. Grades were based on three exams: two midterms each worth 25% and one final worth the remaining 50%. Prof. Winkler assigns homework for every class, and even though it doesn't count directly towards your grade, he says that doing well (or doing poorly) can bump up (or bump down) your final grade at the end of the term. Based on my experience in the class, this may actually be a bigger deal than you would think initially, because the exams were very difficult. In my opinion, this was because a lot of the more interesting course material (esp. in the second 2/3 of the class) involve writing proofs, which is sometimes very hard to do under the time pressure of an in-class exam, especially since the proofs often required some clever trick or insight. That is my only complaint about the class - if the exams had been take home and I had had more time to really think through some of the proofs, the class would have been perfect.\""
        ],
        "Hsien-Chih Chang": [],
        "Prasad Jayanti": [],
        "Sean Smith": []
    },
    "COSC035": {
        "Amit Chakrabarti": [
            "review 1: \"19F with Amit Chakrabarti: DO NOT TAKE A CLASS WITH PROF CHAKRABARTI. DO NOT TAKE ANY CLASS WITH HIM. HE TAUGHT CS 31 AND WRECKED PEOPLE'S HAPPINESS. GO READ HIS REVIEWS THERE. YOU WILL THANK ME LATER\""
        ]
    },
    "COSC031": {
        "Prasad Jayanti": [
            "review 1: \"23F with Prasad Jayanti: First of all - jayanti is amazing. Such a awesome guy, he's genuinely interested in math and wants to get you interested in it as well! Never thought I would say this but I found CS30 with him to be interesting...got me even thinking about being a mathematician. Take this with jayanti if you can, hands down. That said, it is a hard class, and even if you study your hardest you're likely to make a bunch of dumb mistakes when you get to the exams (at least, I did). So unless you have a lot of experience with discrete math already, its definitely really challenging. The one area you have a lot of control over is the homework though, so make sure you do as well as possible on that because it can save your grade. His class was 40% homework problem sets (for accuracy, but you can check them with the TAs as much as you want), 20% midterm1, 20% midterm2, 20% final. The first two midterms aren't that bad, so do as well as you possibly can, because the final is rough and gets the lowest average by far. Overall, super nice prof, hard class, but you can power through it and leave with an actual appreciation of math and why people like doing it. Best of luck\"",
            "review 2: \"22W with Prasad Jayanti: Professor Jayanti's lectures are great and he's just an overall great person - I'd highly recommend anyone to take CS31 with him. I honestly felt that the material wasn't paced quickly at all; most times we spent the first half of lecture reviewing exactly what we had learned during the last lecture. Problem sets are difficult and some questions are impossible to solve correctly without going to office hours. Even if you can solve it, just go to office hours anyways because the TA's will take off points for the smallest things or if you don't exactly solve the same as the Professor's approach. Course structure was 25% weekly psets, 25% midterm 1, 25% midterm 2, and 25% final. Honestly I didn't find the class much harder than 30 - I liked not having drills and the exams were very similar to stuff covered in class. Just make sure to review things from CS30 if you forgot how to write proofs because you will be writing a lot of proofs throughout the class.\"",
            "review 3: \"22W with Prasad Jayanti: Loved Jayanti. Loathed this class. Honestly Jayanti could not have made it any better. His lecturing is amazing and the topics are interesting, but if you weren't the best at CS 30, don't expect that to change in 31.\"",
            "review 4: \"22W with Prasad Jayanti: Overall, I enjoyed this class. Course structure was 25% HW, 25% Midterm 1, 25% Midterm 2, 25% Final. You had 3 late days for the HW that you could use whenever (dont use them all at the beginning though!!!). Midterm 1 was ok, Midterm 2 was hard, and Final was really hard (but was graded really nicely). the class is curved which is nice. The hardest part about this class wasn't so much about solving the problems but how to write them up and prove it. For me, I struggled the most with the HWs because they would take forever to do. Make sure to make a study group to do them together. I took 30 with DeepC and my take was that DeepC's HWs were easier but tests were harder. Know the material well and review early and you'll be ok as long as you're super careful on the exams about what you write.\"",
            "review 5: \"22S with Prasad Jayanti: This class is going to be hard no matter what, but you should definitely take it with Jayanti. He's the goat literally such an amazing prof, he will make your experience in this difficult class much better. Also, though the class is difficult, it's very doable (at least with Jayanti's structure). The course material is also very fun and algorithms are really cool. Finally, an added benefit is he will go over difficult dynamic programming, divide and conquer, and greedy algorithm questions that can show up in technical interviews in CS, which can help you in recruiting.\"",
            "review 6: \"20W with Prasad Jayanti: I got the worst grade I've ever gotten at Dartmouth in this class simply because it is so freaking hard. That being said, Jayanti is the best prof I've ever had. He's so funny, and you can tell just how much he loves teaching and loves algorithms. Compared to some of the other profs in the CS department (like Chakrabarti), Jayanti is a sweetheart and blessing to all the students\"",
            "review 7: \"20W with Prasad Jayanti: This course was challenging but fair. Prof. Jayanti is one of the best communicators/teachers I've ever seen. If you're going to take COSC 31, take it with him!\"",
            "review 8: \"20W with Prasad Jayanti: Jayanti is one of the most inspiring and passionate professors ever, especially in the CS department. That being said, this class will destroy you if you don't have a support system of classmates that you know to work on problem sets with and can't make any/few office hours. It is a commonly dropped course if you aren't prepared to put in a significant chunk of your life into understanding the material and then agonizing over problem sets. TAs can be pretty anal about taking off points and you may need to fight for them back over email.\"",
            "review 9: \"17W with Prasad Jayanti: Thoroughly enjoyed this class, one of the few classes for me so far that has been intellectually engaging, rather than just being a quarter of debugging code. That being said, this class is certainly not a light workload, but also quite manageable if you budget your time well (~15 hours per week outside of class). A certain attendance percentage was mandatory, but regardless of the points attached, there is no good reason to skip any of Jayanti's lectures, which are the best I've ever had at any school. The type of person who I'd imagine would enjoy this class are the people who enjoy riddles, math related or otherwise. Midterm and final were take-home, spread over several days, so if you are concerned about being time-crunched, this was much better than CS30. Best homework results usually come from forming groups with other students, attending office hours, and working together to come up with solutions, writing up homework individually. The curve is probably a little tougher than most of the lower level classes since the students taking algo tend to be self-selecting.\"",
            "review 10: \"17W with Prasad Jayanti: Despite Jayant's unbelievable lecturing, I can't give a positive review for the course because of the course's poor structure. The course's assignments, namely weekly problem sets, are structured in a way that disincentives the student from trying the problems on their own. The problem sets consisted of 6-10 extremely difficult questions that would then be graded meticulously by the course TAs upon submission. The course offered help hours almost every day of the week where the TAs would write and explain all the answers to the current HW on the chalkboard. Students would try to memorize these answers and then work on the HW in groups or look up the answers on the internet to fill in any gaps they still had from the help hours. Of course, working in groups and using the internet was not permissible, but this was not really enforced. Most of the questions were taken from a widely used textbook with answers available on the internet. Thus there was little incentive for the student to devote much of their valuable time to solving the problems on their own, as all the answers were given away during the help hours. Even more frustrating was the exams. Both the midterm and the final were take home. I heard rumors by several students of widespread cheating on the exams. I talked with several classmates whose names I will not mention who claimed that it would be \"irrational not cheat, since the professor had no way of knowing if you cheated.\" I, for one did not cheat on the exams and found my score to be much lower as compared to other students scores then it normally is for a CS course. Normally in CS courses, I score >10% above the median. In CS31, I scored 20% below the median. This would seem to suggest there was cheating. Another student also mentioned to me that he asked some of his higher scoring classmates about questions on the test and he found that they could not explain to him or recall how they solved many of the problems, indicating they probably copied the answer rather than found it themselves.\"",
            "review 11: \"09F with Prasad Jayanti: Incredible, and incredibly difficult. Prasad is easily one of the best professors I've had at Dartmouth, and makes this class really enjoyable. If you're thinking about taking this class, chances are you have to anyway, so my only advice is be prepared to devote much of your term to it.\"",
            "review 12: \"09F with Prasad Jayanti: This class is fascinating, but as an incredible amount of work. You cover an incredible amount of material, and get legitimately useful practice at developing algorithms to solve problems. It feels like solving really challenging math riddles. It's hard, but it feels rigorous and worthwhile as a result. This has already been said plenty, but Prasad is a master teacher. He's the rare professor who is not only incredibly knowledgeable about the material, but knows how to explain it so that everyone understands it. Here are some tips for the class: -Work on problem sets in study groups. Try to establish one early on, around 2 or 3 people with similar ability to yours. You'll get to know these people pretty well. -Don't rely on other people too much: If you don't understand what's going on, you'll get killed on the exams. Make sure that you can explain it all back in full to a partner or a TA on your own. -Go to Office Hours and TA Hours. Sometimes, this is the only way to realistically solve the problems. Work on it as much as you can on your own, then meet with your group to see what you can put together, then go to office hours/TA hours to finish the problem set off. This is not an extreme approach. The problem sets are hard, and by doing this you can basically guarantee that you won't lose many points on them, giving you more of a buffer for the exams (which are very, very challenging.) *Note: Do this from the first problem set. They grade strictly, and a lot of people took the first problem set for granted. Don't be one of those people. -Start Early. You always hear it, but this is a must for this class. You had better be pretty close to having complete answers by Monday, as Monday and Tuesday are Office Hours/TA days. Relatedly... -Writing Up Labs: takes *forever* so take that into account. Some people hand-wrote everything, but I have no idea how they survived doing that. By the end of the semester, most of the class was using LyX to write everything up (http://www.lyx.org/). It takes 20 minutes to learn pretty completely, and will save you hours upon hours. -How to Solve Hard Problems: It seemed like a lot of the time, you figure out hard problems when you're not working on them, like in showers or while going to sleep. Starting early on problems gives you more time to be churning on the problems in the background. Also, we rushed the material at the end of the course a bit, and it was a big part of the final. Be aware that this could happen again, and go to office hours to make sure you understand all of the material well in advance of the final. Good luck!\"",
            "review 13: \"08S with Prasad Jayanti: jayanti is amazing, and i really liked the material, but i spent 20+ hrs/wk on the weekly problem sets and take homes (midterm and final, the midterm replaced that week's pset).\"",
            "review 14: \"08F with Prasad Jayanti: I'm going to be honest here: Algorithms is hard (but keep reading!). (Note: if the following large block of text seems unappealing, there's a one-sentence summary at the bottom) Algorithms is a tough course which will require between 10 and 20 hours for the problem sets per week. Most of this time will be spent proving things, so if you have a knack for mathematical proofs, you should be able to pick this course up no problem. That said, I strongly recommend you work in groups for the problem sets, regardless of your mathematical background. A lot of the problems are more easily solved by brainstorming out loud (and using a blackboard/whiteboard!). Also, if you get stuck, go see Prasad. He is more than willing to provide a hint to get you going in the right direction. At this point, you may be asking, \"If it's so much work, why take the course?\" Well, there are two reasons. First, the material is genuinely interesting, and you will derive immense satisfaction from solving the truly challenging problems you're faced with. Second, the professor, Prasad Jayanti, is truly amazing. He does a great job teaching the material and keeping you interested. His enthusiasm and energy have no match. He truly makes the course fun. Finally, if you need additional incentive to take the course, both the midterm and the final are take-home (the midterm replaces a weekly problem set). To sum up, Algorithms focuses on proofs and will require a considerable amount of work; however, it is a lot of fun due to both interesting subject matter and an amazing professor.\"",
            "review 15: \"07F with Prasad Jayanti: Incredible. Best course I've taken. But be warned: very difficult; may require brainpower.\"",
            "review 16: \"06S with Prasad Jayanti: take it with him\"",
            "review 17: \"06S with Prasad Jayanti: This course is what you're at Dartmouth for. Prasad is an extremely good lecturer; he makes the most difficult concepts seem simple and intuitive. The homeworks--and the midterm and final, which were just homeworks you must do individually--were very difficult. However, they are always doable with what you've learned in class. This class is a challenge, but it's rewarding if you put in the effort. I came away not only knowing more about algorithms but also more confident in my ability to solve tricky problems of my own accord.\"",
            "review 18: \"06S with Prasad Jayanti: Very tough class, but Prasad is an excellent prof. Don't miss any classes, and expect to spend lots of time on the weekly problem sets. Definitely go to Prasad during office hours - he is great at guiding you to the answer. Exams are pretty much the same as the homework (take home), but you can't work with anyone or get help on them.\"",
            "review 19: \"05F with Prasad Jayanti: Prasad is great at explaining the concepts of the course, both in class and in office hours, and is very responsive to students. While the homework is definitely difficult, seeing prasad in office hours makes it much easier.\"",
            "review 20: \"04S with Prasad Jayanti: This class is impossible unless you're a genius. That's basically what it comes down to. Prasad is god-like, he can take the most difficult material and make it seem trivial. Of course, when you try to do it yourself, you realize it's just because he's brilliant and you have no hope. When you take this class, do your best to get Prasad. He's like a life boat in a sea of misery.\"",
            "review 21: \"04F with Prasad Jayanti: The class itself (especially the exams) are very challenging. Jayanti is an amazing prof. Not only is he clear, but he's funny as well. I can't imagine taking this class from anyone else, so if you have the chance to take this class from him, definitely do it.\""
        ],
        "Deeparnab Chakrabarty": [
            "review 1: \"24W with Deeparnab Chakrabarty: Amazing prof. This class is difficult, but Algorithms is a difficult course in any college you go to. No way around this if you're a CS major, so suck it up and try to enjoy it. DeepC is a genuinely good dude. He came in on Saturdays to do office hours - never seen another prof do that for us. Do the extra credit because it'll help you when you bomb your exams.\"",
            "review 2: \"24W with Deeparnab Chakrabarty: B+ class median. Class was good however I think Deepc can be a little overhyped. Having taken CS30 with Chang, I thought both classes were decent and not that dramatically different from one another. Homeworks were alright and tests as well. Both midterms had 80% medians with the final having around a 60% but he said that was by design. Lots of extra credits that could maybe push you to the next grade no guarantees, at the end of the day they\u2019ll at least give you more practice for the exams. Overall, don\u2019t be afraid to try CS31 with another professor like Chang as the experienced are not that different and I ended up with the same grade with similar levels of effort.\"",
            "review 3: \"24W with Deeparnab Chakrabarty: DeepC is the GOAT of the department. His lectures are extremely informative and he is a master of the material he teaches. In addition, he posts notes for every one of his lectures which are not only in-depth and reflect the lecture material completely, but also offer additional insight that helps reinforce the content. This class is pretty hard. However, weekend office hours, problem solving sessions, and the professor genuinely caring about wether students understand the material makes taking this class with DeepC the single best thing choice you can make as a CS major. (if you're not cs... why are you taking this class.....)\"",
            "review 4: \"22S with Deeparnab Chakrabarty: Extremely challenging class. I'd say this class is harder but less stressful than CS 30. First, TAKE THIS WITH DEEPC IF YOU CAN!! DeepC is the best lecturer I've had and possibly the best professor in the department. Every time I went to a lecture and paid attention (as opposed to watching the lectures online) I came out with a solid understanding of the material he taught. The TAs were also pretty reliable as well. In terms of assignments, you'd have a pretty time consuming problem set, a coding assignment, and a few optional assignments due every week or so. The challenge and stress, for me, came from the problem sets. They often take these \"aha\" moments that can elude you after hours and hours of trying. If you're smart, you'll go to TA hours and avoid those hours of wasted time trying to chase those \"aha\" moments. Getting a good grade on them also requires quality proofwriting, which is such a hard thing to gauge as a beginner and again requires TA assistance if you want to be sure about them. I say this because I rarely went to TA hours and I bombed a problem set or two because of mistakes I would've noticed if I had asked about them. I'd also definitely recommend finding a group of classmates early on to work with, the problem sets were way harder when I tried doing them alone. That's all I really have to say. This class is something you just have to suffer through as a CS major. You'll learn a ton of useful practical stuff though, and DeepC is a great lecturer and a compassionate guy, so definitely suffer through it with him if you can.\"",
            "review 5: \"22S with Deeparnab Chakrabarty: If you're a CS major, there's no getting around this class. So might as well take it with DeepC. He is not just one of the best professors in the CS department (both with respect to knowledge and teaching), but also compassionate and approachable; as many of the other reviews have noted, he indeed takes the time to get to know everyone in the class. His lecture notes are also the best I've ever seen, not to mention the Ungraded Problem Sets were a godsend in terms of practice problems. Grading was as follows: drill quizzes after almost every class (10%; each quiz averaged out of 2 attempts; some slack on this grade component), 4 coding assignments (10%), 7 problem sets (30%; +1 bonus point on each problem set (capped at 100%) if handed in 24 hours earlier than the due date), midterm (25%), and final (25%). In addition, Advanced Problem Sets and \"Engagement\" (what this actually entails is vague) could pad the non-test (drills + coding assignments + weekly psets) grades by up to 4% and 1%, respectively. The drill quizzes actually got kind of hard by the end, but the slack provided on this deliverable means that it's not that big of a deal if you mess up. The coding assignments are straightforward, although they were somewhat vague in terms of the output desired. The problem sets actually weren't really that hard, although you should still make sure to go to office hours just to make sure you did them correctly. Advanced problem sets are definitely trickier and usually requires going to DeepC for a hint or two. Engagement is vague and not really worth doing. The midterm was reasonably fair and had a solid 71% median. However, the final was a nightmare with a 59% median, much harder than any of the practice materials (including the practice test provided.) In particular, the wording on one of the questions discouraged students from trying an idea that was, in reality, the actual solution to the problem... yeah, I'm still kind of annoyed about that. Another criticism I have is that I felt like the max flow/min cut reductions could've been taught better. Despite the two small complaints above, I encourage every CS major to take this course with DeepC. If DeepC as a person and his resources don't convince you, then think of it this way: assessments are only 50% of the course grade with DeepC, whereas with other profs such as Jayanti, it's more like ~75% of the course grade...\"",
            "review 6: \"22F with Deeparnab Chakrabarty: DeepC was a great prof, but compared to Jayanti (who I had for CS30), I liked Jayanti better. I thought DeepC's teaching style and lectures, though carefully explained and well-done, were a bit confusing for me as I felt some of them depended too heavily on the fact that there were typed lecture notes to go with each lecture. Though having the lecture notes was nice, I personally felt they were incredibly dense (just paragraphs of packed text explaining a proof) and weren't that helpful. Whereas with Jayanti, although he didn't give out lecture notes, I came away from each lecture with my own detailed notes and clear understanding. After DeepC's lectures I was often confused honestly and I thought sometimes he moved too fast through things, especially glossing over proof techniques which ended up being like half the points in problem sets. As for the class itself, I thought it was harder than 30 but more interesting. Harder in the sense that you not only have to come up with the algorithm definitions and pseudocode, but also write proofs for it afterwards (whereas 30 was just the proofs). However I thought material was much more interesting and DeepC does a great job of explaining high-level concepts. He's also super nice outside of class and took almost an hour helping me understand a concept in office hours. TA office hours are also essential for some of the problem set questions.\"",
            "review 7: \"22F with Deeparnab Chakrabarty: Really good lecturer, hard class but very manageable if you have the time to go to office hours. The exams were very difficult but the practice exams were good study resources.\"",
            "review 8: \"21W with Deeparnab Chakrabarty: Very difficult but that's the nature of algorithms, at least DeepC tried (sometimes unsuccessfully) to make it manageable. The pros: fantastic teaching, great office hours, the best lecture notes I've ever seen. The cons: absurdly difficult at times. The midterm was a nightmare and included a dynamic programming monster that virtually everyone bombed. The final was much more reasonable and had a solid B- median. Also, he doesn't sugarcoat the math - if you're bad at proofwriting, you're going to have a bad time. That said, the same applies for any algorithms class, regardless of prof.\"",
            "review 9: \"21W with Deeparnab Chakrabarty: CS31 has been my favorite class at Dartmouth, and DeepC is easily the best professor I have had, although I have heard great things about Prof. Jayanti too. The hardest part for me was writing proofs and communicating algorithms; even as a math major who is mostly used to writing proofs, it often took me only a few minutes to come up with an algorithm, but hours to write it all down. So, be prepared to use those proof writing skills from CS 30! This is by no means an easy class, so make sure you have enough time to devote to it. I recommend doing the advanced problem sets to be more than prepared for the tests and trying out all problems on your own before going to office hours.\"",
            "review 10: \"21W with Deeparnab Chakrabarty: Deep C is a prof that really cares about his students and about the class in general. However, this meant that there were a ton of assignments and that CS31 could take over your life if you weren't careful. There are short easy quizzes after each lecture, weekly problem sets and advanced problem sets, and bi-weekly coding assignments, as well as the 24-hour midterm and the 36-hour final. The sheer amount of assignments can get super overwhelming, but that's just the nature of the course. Deep C is clear about his high expectations, is a great prof who explains all the concepts extremely thoroughly, and makes himself available for help. Overall would recommend taking with him, but try to choose easy classes to take this with.\""
        ],
        "Robert Drysdale": [
            "review 1: \"07S with Robert Drysdale: Algorithms is hard. Really hard. But, it's supposed to be that way, and you learn to deal with it. At the end, you realize how much you've learned about approaching interesting and difficult conceptual situations, and how to solve them elegantly. It's a cool feeling. Prof. Drysdale is really nice, but his explanations of the material often require significantly more thinking to figure out what he means.\"",
            "review 2: \"07S with Robert Drysdale: This class killed me...worst grade i've gotten at dartmouth. Drysdale's really nice though and he manages to be interesting despite the kinda dry subject\"",
            "review 3: \"07S with Robert Drysdale: The problem sets for this class require a TON of work every week. My advice would be to start early and definitely find a group of people to work with. I would especially recommend going to office hours as much as you can. Drysdale was very helpful in office hours, and you are much more likely to get a higher grade if you take the time to go to office hours. Not an easy course for anyone, but everyone works hard throughout the whole term, so you have to stay on top of things.\"",
            "review 4: \"07S with Robert Drysdale: Lots of work and tough material, but overall pretty interesting.\"",
            "review 5: \"06F with Robert Drysdale: This class is pretty difficult but its definitely doable. Just work with other people on the homeworks and get an understanding of the material. Drysdale is a really cool and nice prof. Don't worry, you'll have LOTS of late and sleepless nights working on the homeworks.\"",
            "review 6: \"05S with Robert Drysdale: Hardest class I've ever taken in my life, but take this with professor Drysdale he's an amazing resource and excellent in lecture\"",
            "review 7: \"03F with Robert Drysdale: The material for this class is really interesting, in that it teaches you new ways of thinking. Unfortunately, learning these new ways requires banging your head against the wall for hours on really hard problem sets. Prof Drysdale is very helpful though, I highly recommend going to his office hours, frequently.\"",
            "review 8: \"03F with Robert Drysdale: CS 25 is a very hard class. Median grades on the midterm and the final were in the 40% range, which, given that you can buy hints on exams, is quite low. If you've never taken an algorithms course before, be prepared to think hard and push yourself to the limit. But the good news is, you learn A LOT, and, if you're into algorithms, some of the material is very interesting. Drysdale is a great prof. I would recommend taking the course with him. He is a likeable person and does an excellent job teaching the material. If there is something that you don't understand right away - and trust me, this will happen often - he is always available and helpful. In my frequent visits to him during office hours, I would always be amazed how he could help me to see the problem in a new light. Rather than solving a problem for me, he had an uncanny ability to get ME to solve even difficult problems with just a little sage advice.\""
        ],
        "Hsien-chih Chang": [
            "review 1: \"23W with Hsien-chih Chang: Enjoyed this class, was a lot of work but thought the grading was fair. I think that Chang was an approachable professor who taught it pretty well. The classes were split 50/50 between lectures and work sessions where you would have to submit something the next day, which although it could be annoying sometimes, I thought it helped me learn the material. I remember reading bad reviews on Chang before taking 31 and was scared, but was ultimately pretty happy.\"",
            "review 2: \"23W with Hsien-chih Chang: Having taken both 30 and 31 with Chang, 31 was FAR more reasonably graded, although I still wasn't thrilled with the course. I came into the class knowing that I do not do well with Chang's lecturing style (he generally spends each class going over one long example problem), and I think a lot of people would agree that the lectures did not prepare us well for the difficulty of the psets because TA hours would be so packed that people had to sit on the floor and stand in the doorway. Even the TAs acknowledged the difficulty of the pset problems, and at one point Chang had to give us an extra a few days to resubmit a pset problem because he realized that the solution he had come up with for the problem he wrote would not in fact work. Despite this, the midterm and final exams were shockingly doable. Unlike Chang's COSC 30 exams (which were harder by far than the psets and had appallingly low medians), his COSC 31 exams involved challenging but reasonable applications of topics we had practiced in psets and worksheets. I do think having 2 worksheets and a pset due every week was too much work and was pretty tricky to balance, but I guess it makes sense given that cosc 31 is supposed to be one of the hardest classes in the department. Unrelated to the course content difficulty, my primary complaint with the class is that the grading took forever. I spent most of the term with no clue how I was doing in the class because it took weeks (literally. not exaggerating) to get grades back for assignments. It is very hard to do well in a course when the assignments are cumulative and many of the earlier assignments are left ungraded for weeks at a time (because Chang did not provide any of his TAs with the pset solutions)\"",
            "review 3: \"23W with Hsien-chih Chang: Chang is super nice and honestly deserves the world. I personally enjoyed his lecture style although I know some others didn't. He also encourages you to not attend class if you don't like his lecture style-- not in a condescending way, he just knows that some people would learn better from YouTube videos and he respects that. There are two worksheets and one homework a week. The worksheets were done in class in groups with the help of TA's and Chang, though most people did not finish them in class. The homeworks were very difficult and I probably would not have been able to do them on my own, but they're not designed to be done independently. Chang wants his students to succeed and will happily explain the same thing over and over until you understand it. His office hours are great and I would definitely recommend going to them, even if you have to sit on the floor because they are so crowded. The exams were very doable. At the end of the course I felt that I actually understood Algorithms. It was definitely a lot of work but not nearly as bad as people made it out to be.\"",
            "review 4: \"23W with Hsien-chih Chang: I think starting this term Prof Chang really is putting a lot of effort into bettering the structure of his class, his teaching methods, etc etc and he seems very receptive of students' and TA's feedback. I definitely see his teaching improving in the future terms, and I'd strongly encourage you to take CS31 with him if you really want to understand and analyze algorithms well. However, this is a class with heavy workload: 2 worksheets a week + 1 problem set, so make sure you are on top of the materials, take good notes on your own, and ask questions (go find Chang when you see him in his office, I found his personal office hours to be way more effective). It's definitely a hard class for everyone, but I think the difficulty is reasonable since Chang genuinely wants us to do well. Echoing one of the other comments, I'd say my only complaints are 1) ungraded assignments, which is extremely counterproductive and 2) Prof Chang is not the type of professor who responds very promptly when you message him on Slack or email him.\""
        ],
        "Javed A.": [
            "review 1: \"02F with Javed A.: Before I took this class, I'd heard a lot of people complaining about it. \"All Cormen does is talk about his book.\" \"I wanted to fail the class just to spite Cormen.\" So I came in expecting to hate it...only I didn't. In fact, I loved the class. Jay Aslam really keeps you entertained the whole class period and some of the stuff you learn is really kind of mind boggling. (Who knew you could convert miles to kilometers using only Fibonacci numbers...) Yes, the weekly homework assignments take a long time. But for never having to read the book, six hours of work every week is hardly anything to complain about. And as frustrating as getting there might be, when you do figure out a problem it really is like a little light bulb going off. The exams are takehome and again take a while, but as opposed to being surprised by a dynamic programming problem out of the blue in a timed exam I'd much rather have an opportunity to sit back and think about (and yes, check my notes and the book). You can even buy hints for points if you really need some help. So if you're into math or cs, you should definitely take this class (if you're cs you have to anyway) and I highly recommend Aslam as the man to take it with.\"",
            "review 2: \"02F with Javed A.: who knew that the toughest class could be the most fun! TAKE ONLY WITH ASLAM!!!!!!\"",
            "review 3: \"02F with Javed A.: Aslam is a great prof and does a great job of explaining the material. However, the homework takes a huge amount of time. Although there was never any coding, it will still take a long time to complete. However, if you start the homeworks early and go to the office hours for the prof of TA you will get it finished. Students are given a week to complete a homework, which always has the same format. There are usually around 5 to 7 questions, of which you will only need to actually submit 4 to 5. Any extra problems you do will earn you extra credit. Most people did a fair amount of extra credit, so it is definitely possible to finish the required homework in the given period of time.\""
        ],
        "Amit Chakrabarti": [
            "review 1: \"23S with Amit Chakrabarti: DO NOT TAKE THIS CLASS WITH AMIT! This man has drained my love for cs and math for good. He gives a shit ton of homework that takes hours to finish, and barely gives credit for it. His exams are difficult, and he is extremely stubborn towards all of his policies. He doesn't care about students' understanding, and only cares that he finishes his lectures during his time slot. He left for a whole week leaving his head TA to give a even more horrible lecture as well. TURN AWAY!!!!!!!! AMIT IS TERRIBLE! PLEASE LISTEN TO PEOPLE AND DON'T MAKE THE SAME MISTAKE I MADE\"",
            "review 2: \"23S with Amit Chakrabarti: I took it with him just because I thought it would be a fun challenge since one of my strengths is math. Honestly, I regret my decision. It seems like he cares and wants to do better, but he is insanely rigid in his thinking and lacks the social awareness of a good teacher. He drains the fun out of the subject. Even if you are confident in your abilities, do not take it with him. You will likely have more fun and feel adequately challenged with other teachers.\"",
            "review 3: \"21S with Amit Chakrabarti: This class took so much from me. My will to live. My enjoyment of math. My ability to look at an algorithm without bursting into tears. When people tell you not to take this class with this Chakrabarti, they aren't lying. Please listen to them.. I will never recover.\""
        ],
        "Thomas Cormen": [
            "review 1: \"02S with Thomas Cormen: Cormen is a great lecturer. He co-wrote the textbook, so the book is basically class notes which helped a lot for homework and exams. He also uses board space well and makes humorous side remarks about the matter at hand (which make it more fun). Many of the algorithms covered in class are very interesting and *gasp* maybe even fun! I liked this course much more than CS 21 which builds up to this one.\"",
            "review 2: \"02S with Thomas Cormen: First off - Cormen used chalkboard space well (and noted it quite often, so we are duty-bound to mention it here :) He's a great prof - one of Dartmouth's best. He also co-wrote the textbook - and the class was generally pretty close to it. The homeworks were time-consuming; the takehome open-book open-note exams were time consuming; but both were based on the classes and reading quite nicely. Start them early, and work in groups on the homework. Prof. Cormen was VERY available, and helpful, and very good at explaining things in class, and in office hours. The lectures were interesting, for the most part, and great, often fun and humorous, examples were used.\""
        ],
        "Lisa Fleischer": [
            "review 1: \"10F with Lisa Fleischer: While you will learn some useful things, much of this class is very boring. Homeworks and exams (all take-home) usually have a couple really tough problems that you can start at for 8 hours and get nowhere. There is no coding :(\""
        ]
    },
    "COSC030": {
        "Prasad Jayanti": [
            "review 1: \"23F with Prasad Jayanti: Great teacher but class is unbelievably hard - timewise counts as 2.5 classes if you wanna get median or above assuming you don't have aspergers\"",
            "review 2: \"23F with Prasad Jayanti: First of all - jayanti is amazing. Such a awesome guy, he's genuinely interested in math and wants to get you interested in it as well! Never thought I would say this but I found CS30 with him to be interesting...got me even thinking about being a mathematician. Take this with jayanti if you can, hands down. That said, it is a hard class, and even if you study your hardest you're likely to make a bunch of dumb mistakes when you get to the exams (at least, I did). So unless you have a lot of experience with discrete math already, its definitely really challenging. The one area you have a lot of control over is the homework though, so make sure you do as well as possible on that because it can save your grade. His class was 40% homework problem sets (for accuracy, but you can check them with the TAs as much as you want), 20% midterm1, 20% midterm2, 20% final. The first two midterms aren't that bad, so do as well as you possibly can, because the final is rough and gets the lowest average by far. Overall, super nice prof, hard class, but you can power through it and leave with an actual appreciation of math and why people like doing it. Best of luck\"",
            "review 3: \"23F with Prasad Jayanti: JAYANTI IS THE GOAT. Seriously. He is probably the best lecturer in the entire CS department at Dartmouth. That being said, the material in this course is HARD. I\u2019ll be honest, I came into the course with a competitive math background from hs and thus, I did very well in the first \u2154 of the course, which is what saved my grade. However, the last \u2153 of the course is very challenging with probability and graph theory. Jayanti is super helpful and the TAs are helpful too, so GO TO OFFICE HOURS. He helps you through the homework assignments and hopefully you can learn while you\u2019re at it too. Our overall grades were probably curved at least 3 full percentage points because of how poorly the class did on exams. That just goes to show that this class is very challenging conceptually. I would recommend having a very strong math background if you want to aim for an A in this class. Regardless, I think Jayanti is the best prof to take it with, so do it if you can. You learn a lot, and the concepts are vital for CS and math in the future!\"",
            "review 4: \"22F with Prasad Jayanti: Jayanti is a very nice guy. His lectures were very engaging and I never had a problem focusing or understanding his explanations. The Homework was really the only part of the class that bothered me because people would farm answers at office hours. So the class is great if you are into that, but I personally was not. I ended up making a lot of mistakes on the homework, so I usually didn't do great on the homework, but it helped me prepare for the exams very well. In the end, I had a love-hate relationship with this class. It took up a lot of time but was pretty interesting and made me think.\"",
            "review 5: \"22F with Prasad Jayanti: Jayanti is the GOAT. While this class is always notoriously difficult, he was the best lecturer I've had at Dartmouth. At least twice in every lecture he would break away from course material and just give some crazy life advice or properly engage with the students. Obviously would not recommend taking the class for anything except the CS major but if you have to take it, take it with him.\"",
            "review 6: \"22F with Prasad Jayanti: I want to echo what other reviews have said about Jayanti, mainly that he is awesome. His explanations were incredibly clear, to the point that it was boring to sit through the simpler topics. In terms of the difficulty of the class, I thought it was overhyped. As long as you have time to study all the proofs from class and feel very confident in them ahead of the exams, you should be fine. Go to office hours for help on the homework. This class gets a terrible rep, but I really liked it. I'm good at math but not amazing or anything and I found the content and exams manageable and fair.\"",
            "review 7: \"22F with Prasad Jayanti: Not as bad as I had expected. Grading was 50% exams (just 2 midterms and no final) and 50% HW (roughly one per week excluding exam weeks). Jayanti did a great job teaching and I always found his lectures clear and comprehensive. I never felt a need to use the textbook because he conveyed everything so well. I would recommend going to office hours for HW help. I was lazy and never went and ended up losing some easy points on a few of the HWs for overlooking simple things. Be sure to also review the TAs' corrections to your homework since they often grade quickly and may make mistakes (I got back a bunch of points from this). One annoying part was that the homework problems were assigned on Thursday and due the following Tuesday, which made working on them over the weekend almost inevitable. In terms of exams, doing proofs in a timed environment is not fun, at least as someone without much of a college math background. Still, the grading for the exam proofs actually seemed more generous than it was made out to be beforehand in terms of partial credit. Overall, this is just one of those classes you just have to push through for the major. I didn't enjoy it nearly as much as the other CS classes I've taken which have had actual programming. Also, since I guess they don't publicize it anymore, the median for our class was a B.\"",
            "review 8: \"22F with Prasad Jayanti: Loved this class! It made me add a math minor. If you have to take it, take it with Jayanti. He starts all the way from the beginning (sets and predicates) and goes very slowly up to graph theory. We had two midterms and no finals (+6 psets). DeepC's class is known to be harder, and many still found Jayanti's version hard but I absolutely loved it.\"",
            "review 9: \"21F with Prasad Jayanti: Enjoyed the class, but Prof Jayanti's teaching style wasn't ideal for me. He is a lecturer through and through and a quite good one at that, but he never gave any written notes or presentations apart from some writing examples which were helpful for proof writing. I think he designed the course to be the most practical way of teaching discrete math, but probably not the most rigorous way Chakrabarty is better for that. Overall, I felt half the class was just logic and hence was quite pedantic in terms of problems and gradings. The workload is pretty hectic with 9 Homework sets, one due each week. A drill after every lecture (worth 14% of the grade which I found myself missing a lot because of time difference etc), and 2 midterms (which were pretty easy) and 1 final. Overall, not as difficult as I expected given the reputation of the course.\"",
            "review 10: \"21F with Prasad Jayanti: Honestly, the course contents are fun to learn about and Prof. Jayanti is a nice person. On the other hand, the TAs and grading make this class a nightmare. They nitpicky your small and simple mistakes and take unnecessarily large amounts of points off with weird explanations. Most of them are not really kind. If their task is to discourage students from discrete math, then they are doing a very good job.\"",
            "review 11: \"21F with Prasad Jayanti: I really loved this class! I was so scared going into it since everyone I spoke to said it was terrible, but Jayanti is an amazing lecturer and the material was fascinating! Definitely not a layup... there is a good amount of work and the exams are long and difficult... but so worth it in the end. As long as you start the psets early and carve out time for office hours, the workload is totally manageable. I definitely recommend taking this class with Jayanti if you can!\"",
            "review 12: \"21F with Prasad Jayanti: Jayanti is a great and engaging lecturer and I thought the workload was fairly manageable if you start early. There's one pset each week, which is released on friday evening and due tuesday night. The material is super difficult (as ppl probably know) and some of the problems seem impossible without help or hints. I spent 3-4 hours per day in office hours on the days before the psets were due and I don't think I would have passed otherwise. Office hours are great for asking for clarification, getting hints, and just working with the other students there. I think people have said this before in other reviews, but Jayanti is the kind of prof you come to Dartmouth for. He's funny, engaging, explains concepts so clearly during class that you couldn't imagine that the problems would ever be that difficult (that is until you try it yourself). He's super open to questions and answers them all concisely. Definitely take this class with him if you can.\"",
            "review 13: \"21F with Prasad Jayanti: First of all, Professor Jayanti is the best professor I have taken a course with at Dartmouth. Every lecture was deeply engaging, he explained everything clearly and step-by-step, and even his jokes were great. Some lectures in this course will seem elementary for people who already know probability/combinatorics, writing proofs, or set theory. Personally, I came in with minimal background experience and didn't find the course difficult until the last week when we got to writing proofs with graph theory. So don't get too comfortable in the first few weeks because eventually you'll encounter some problems on the problem set that are literally impossible to prove without assistance from friends, prof, or a TA. In terms of the general structure of the course, there is a drill after every lecture (short and easy questions, due at midnight), weekly problem sets that you have 4ish days to complete (hard application questions), and then two midterms and a final. Going in to this class, you definitely have to recall that you're in a room with 60 CS majors, aka some of the most academically driven students at this school. It's okay to think this course is hard - just keep going to office hours and ask for a lot of help and you'll come out doing fine. Most of us in the room are CS majors because we love to code, not to study theory anyways, so just think of this course as a requirement you just have to get out of the way.\"",
            "review 14: \"21F with Prasad Jayanti: Wanna know why people keep saying take a course with Jayanti....the guy is a literal GOAT. He makes the hardest problems seem easy by breaking things down step by step. The course is difficult and the topics are challenging, not because of the material itself, but because the problems require you to think outside the box and apply the material. It's this kind of thinking that helps you tackle interview problems and not just with CS but with anything. I spent so much time just going to office hours and learning from the TAs and other students, this course is more a team effort than anything else. The midterm/final were hard with medians in the Bs/Cs/and Ds (midterm1/midterm2/final) and the problem sets (one a weekend) could be hard as heck. Regardless, this is my favorite class at Dartmouth and yes, even with taking this class, I didn't lose my soul, I made friends, and rushed at the same time.\"",
            "review 15: \"20F with Prasad Jayanti: Jayanti is a good lecturer (sometimes with a good sense of humor), and I'm glad that I didn't take this class with Chakrabarti. I found the grading a bit frustrating because of how a partially incorrect answer gets no credit in most circumstances. Some of the TAs struggle to explain concepts or do not provide very clear explanations, though I understand because the material is pretty difficult. The UGPs (ungraded problems but they're not practice problems\u2014they're just proof writeups) are helpful for the homework. CS 30 does make me feel like I think more logically, and it didn't make me want to drop the CS major at all. We didn't cover as much material as Chakrabarty's 20W version, and it's hard to tell whether this was intentional because this was the first class I took (out of 13) that didn't provide a syllabus with each lecture's topic. Sometimes I wish I had referenced Chakrabarty's detailed notes while I took the class. The textbook can be helpful when you do the homework, but it is not required nor necessary. Overall, you'll probably take CS 30 only because you have to, and I don't think you should skip 30 to replace it with a different theory course for the major requirement.\"",
            "review 16: \"20F with Prasad Jayanti: Hard. Don't take anything else hard along with this class unless you're prepared for a difficult term. The class consisted of weekly homeworks, drills after almost every class, and three exams. Homeworks were time consuming and I went to office hours a lot to get through them. Drills were usually pretty easy but every so often there would be a tricky one. Not very time consuming either way. Exams were difficult but the content was definitely fair and predictable. And Jayanti was an amazing prof. He clearly loves the course and the material and did a great job explaining everything\"",
            "review 17: \"20F with Prasad Jayanti: Jayanti is an absolute gem, if you're going to take CS30 take it with Jayanti. Every class and x-hour was a lecture, but he moved at a really reasonable pace (even pretty slow at the start of the course) and dropped hilarious one-liners and tangential stories. There are drills after every class and homework's every week, but none of the problems are unreasonable. This class can get tricky because there isn't a ton of partial credit, especially on the drills, but you can tell Jayanti really cares about his students and he made this a ton better.\"",
            "review 18: \"20F with Prasad Jayanti: Professor Jayanti is one of the best professors I have had at Dartmouth. He cares so much about his subject and his students. This class is basically intro to set theory. If you have taken Abstract Algebra, or any such similar math class, this will be an easy class for you.\"",
            "review 19: \"20F with Prasad Jayanti: Class is hard, as many other people here mentioned. Jayanti is a really good lecturer, he explains the concepts very clearly, and he always answers any questions you ask during office hours and lectures. Grading is harsh, sometimes you think you did a good job, but the proof you provide is not satisfactorily concise, and you will lose points. If you consider taking cs30, there are a couple things you should keep in mind. Firstly, there is little room for mistake in this course if you are very concerned about your grade, since it is hard to complete the assignments perfectly, and the cs30 students are some of the most academically ambitious students at Dartmouth, so the expectations are really high. Secondly, if you are a learner that wants to interact with as many practice problems as possible to understand the essence of it, Jayanti may not be the ideal professor for you. The class has a structure where you only have daily drills after each class and weekly homeworks assigned on Tuesday, all graded. There are no practice problems provided for you to exercise and see where you make mistakes before you do the assignments. Therefore, in most assignments I made minor mistakes that allowed me to fix whatever was wrong with my understanding, but that improvement was not reflected on my grades since I learned it by making mistakes on the assignments instead of practice problems. In short, Jayanti is a great, friendly professor, and you will learn a lot in this class. If you worry about your grades and believe that you learn by practicing, I guess Chakrabarty is the one to take this class with (according to other reviews). That does not mean that Chakrabarty's version is easier in any means (I can't compare), but his method of teaching by providing detailed lecture notes and having practice problems available is more preferable for some students.\"",
            "review 20: \"18F with Prasad Jayanti: Jayanti is the best prof I've ever had at Dartmouth and probably will ever have. This class is basically all math, so if you have a solid math background you should have no problem.\"",
            "review 21: \"17X with Prasad Jayanti: The hardest class so far I've taken at the school and the worst grade I'll probably get at Dartmouth, but Jayanti is my favorite professor. Amazing class with Jayanti. He is truly godlike.\"",
            "review 22: \"16F with Prasad Jayanti: The course mainly covers proofs, especially as applied to graph theory and probability, which sounds difficult and is somewhat difficult. Jayanti uses all the X-hours, which may sound like a lot, but Prasad Jayanti is such a good lecturer that the time flies by as he makes difficult proof techniques seem easy and interesting. I had the opportunity to have Jayanti before in CS10, where he was also incredibly effective. Not only is he incredibly smart, but he is able to open his powerful mind so that the seeds of some of his intelligence and passion can be sown in the students he teaches, an accomplishment that few instructors ever attain. I would definitely recommend taking the course with Jayanti over Chakrabarti. Jayanti\u2019s CS30 may be a bit harder than Chakrabarti\u2019s, but my guess is the class would be much less interesting with Chakrabarti. I can\u2019t say for sure since I never had Chakrabarti before, but I heard him lecture before and was not impressed. Chakrabarti used powerpoint to show proofs and equations which in my mind is not a good way of teaching math. After hearing from students in the past who failed this course and had to retake it I became concerned about how hard the course would be. I also didn\u2019t know if I could do proofs, which I found tricky in Geometry. The course did not turn out as hard as many said it would be. I found if I spent 6 hours on the weekly problem set, I would only have to go to help hours (which were amply available every day of the week) for 1-2 of the proofs. Not only that, but it felt very good getting some of the harder proofs. Often I would get stuck on a question and pass over it, only to find myself think of the solution at lunch the next day. The tests were easier than the homeworks, though still not easy. Jayanti provided practice problems that were somewhat similar to the test questions the day before. My only real frustration with the course is in the grading of the homeworks (worth 40% of the grade). The grading was nitpicky at best, unfair at worst. If a TA told gave you incorrect advise during help hours, you would lose points. If your proof was not concise enough, you would lose points. This incentivised you to go to help hours without fully trying the problem on your own so that you could get full credit on your homework. You should not give into this incentive, as the tests require a certain problem solving capacity that you can best get from trying the homeworks on your own.\"",
            "review 23: \"15W with Prasad Jayanti: Unbelievable prof. Engaging, interesting, and learn a lot. Lots of office hours available. The class definitely requires work, but you can get help with any homework problem. However, the majority of your grade depends on the exams, for which you really gotta know your stuff.\""
        ],
        "Amit Chakrabarti": [
            "review 1: \"22W with Hsien-chih Chang: As much as how Chang is genuinely a nice person, I cannot in good faith recommend you to take CS30 with him. Structure of the class is as follows: in a given week, two of the class days you work on worksheets in class (you have 24 hours to do them.) The other two class days are lectures. Grading is 10% worksheets, 20%/20%/20% midterm 1/midterm 2/final, 30% problems sets (can work with partner, can use any outside resource, your worst 20% of all problem set problems are not graded.) absolute scale is >90% for an A and -5% for every letter grade below (A- for >85%, B+ for >80%, etc.) There\u2019s also a relative scale, but as of this writing I\u2019m not sure how generous that is. A major problem with this class is that it is essentially taught through the flipped classroom strategy, where you self study the content before class and then apply the content in class. It\u2019s extremely frustrating to work on a worksheet with problems that you have no idea how to do, not to mention that you probably don\u2019t have the time in the quarter system to study ahead anyways (which is what the flipped classroom strategy demands.) It\u2019s not like you learn that much through the lectures either, as lectures are essentially polling the class on how to do more problems rather than teaching it himself, and then also expanded applications that aren\u2019t tested/assessed in any way, and are thus useless. (But hey, you don\u2019t have to go to the lectures \u2014 he actually tells you upfront that if you don\u2019t want to go to them, you don\u2019t have to. But then again, you\u2019re still gonna have to be self studying\u2026) This isn\u2019t necessarily Chang\u2019s fault, but at least my term, the TAs were god fucking awful. Never responded to emails, had inaccessible office hours at weird times, never even showed up half the time (yeah go fuck yourself MS \u201824), took 4+ weeks to grade shit, and graded so much shit objectively wrong (for example, there was a question that asked for a numerical answer. I got -0.45 and showed how I got that number. The correct numerical answer was -0.45\u2026 and my solution was marked completely incorrect. Shit like this happened like 5 times for me. At least you can ask for grade requests, though.) I get that TAing CS30 isn\u2019t the easiest thing in the world, but that\u2019s not an excuse for not being able to give advice on how to do problems and being arrogant powertrippers. On a more positive note, shoutout to AA \u201823 for being the most helpful of the TAs, I guess. On the topic of office hours, Chang\u2019s office hours are definitely helpful - Chang is a lot better when teaching one on one. Unfortunately Chang\u2019s office hours were also inaccessible because they were located near when a problem set was first released, and thus you often didn\u2019t have enough time to develop questions about the problem set to ask to Chang. Problem sets are very hard \u2014 some of the problems are grad school level, which Chang admitted to on the last class lecture. But the problem sets being hard is probably true no matter what teacher you have. At least you can use any resource, including the internet, but be warned that some problems will not show up no matter how hard you google / stackExchange. Objectively, the exams aren\u2019t hard, but the grading is tough - a simple mistake can lead to -5%, and that adds up quickly. Also, if you don\u2019t immediately know how to do a problem (ie, you havent seen the problem archetype before) or you just run out of time, you\u2019re fucked. For me personally, I spent about 90% of my effort on CS30, and I think I\u2019m gonna end up with an A- in the class. Very stressful. This all being said, Chang is a nice person (as mentioned before), and it was his first time teaching the course. I wouldn\u2019t be surprised if the experience with Chang dramatically improved in future terms, and, if so, you should defer to those reviews rather than mine. But for now, you\u2019re probably better off taking/waiting to take CS30 with Deep C or Jayanti (def not Amit Chakrabarti tho haha)a\"",
            "review 2: \"19F with Amit Chakrabarti: Chakrabarti is a terrible professor. Every bad thing that you can read about Chakrabarti is 100% true. This was such a miserable class to take to take with him, and I absolutely dreaded every single class. Take this class with a different prof or you will seriously regret it.\"",
            "review 3: \"19F with Amit Chakrabarti: Chakrabarti was an annoying professor at first, but nothing too horrible. However, Chakrabarti decides what grades he expects on exams before he gives them out. If grades are worse than he expected, then the class grades will be low. There will be no adjustment to the grading scale after the exam is taken. The final was incredibly unfair, with many word problems that over half the class left blank. Rather than acknowledge the exam was poorly written and was loosely based on the course, Chakrabarti gave a B- median, essentially blaming the students. If you take this class with him, remember that he may decide to give an unfair exam and no matter how much you study you will not succeed, and he will not curve the exam.\"",
            "review 4: \"19F with Amit Chakrabarti: I don't think it can be reiterated enough how much of a train wreck CS 30 was this term with Chakrabarti and how the amount of suffering inflicted on this class was almost unbearable, but I think I'll just chime in with some ways to survive this class, as it's inevitable for anyone taking for a CS degree. First and foremost, take the class with your friends and form a study/suffering group ASAP. This is the class to send people to office hours/answers for (not Chakrabarti's, which were the most useless ever since he doesn't go over answers and doesn't understand where students get confused in the material). In times of desperation, using Google for Psets isn't the worst idea and Brilliant.com is quite helpful for conceptual understanding and practice on things like modular arithmetic. Above all else, take the class when you are mentally prepared for suffering, time crunches before Psets are due and when you have ample time to meet with others for collaboration and go to office hours. It's kind of cheesy, but if anything, CS 30 taught me \"the power of friendship\" and how to survive tricky classes with other humans. Other than that, it's a hard course with not much to gain aside from being able to graduate as a CS major. To everyone else who stuck it out in the end, you did good. Proudest C+ of my transcript ever.\"",
            "review 5: \"19F with Amit Chakrabarti: To reiterate what has been said about Amit Chakrabarti, HE IS THE ABSOLUTE WORST. His lectures are pretty dry and bland. Nothing special but nothing too bad either. The problem sets, on the other hand, took forever. You not only had to solve the really hard questions, some of which he would never show us how to do or go over the concept, then we also had to typeset them in latex, which is tedious and time-consuming busywork. I would have been okay with the bland lectures and tedicus problem sets if it was not for the tests. Chakrabarti has some of the worst tests I have ever seen. To reiterate what has been said in one of the reviews below - Even with perfect knowledge of the material, your grade basically comes down to a roll of the dice; his exams are extremely time-limited, use weird mechanics that deduct points for answering questions incorrectly, and consist almost entirely of brainteaser-type, extremely narrow applications of course material. Even when I felt like I knew the material Chakrabarti would throw some curve below to throw us off. It was almost as if Chakrabarti enjoyed seeing the whole class miserable and depressed the whole term. I'm not the type of person to normally leave reviews like this. I am normally constructive and have had good experiences and Dartmouth until I took CS30 with Chakrabarti. He is the absolute worst professor I have ever had. Take the class with someone else.\"",
            "review 6: \"19F with Amit Chakrabarti: Probably among the worst professors/teachers I've encountered in my life. Chakrabarti's lectures are beyond dry, uninspiring, and often lack crucial explanation. I actively dreaded going to class but was required to do so due to his graded in-class exercises (which he probably has because nobody would show up otherwise). His problem sets are not that unreasonable in length or difficulty, but he has extremely strict late policies and no leniency whatsoever. That said, the worst part about Chakrabarti is his exams. Even with perfect knowledge of the material, your grade basically comes down to a roll of the dice; his exams are extremely time-limited, use weird mechanics that deduct points for answering questions incorrectly, and consist almost entirely of brainteaser-type, extremely narrow applications of course material. Overall, this course was a huge disappointment that was unenjoyable and often seemed outright unfair. I would strongly recommend against taking this course, or any course, with Amit Chakrabarti.\"",
            "review 7: \"19F with Amit Chakrabarti: Chakrabarti is a decent lecturer, He is very focused on definitions, so if you don't have a heavy math background it will be difficult to understand many elements of the class intuitively. He is strict on his policies. Save your late days (you get three, 24-hr extensions) for the problem sets until the end. The last HW was three problem sets instead of the usual two, but he gave us the same amount of time. I heard that typesetting PSETs was optional in previous terms. This is no longer the case, it was mandatory this term. Typing up homework in LaTeX took me nearly as long as figuring out the problems and going to office hours for help. Do the textbook readings, especially for probability. Always, always, always go to office hours if at all possible. This was the only way for me to solve some of the more difficult problems. Midterms had medians near 60%-65% this term.\"",
            "review 8: \"19F with Amit Chakrabarti: Chakrabarti is the WORST HUMAN BEING. O.k. lecturer, but he does not care about his students at all. He gives absolutely no leniency to anything. He is always unhelpful during his office hours and does the minimum needed to retain his professorship. If you're going to take COSC 30, and want to feel motivated to continue in CS or in theory, DONT take this with him.\"",
            "review 9: \"18W with Amit Chakrabarti: Hardest class I've ever taken at Dartmouth. DON'T LOSE POINTS ON THE PROBLEM SETS; STAY UP ALL NIGHT IF NECESSARY. DON'T GET BEHIND. When the test comes, you'll appreciate it. My math inclined friends found the class interesting and easy. I found the class interesting and hard. Chakrabarti is fine, he's not a bad professor or anything. He excels once he gets to know you on 1 on 1 meetings, take advantage of that.\"",
            "review 10: \"18W with Amit Chakrabarti: Chakrabarti's lectures are tough, and you really need to focus because he goes through a lot of information pretty quickly. However, he is very helpful in explaining in 1:1 and office hours. This class definitely a lot of work: the material is tough and just doing the homework assignments is not enough (though they definitely take a fair amount of time) to do well on the exams. The exams are pretty hard and require you to think outside the box and \"find the trick\" in a relatively short amount of time compared to the multiple days allowed on HW assignments. To do well on the exams, you need to develop an intuition for the material and this requires a lot of time and effort (i.e. doing lots of practice problems from the book and really understanding how many of the proofs work).\"",
            "review 11: \"16W with Amit Chakrabarti: Overall can be a very interesting class, Chakrabarti does a good job explaining things even if he can be a bit dry at times. However, save yourself the trouble and do not take this class if you don't need to, the work is frustrating and tedious and makes you hate yourself. Also be prepared, it is not really a CS or engines class at it is straight up a math class, so if you like math you'll probably do better. I love CS and coding and only really endure math and I was fed up with this class almost the entire time, my friend however loves math and is a math major and thought the class was fairly easy. Take this class if you want but just be prepared to tear your hair out a bit.\"",
            "review 12: \"06W with Amit Chakrabarti: the topics covered i had already taken a class on in previous terms so all i really did was do the hmks and show up for the exams. went to 2 classes the whole term i think and did pretty well. could be easy A if u worked for it.\"",
            "review 13: \"06W with Amit Chakrabarti: I love the way that Prof. Chakrabarti lectures. The class was engaging in the material and he was very knowledgable and good at explaining. The only real complaint I had was with the textbook. While generally adequate, it was confusing at times, and never really outstanding.\"",
            "review 14: \"06W with Amit Chakrabarti: I enjoyed this course. Professor Chakrabarti gives very well organized lectures. I wish the textbook had been as organized and coherent as our teacher... The quizzes and final were reasonable, especially if you did the homework. Not a bad class.\"",
            "review 15: \"06W with Amit Chakrabarti: it's a pretty boring class that doesn't seem to have any connection to the rest of the cs minor/major courses. it's interesting to know these things, but it could have been done in a much faster pace\"",
            "review 16: \"06W with Amit Chakrabarti: I loved Amit and the class. The readings were a little dense, but you could definitely get through them without too much pain... they were short enough. Their were emair comments due the night before each reading was due, and Amit was extremely responsive to the comments, lecturing on the things we expressed confusion on and interest in. They were great for me, too, to make me do the reading! we were graded on class excersizes at the end each class, but they were sort of useless because we often didn't have time, and you could get credit without really understanding what was going on. quizzes were really easy, a nice short checkpoint. the final was a 24 hour open note open book take home... almost more like a problem set, which can give you an idea of the nature of the class. there's an emphasis on learning how to think about these problems and understanding and applying them, rather than just memorizing a lot of theory. amit was an awesome lecturer\"",
            "review 17: \"06W with Amit Chakrabarti: Despite some\u00e2\u20ac\u00a6 not happy students from previous terms (or maybe in response to them) Math 19 was actually pretty enjoyable. The department changed the format of the problem sets (they\u00e2\u20ac\u2122re really not that bad) and the teaching style in general. Amit was very approachable and took the material slowly (maybe a bit too slowly for some of the class, but I thought it was a pretty comfortable pace.) The course work consisted of weekly problem sets that were not nearly as painful as the ones from previous terms \u00e2\u20ac\u201c they were very different from the types of problems discussed in class (which were generally simpler and just introduced the concepts), but I don\u00e2\u20ac\u2122t think anything less-challenging would have been worthwhile. There were two \u00e2\u20ac\u0153quizzes\u00e2\u20ac\u009d which were painless \u00e2\u20ac\u201c really no studying required/very helpful \u00e2\u20ac\u201c although they were graded pretty harshly. And the rest of the class was based on a challenging take-home final (graded much like the quizzes), reading and email comments before each class, and group work on class exercises. I think others found the group work on class exercise grade (basically at attendance grade) and the reading and email comments before grade (this just required a little effort) to be the most annoying part of the class. I\u00e2\u20ac\u2122m not sure if the department is going to keep the same grading rubric, but the latter two grading parts basically rewarded anyone that was hard-working but not brilliant, so the grading was fair if you put in the effort. So an A- if you spend time on the homework (office hours were helpful) and email comments and have average test scores, and an A if you\u00e2\u20ac\u2122re brilliant (and perhaps put in some effort.) So \u00e2\u20ac\u201c if you need it, take it, not bad at all, even if have/want to take it at the same time as 18.\"",
            "review 18: \"06W with Amit Chakrabarti: The class was alright...I liked the grade distribution becuase 1 bad test does not decide your grade....Prof. Chakrabarti had jokes at times...The ta's were help....Take it if you like proofs....\"",
            "review 19: \"04F with Carl Pomerance: For those of you who don't know this, CS/Math 19 *REALLY* depends on who you take it with. I've heard NIGHTMARES about former profs (i.e. Amit Chakrabarti - avoid him at all costs). Prof. Pomerance, fortunately, is a great teacher and eased the pain of a (normally) extremely painful class. Pomerance is a famous mathematician, and brings that expertise to the classroom. Sometimes he makes assumptions that you're following along (like when he's writing a huge proof on the board), but he did the material (which IS very difficult) justice. The book is just plain bad. There are errors in the explainations, errors in the examples, etc. Fortunately for us, we got it before it was published, so it only cost $15 from the Copy Center. Pomerance compiled the problem sets from the questions in the book, which vary from being obvious to being very difficult. I got into a groove of starting early on the problem sets, and visiting the TA's/my study group regularly. I believe this is the ONLY way to keep up with the material (which, despite being broken down into discrete topics (like number theory and combinatorics) is fairly cumulative. The exams are not as difficult as I expected them to be, but that too reflects a choice made by your professor. Pomerance gave out Study Guides for each exam, and the problems were nearly identical in many cases, so DEFINITELY DO THE STUDY PROBLEMS - get help with them at all costs, because they are a PERFECT indication of the material on the exmas. All that said, I enjoyed the class. If nothing else, you do come out feeling a little bit smarter, which is more than i can say for a few other classes ive taken.\""
        ],
        "Deeparnab Chakrabarty": [
            "review 1: \"23W with Deeparnab Chakrabarty: They're lying to you - DeepC is not the goat. Super nice guy, but absolutely horrible with exam and grading policy.\"",
            "review 2: \"23W with Deeparnab Chakrabarty: Super hard class but TAKE IT WITH DEEP C!!! I don\u2019t know how much one can emphasize this. DeepC made this class (with really hard content) both interesting and bearable. He was engaging during lectures, available during office hours, and answered literally any question that anyone asked. Definitely not a layup, but again, TAKE IT WITH DEEPC!!!! I cannot emphasize this enough.\"",
            "review 3: \"23W with Deeparnab Chakrabarty: PLEASE TAKE THIS WITH DEEP C. This was the hardest class I think I have ever taken in my life, but Deep C absolutely made it bearable. I can't imagine how miserable I would be if I took this class with a bad prof. The content is fast and difficult, but Deep C is incredibly accommodating. He puts in so much time and energy outside of class to help students. The class consists of lecture quizzes, problem sets, and exams. You can pretty much get 100% on the problem sets and lecture drills if you are smart about it. You get a 10% buffer with the lecture quizzes and can take each one twice, so you only need to get about a 91% average on those for them to be bumped up to 100%. For the problem sets, START AND SUBMIT EARLY. This is my biggest piece of advice. Deep C allowed draft submissions where he would go through and tell you everything that was wrong. These were SUPER helpful. If he didn't review every one of my problem set submissions I probably would have had an 80% pset average instead of 100%. Also, if you submit at least a day before the deadline you get a point of extra credit, which was actually very helpful since each pset was only out of 30. The two midterms each had an in person and take home portion. The take home sucked. Just clear your schedule for that day and grind away. The final was only in person. Overall, the class moved very quickly and jumped around while also building on itself. I was terrified to take this class because I heard such bad things, but honestly it wasn't that bad. I definitely worked hard, and the class was still the hardest class I've ever taken, but it was also pretty manageable. The class ended up being much easier than I feared. Just work hard early and take it with Deep C.\"",
            "review 4: \"23W with Deeparnab Chakrabarty: DeepC is the goat. Tbh, I don't think I need to say much more than that, but if you can, only take this class with him. He relates the material to the class, does a super good job engaging the class in the lectures, and motivating the class. He's also just such a nice person, so go to his office hours!! He will make the class fun, and if you put in the effort, you can do well and feel good about the material. I, I follow, i follow you, deepc, baby https://youtu.be/vZYbEL06lEU\"",
            "review 5: \"23W with Deeparnab Chakrabarty: Yup, DeepC is undefeated. Easily my favorite math class of all time, which is funny since I rarely knew what was going on and am by no means a math student. I was the low point on the Canvas distribution on the second midterm and pulled myself out of the hole with diligence and via his excellent teaching. All other DeepC reviews are spot on; do your work early and go to office hours. Errh.\"",
            "review 6: \"20W with Deeparnab Chakrabarty: DeepC is one of the nicest professors I've ever had. He really takes the time to get to know everyone, and even set up a day to meet with students 1on1 when it was requested. His grading policy is very clear from the start, and although the material is EXTREMELY hard, if you go to office hours you'll be able to figure it out. There are like 7 different modules that you cover, and then two midterms and a final. Writing proofs is the main concept that you try to learn, and it can be pretty hard to come up with a proof idea in a 2 hr exam so I struggled a lot with the tests. However, I was able to get the median grade by doing well on the drills (short problems due the day after each class) and the problem sets. If you're a CS major, you should only take 30 with DeepC.\"",
            "review 7: \"20W with Deeparnab Chakrabarty: You seriously can't go wrong with taking this class with DeepC. Never have I seen a prof more dedicated to their students. Never have I seen a course this well-run in terms of organization of course content, grading of assignments, and availability for help. Not an easy class by any means. But taking this class with DeepC has made this a worthwhile experience.\"",
            "review 8: \"20W with Deeparnab Chakrabarty: TLDR: As its name suggests, \"Discrete Math in Computer Science\" is an intensive MATH course. The course is designed to give you a strong foundation for understanding algorithms. If you get anything from this course, it is how to do a proper proof. DeepC and Jayanti are capable of teaching this material clearly while showing the utmost care and respect for their students. Take it with either of them. Structure (possibly only for 20W): The course is separated into 8 modules. The first module is dubbed Jargon. Jargon is a mere introduction to Sets, Functions, Propositional Logic, and Predicate Logic. These serve as the backbone for the second module: Proofs. Here, you'll primarily learn about Proof by Contradiction and Proof by Induction. If this course teaches you anything that you'll carry forward, it is Proofs. Make sure you clearly understand both the Jargon and Proof modules. Everything going requires a solid understanding of this. Following Jargon and Proofs, you transition to the 5 primary modules of this course. Combinatorics (Counting). Probability (Chance). Graph Theory (Graph Data Type). Number Theory (Arithmetic). There is one more module, dubbed Infinity, but we were not tested on this material. The course is designed so that each module is harder than the last. However, it varies. I found combinatorics difficult, but number theory intuitive. Others found probability difficult and combinatorics to be easy. There was \"that guy\" (smart-ass who knows everything). But those are rare. It truly depends on who you are. There was a supposed discussion Chakrabarty and other professors had about removing Number Theory for how unmanageable all the material can be. We were told when submitting evaluations to specify a module to remove. So Number Theory may be done away with. Regarding assignments, after every class (except X-hrs), we were given drills which were due within 36 hours (essentially, 11:59pm of the day after class). These were worth 30% of the grade. The problems were easy. All you needed to answer them was an appropriate understanding of what was taught the day the drill was assigned. Then, there were problem sets worth 24% of our grade. These were given out weekly. Assigned on Wednesdays, due Wednesdays. If you handed in your problem sets on Tuesday, then you would receive an extra point (but the grade could never exceed 100%). In addition, extra credits were given out the same day the problem sets were given out. There were 2 midterms (worth 12%) and a final (worth 21%) and participation points (worth 1%). Lastly, he gave out ungraded problem sets with plenty of questions to practice the concepts taught in class. Professor: Chakrabarty is a great professor. His lectures were clear and entertaining in that \"cute endearing nerd\" sort of way. He is conscious of his pacing and will stop for questions if need be. There are moments when the concept taught in the lecture is something conceptually easy to grasp. in these scenarios, much more time will be spent on him demonstrating how to do certain problems rather than concept teaching itself. At times, lecture notes were available before class. However, most of the time they were released a few hours after the lecture was given. There is a textbook (David Liben-Nowell: Discrete Mathematics for Computer Science) that was not required, but helped with my understanding of the material and had plenty of practice problems on its own). Plenty of office hours were given outside of class by him and his TAs. We were told that discussion of answers was not allowed. However, the majority of office hours had people in them that would either blatantly say answers or would mention their work in great detail. Essentially, go to the office hours and many of the answers to your problems will be easy to deduce from there. Lastly, he prefers if you hand in your assignments by formatting it in LaTex (Don't download LaTeX, use Overleaf at https://www.overleaf.com/ for formatting) if you choose to go down this route), or you could write it if your handwriting is legible.\"",
            "review 9: \"20W with Deeparnab Chakrabarty: DeepC has been my favorite prof at Dartmouth so far! It is clear how much he cares about his students and really does his best/provides as many resources as he can to make sure you understand the material. The pace of the course is fairly quick but by doing the ungraded problem sets and the graded problem sets diligently, COSC 30 is definitely manageable (but difficult). If you have to take this class, I would STRONGLY recommend that you take it with DeepC.\"",
            "review 10: \"20W with Deeparnab Chakrabarty: By far one of my FAVORITE professors in all of Dartmouth. (I never post on Layup List, but for him, I'll make an exception any day.) As a person who hasn't touched math since high school, DeepC is a god-send. He cares a lot about his students and doesn't hesitate to sacrifice his own spare time to help everyone understand his lectures. He's tries to know everyone in his class, and really makes an effort during office hours. His passion and commitment is unprecedented. As an example, he offered office hours 3 times a week in the beginning of the term. When students wanted a 1 on 1 with him, he offered another day of his week FOR THE REST OF THE TERM dedicated to 1-on-1 office hours. When many students needed help understanding the more mathy concepts in the class, he offered up his weekends based on class demand. After our midterm results, he opened another day to ensure every student who wanted to meet with him could. DeepC has a son and family, but he still devotes his life to help the class. You will never walk away clueless after talking to him, and if he can't give you a decent answer immediately, he will get back to you by the end of the day. DeepC values effort and makes everyone feel welcomed (e.g. me with no math background, ethnic minority, female). If there's one thing you take away from reading this review, it's that you should take CS30 with DeepC.\""
        ],
        "Afra Zomorodian": [
            "review 1: \"09W with Afra Zomorodian: Afra is a fantastic professor. The word that comes to mind is \"professional:\" his notes are extremely clear, he lectures effectively, he moves quickly but makes sure everyone is with him, and fields questions deftly. I've never considered myself too much of a math person, but Afra made the material pretty interesting and exciting. He even gave the class an anonymous questionnaire halfway through to see if anything could be improved. He clearly takes pride in his teaching. He's got very high expectations, too. His assignments and tests are pretty difficult, and he's not afraid to give low grades. The class is curved (I think to a B), and since it's a small class, it's pretty intense. I'm not sure exactly what causes it, but I feel like the class had this intimidation and fear thing going on. Everyone seemed to think that everyone else knew what was going on better than they did, and to me it felt like I was always close to really doing poorly on something. Of course, the raw test averages were in the mid to low 70s, so everyone was losing lots of points, it was just a matter of losing fewer. A number of things contributed to this atmosphere. The grading was very demanding- little mistakes could mean significant points off. Afra posted the class average and the high in the class with each of your grades, and even emailed out what your class rank was after the first midterm, giving you a good idea of where you stood. Still, it really wasn't so bad after all. I had been scared about the class coming in, and had heard lots of 'horror stories.' As always, the reality is much less exciting than the myth. It's a demanding class, but if you commit adequate time and energy to it, you'll be fine. Tips: Make sure to work in groups on the problem sets (finding a good group early is key). At office hours, Afra gave a lot of helpful hints for the problem sets, so make sure to attend (more and more people figured this out as the course went on). If you are still confused about some problems, make sure to ask the TA. This is a course that requires that you're thorough. When it comes to tests, don't just read over your notes, do practice problems. The odd numbers in the book are good, and the book also has free practice problems on its website. Use the quiz and recall method for definitions- it's the one place you can guarantee yourself some points. Also, make sure you really understand the problem sets, as they are most similar to the tests. If you have any questions at all, make sure to find out before the test. More than once, little topics that I'd had questions on appeared on the test.\"",
            "review 2: \"08W with Afra Zomorodian: The median this year was a C and last year it was a C- for this same course. The tests are absurdly difficult and it's deliberately curved to a C average. Take this course if you don't mind getting a C.\"",
            "review 3: \"08W with Afra Zomorodian: The material is definitely tough, but it's interesting. The work is hard, but the prof is funny, and he's responsive to students (on the class evaluation when we all said the homeworks were a bit long, he made them a bit shorter). Bottom line: interesting material, good prof, but a little bit more work than the usual class.\"",
            "review 4: \"08W with Afra Zomorodian: Afra is the best CS prof I've had yet--it was really too bad that this course is packed full of every single part of math that I'm terrible at. This course will take you from formal logic to set theory to counting theory to probability, and while the lectures made sense at the time, it was the application of the material that tripped me up. The homeworks were reasonable if you didn't start them the night before and went to a TA session (very helpful), but I really screwed up on the exams. Afra is really excited about the material and will force you to be engaged, even at 10 am. His \"story time\" after every class was probably the highlight of the course for me, where he would introduce us to anything from the history of famous proofs to the quirks of the people who introduced said proofs and a couple lessons on topology, which I understand is his specialty. Afra is really friendly but will call you out if you don't put the appropriate effort into his class. All in all, as this class was required, it wasn't as bad as last time I tried to take it.\"",
            "review 5: \"08W with Afra Zomorodian: I was really intimidated by this course because I'm definitely not a proof person, but it wasn't as bad as I expected. The homeworks are difficult, but if you go to office hours (prof or TA) they're definitely manageable. I expected the exams to be really impossible based on how hard the homework problems were, but they're really not that bad--the problems were not as difficult as those on the homework, although still tough. Overall, the class is definitely difficult but very manageable.\"",
            "review 6: \"08W with Afra Zomorodian: Course was fine, if basic, but the grading on homework assignments was just shockingly terrible. TA clearly didn't even bother to read most of the work. Poor and little feedback in general. Very frustrating.\"",
            "review 7: \"07W with Afra Zomorodian: Afra is amazing. His knowledge of the material shows in his teaching, and he makes it easy to understand complex topics. I would reccomend any class he teaches to anyone.\"",
            "review 8: \"07W with Afra Zomorodian: Afra is a _great_ prof. He's funny, is able to teach the material very effectively, and is very helpful outside of class. His tests are really hard though!! Definitely not an easy class, but he makes it pretty interesting considering all this class really consists of is learning definitions. Story times at the end of each class are the best!\"",
            "review 9: \"07W with Afra Zomorodian: This course covers a hodgepodge of topics that filled in a lot of gaps in what I knew about set theory, probability, and how to write proofs. The grading may force you to be more formal than you're used to, but it's a good habit to get in to. Afra is a new professor, but is very enthusiastic, does a good enough job with the material, and fosters a very good \"class culture\" (which sounds meaningless but actually everyone got involved in class because of it).\""
        ],
        "Hsien-chih Chang": [
            "review 1: \"24S with Hsien-chih Chang: He is a weird guy. He is good person but doesn't know how to teach. He is very strict with deadlines so don't expect to get any extentions. Definitely take the course with Prof. Jiyanti.\"",
            "review 2: \"24S with Hsien-chih Chang: Wasn't expecting the class to be good based on these other reviews, but this was probably the best taught/managed math class I've taken at Dartmouth, if not for the grad student strike. Not only is Chang one of the nicest professors I've ever met, he's also funny and a pretty good lecturer. Chang also seems like the kind of professor that keeps improving his class. But the homework is graded way too hard and the TAs don't always give feedback which sucks. The class also is not curved, but you only need an 80 for a B+. If I was taking it again, I would go out of my way to take it with Chang.\"",
            "review 3: \"24S with Hsien-chih Chang: Less bad than I thought. Chang is a great guy but always understand a topic way better when I read the textbook even if I didn't go to class. Getting an \"100\" on the homework and worksheets is quite doable, just get them checked by TAs before you submit.\"",
            "review 4: \"23S with Hsien-chih Chang: Chang is not as bad as people say. Class is not super interesting, and he sometimes tends to ramble on with lectures about irrelevant material. He records lectures and attendance is not mandatory, and the class has the same structure as described below. Its not too hard to do well if you understand all of the assignments, but they do tend to be very difficult. Chang is very willing to help outside of class and is very approachable, kind, and helpful. This class is a necessary evil, and I would say chang does a good job.\"",
            "review 5: \"22W with Hsien-chih Chang: As much as how Chang is genuinely a nice person, I cannot in good faith recommend you to take CS30 with him. Structure of the class is as follows: in a given week, two of the class days you work on worksheets in class (you have 24 hours to do them.) The other two class days are lectures. Grading is 10% worksheets, 20%/20%/20% midterm 1/midterm 2/final, 30% problems sets (can work with partner, can use any outside resource, your worst 20% of all problem set problems are not graded.) absolute scale is >90% for an A and -5% for every letter grade below (A- for >85%, B+ for >80%, etc.) There\u2019s also a relative scale, but as of this writing I\u2019m not sure how generous that is. A major problem with this class is that it is essentially taught through the flipped classroom strategy, where you self study the content before class and then apply the content in class. It\u2019s extremely frustrating to work on a worksheet with problems that you have no idea how to do, not to mention that you probably don\u2019t have the time in the quarter system to study ahead anyways (which is what the flipped classroom strategy demands.) It\u2019s not like you learn that much through the lectures either, as lectures are essentially polling the class on how to do more problems rather than teaching it himself, and then also expanded applications that aren\u2019t tested/assessed in any way, and are thus useless. (But hey, you don\u2019t have to go to the lectures \u2014 he actually tells you upfront that if you don\u2019t want to go to them, you don\u2019t have to. But then again, you\u2019re still gonna have to be self studying\u2026) This isn\u2019t necessarily Chang\u2019s fault, but at least my term, the TAs were god fucking awful. Never responded to emails, had inaccessible office hours at weird times, never even showed up half the time (yeah go fuck yourself MS \u201824), took 4+ weeks to grade shit, and graded so much shit objectively wrong (for example, there was a question that asked for a numerical answer. I got -0.45 and showed how I got that number. The correct numerical answer was -0.45\u2026 and my solution was marked completely incorrect. Shit like this happened like 5 times for me. At least you can ask for grade requests, though.) I get that TAing CS30 isn\u2019t the easiest thing in the world, but that\u2019s not an excuse for not being able to give advice on how to do problems and being arrogant powertrippers. On a more positive note, shoutout to AA \u201823 for being the most helpful of the TAs, I guess. On the topic of office hours, Chang\u2019s office hours are definitely helpful - Chang is a lot better when teaching one on one. Unfortunately Chang\u2019s office hours were also inaccessible because they were located near when a problem set was first released, and thus you often didn\u2019t have enough time to develop questions about the problem set to ask to Chang. Problem sets are very hard \u2014 some of the problems are grad school level, which Chang admitted to on the last class lecture. But the problem sets being hard is probably true no matter what teacher you have. At least you can use any resource, including the internet, but be warned that some problems will not show up no matter how hard you google / stackExchange. Objectively, the exams aren\u2019t hard, but the grading is tough - a simple mistake can lead to -5%, and that adds up quickly. Also, if you don\u2019t immediately know how to do a problem (ie, you havent seen the problem archetype before) or you just run out of time, you\u2019re fucked. For me personally, I spent about 90% of my effort on CS30, and I think I\u2019m gonna end up with an A- in the class. Very stressful. This all being said, Chang is a nice person (as mentioned before), and it was his first time teaching the course. I wouldn\u2019t be surprised if the experience with Chang dramatically improved in future terms, and, if so, you should defer to those reviews rather than mine. But for now, you\u2019re probably better off taking/waiting to take CS30 with Deep C or Jayanti (def not Amit Chakrabarti tho haha)a\"",
            "review 6: \"22W with Hsien-chih Chang: Chang is a great guy, but do NOT take this class with him, at least not for a few more years. His idea of what we're capable of as students is disconnected from reality, he'll set incredibly hard work, even after some of the TAs warned him about it being too hard, and he'll still fully believe that we'll be able to do it. We became really reliant on TAs for homework assignments, so if your TAs are bad you might be fucked. Get ready to self-study, in our term the schedule was Mondays and Thursdays (yes, Thursday is x-hour, we used every x-hour) were worksheet days, and Wednesday and Friday were lectures. The content required to do the worksheet on Monday's worksheet would be taught in Wednesday's lecture, but the deadline for Monday's worksheet was on Tuesday; so we had to self-study the content needed for the worksheet just to go watch Chang teach it on Wednesday. This is the same for Thursday-Friday. This made us waste a lot of time. But get this: the readings we were assigned would often go way too deep, and Chang would never specify when this was the case, so even more time was wasted learning shit we didn't even need to know. I wish Chang wasn't such a nice guy, that way it would be so much easier to shit on him and how he taught this course. Please don't take it with him, you're better off waiting for DeepC or Jayanti\"",
            "review 7: \"22W with Hsien-chih Chang: Chang is a nice, funny, compassionate dude, which made this class a lot less hellish, and for the most part I'd say that the worksheets and exams were pretty fair. The weekly homeworks were a different story. They were just unreasonably hard and time consuming for no discernable benefit. As a result, for at least half of the homework questions, I'd be totally lost and would have to rely on friends to find answers, search online for similar questions, or ask TAs, which most people did. However, the TAs were pretty terrible this term. They'd reschedule office hours, grade arbitrarily, and a lot of the time they didn't understand the homework problems either. You'd hope they'd provide stability in this already challenging class but they didn't. Besides the TAs, a few other aspects of the course were disorganized too, which I would put to Chang's inexperience as a professor. Chang is also a mediocre/bad lecturer, but I think he'll get better as he goes along. One of the core issues with this class was that Chang didn't understand our level of mathematical knowledge coming into this course, which I think contributed to the difficulty of the assignments and the low understandability of his lectures. This class wasn't torture with Chang (at least for me), and it didn't ruin my term, but this is probably the hardest class in the CS department and while Chang isn't the worst CS 30 prof, he made this already hard class more mentally taxing than it should be.\"",
            "review 8: \"22W with Hsien-chih Chang: This was difficult because it was Chang's first term teaching 30, and it was a bit overwhelming to have work sessions on topics before he lectured about them. I'm a TA for 30 now and he's switched it to a more traditional format where he teaches first and then you do a worksheet on the topics later, which students seem to like more. He also cut out a couple tough units so you can spend more time on important stuff. Overall great guy and great teacher, he just needed to do a bit of tweaking after his first term of the class, which he did.\"",
            "review 9: \"22S with Hsien-chih Chang: Every review on here has been from 22W, which was Chang's first time teaching. As somebody who took the class 22S, Chang was honestly a really good lecturer and the homework sets and worksheets were not terrible. The course uses every x-hour and is alternating lecture and worksheets, most of which I got done during the work session. He changed his flipped classroom method so that the worksheet comes after the lecture, which was a complaint from winter. There also were weekly homework sets that took me a decent amount of time but were manageable. All his classes were optional, attendance is not part of your grade and he stresses that if you learn the content, you don't have to come to class, which was so nice. Most of the hate comes from the fact that winter was his first term teaching 30 and 30 is just a hard class in general. But honestly would recommend Chang for 30.\""
        ],
        "Carl Pomerance": [
            "review 1: \"05F with Carl Pomerance: This class wasn't particularly interesting, but I feel that I've come out of it knowing a good deal of the basic math I'll need to be a Computer Science major. Pomerance was a solid teacher, his fault being that he's on the boring side. The exams were some of the most straightforward I've had in college. Very few surprises.\"",
            "review 2: \"04F with Carl Pomerance: This course was very disjoint and covered a bunch of material, but was still slightly boring. Lots of proofs, lots of tedious work, but there was some interesting stuff (RSA cryptosystem, etc.) It seemed like everyone in the class was a CS major and was only taking it because they had to.\"",
            "review 3: \"04F with Carl Pomerance: I struggled with some of the material in this course--number theory and some of the counting principles in particular--but the topics don't often build on each other, so I did much better in the later part of the course when we were finished with that. The tricky stuff is evened out with easy stuff like logic and graphs. Also, Professor Pomerance dropped the lowest of the four grades in the course--two midterms, a final, and the homework (but the final counts more than the other three, so if that's the worst grade, it's weighted less). So you can completely bomb a midterm like me and not have to worry about it too much. The homework was due once a week. I really liked Professor Pomerance. Even though he kind of speaks in a monotone, only once was I on the verge of falling asleep.\"",
            "review 4: \"04F with Carl Pomerance: For those of you who don't know this, CS/Math 19 *REALLY* depends on who you take it with. I've heard NIGHTMARES about former profs (i.e. Amit Chakrabarti - avoid him at all costs). Prof. Pomerance, fortunately, is a great teacher and eased the pain of a (normally) extremely painful class. Pomerance is a famous mathematician, and brings that expertise to the classroom. Sometimes he makes assumptions that you're following along (like when he's writing a huge proof on the board), but he did the material (which IS very difficult) justice. The book is just plain bad. There are errors in the explainations, errors in the examples, etc. Fortunately for us, we got it before it was published, so it only cost $15 from the Copy Center. Pomerance compiled the problem sets from the questions in the book, which vary from being obvious to being very difficult. I got into a groove of starting early on the problem sets, and visiting the TA's/my study group regularly. I believe this is the ONLY way to keep up with the material (which, despite being broken down into discrete topics (like number theory and combinatorics) is fairly cumulative. The exams are not as difficult as I expected them to be, but that too reflects a choice made by your professor. Pomerance gave out Study Guides for each exam, and the problems were nearly identical in many cases, so DEFINITELY DO THE STUDY PROBLEMS - get help with them at all costs, because they are a PERFECT indication of the material on the exmas. All that said, I enjoyed the class. If nothing else, you do come out feeling a little bit smarter, which is more than i can say for a few other classes ive taken.\"",
            "review 5: \"04F with Carl Pomerance: Probably one of the best computer science courses I have taken. Originally, I thought I would loathe this class, but it turned out to be great. A lot of theory, but the prof made it fun to think about the problems in interesting ways. He even went outside of the text to show us easier, more interesting ways to solve problems.\"",
            "review 6: \"04F with Carl Pomerance: I really enjoyed this class. It covered all the interesting discrete math and tied it back to Computer Science very well.\"",
            "review 7: \"04F with Carl Pomerance: homeworks are usually 10-15 problems with Pomerance and come once a week.. they are often very difficult and take between 3-6 hours do usually... completing them are definetely vital for understanding course material prof is brilliant and explains concepts well, a bit dull as a lecturer and available outside of class... grades fairly\"",
            "review 8: \"04F with Carl Pomerance: the prof is good and the material's pretty interesting, but it's a tough subject to wrap your mind around and it has little to nothing to do with comp sci. it's a total math class\""
        ],
        "Sebastiaan Joosten": [
            "review 1: \"21W with Sebastiaan Joosten: (Reminder for future readers: this term was during Zoom/covid season, so everything's online) Based on previous reviews and friends' testimonials, 20X seemed like it was Joosten's first term teaching. However, it seems like he has improved somewhat this term with teaching quality. Lectures started out ok, but he would often make mistakes in his proofs since he was trying not to follow the lecture notes and to use his own examples (basically expecting that we would treat the lecture notes as supplemental reading to do before class). However, by week 3 or so, there had been a few lectures where he got completely lost in his own proofs so he asked us what we preferred and we preferred him to follow the lecture notes more closely so there'd be less mistakes, which he complied with for the rest of the term, and the quality of lectures got significantly better. However, be aware that Joosten has a very symbolic/text-based approach to proofs in general, while I was a visual learner, which sometimes made it hard to grasp concepts faster, since graphical examples of some of the theorems really does help internalize stuff for me. Apparently in 20X he also used to cold-call on people for points, but he doesn't do that anymore which is nice. The 2 midterms and final were relatively difficult if I were attempting to take these during the normal 2 and 3 hour time slots allotted (I was the highest grade of the class at a 97% in raw points--there's no curve, be prepared), but they were manageable in roughly 6 hours of intense LaTeX-ing and double/triple-checking, and I finished the final in roughly 12 hours--so in reality, the tests were more like extended problem sets for me with no help from office hours. Also be aware that Joosten follows DeepC's content schedule which has roughly 33% more content and is thus much faster than Jayanti's schedule. Stuff covered by DeepC/Joosten that isn't covered by Jayanti includes matchings/coverings in graphs, and all of number theory/RSA. Other than the mistake-ridden lectures in the beginning of the term and the longer-than-average tests, the class felt like a pretty normal CS30 term. I'd probably still choose DeepC over Joosten due to more experience with teaching CS30, but who knows what will happen in the future.\"",
            "review 2: \"20X with Sebastiaan Joosten: I would definitely not recommend taking this class with Joosten if possible. CS30 material is hard enough on its own, but Joosten makes the material more dense for a couple of reasons. First, his lectures are very VERY mathematical notation heavy. Coming from a math background without much practice with proofs, Joosten's lectures are very hard to understand/conceptualize because it is so math-dense. In other words, he is not a very visual person, so I got very little from his lectures and did most of my learning looking up explanations/graphs online. Second, he expects mandatory attendance over zoom and did not emphasize this until late in the term, so many people lost points. Third, the grading on the drills, psets, and tests was very strict; there were many minor mistakes which were heavily penalized. Drills were also pretty hard at the beginning of the term, so it felt like you were getting punished when trying to first grasp the material. Overall, since it was Joosten's first time teaching at Dartmouth and it was over zoom, the poor organization/lectures of this class were not entirely his fault (and he did improve over the term). But given all these reasons, over a third of the class dropped the class over the term (went from like 65 to 40) and the median was still a solid B.\"",
            "review 3: \"20X with Sebastiaan Joosten: This class is normally bad, but Joosten made it worse. I couldn't understand a single thing he said during lecture, and all of the TAs said he made it unnecessarily more confusing. He also took off a TON of points for attendance, so if you missed one class he made sure you got deducted some. He also cold called for the first half of the class until the entire class complained. This class was hell and I am so glad I could NRO it over the summer. Take it with DeepC and not Joosten.\"",
            "review 4: \"20S with Sebastiaan Joosten: Quality of teaching improved dramatically as the term progressed: the first lectures were more confusing than clarifying; by the end, lecture became genuinely helpful. A part of the problem was that Joosten would often use different notation than the DeepC notes he would provide us with; another problem is that he has a tendency to either miswrite what he's saying or make typos, either of which is devastating in dense proofs (this also improved, though). This was his first time teaching remotely, though, and I'm sure his future zoom classes will be much more consistent. Two other things to note: one, Joosten is obsessed with your attendance. If you don't submit drill the midnight before lecture, lecture becomes mandatory, and a missed lecture deducts a point from your drill grade. He didn't emphasize this policy in class (or in the syllabus...), so half the class got absolutely destroyed by this. Two, he does offer lots of extra credit - about ~4 points worth per pset. You should do as much as humanly possible, especially if you miss lecture, because the tests are brutal.\""
        ],
        "Ramgopal R.": [
            "review 1: \"05W with Ramgopal R.: this class was definitely mostly a math class with subject matter that could be boring. The prof was very available for help outside and inside of class but could be disorganized during lectures and sometimes spent a little too much time on the wrong areas and too little on others but he was very open to suggestions\"",
            "review 2: \"05W with Ramgopal R.: teacher very helpful and open for office hours but tests were too hard and questions were worded so it was hard to see how it related to material\""
        ],
        "Hsien-Chih Chang": [],
        "Prantar Ghosh": [],
        "Sebastiaan Joze Joosten": []
    },
    "COSC029": {
        "Patricia Hannaway": []
    },
    "COSC028": {
        "Lorie Loeb": [],
        "Prasad Jayanti": []
    },
    "COSC027": {
        "Eric Hansen": [
            "review 1: \"06X with Eric Hansen: ok, so take this class expecting it to totally dominate the last two and a half weeks of the term. The project will do that to you. The material is interesting, fun to learn, the project is fun to make, etc... everything that you'd look for in a top-notch project course. The TAs are also extremely helpful throughout the project One thing that majorly tainted my opinion of the course, though, was some of the absolutely asinine homework grading that occured... taking points off for putting X's instead of 1's on a Karnaugh map?? As though choosing different arbitrary symbols for logical validity indicated that I did not fully understand the subject matter... whatever. Furthermore, there were times when I had to go to prof Hansen to explain why one of my homework answers was correct, even though it was marked wrong. Every single one of those times, he admitted that his answer key was erroneous and gave me the points back. The thing that really infuriated me is the fact that these errors slipped by the grader: I've done enough grading to know that whenever a student comes up with a different answer from the prof, I look at his argument and write (on the student's homework) exactly where the error in his argument lies before deducting any points. If I cannot find any errors, I speak with the professor about it and work out the issue. At least one of the graders was not doing this, and for that he grossly neglected his responsibility to the class.\"",
            "review 2: \"05S with Eric Hansen: and good prof\"",
            "review 3: \"05S with Eric Hansen: It takes a lot of time and the class is frontloaded and uses every x-hour for the first 3/4 of the term. Other than that, the material isn't too bad and it's pretty interesting. The prof is really good too.\"",
            "review 4: \"05S with Eric Hansen: One of the best ENGS classes I've taken to date. A very time intensive project for the last five weeks and a very fast pace through the first five weeks make this difficult, but Prof. Hansen does a great job of making sure you stay caught up. Really fun material and you learn a lot by the end. Also, Prof. Hansen is far and away the most organized, clear, and helpful professor I've had to date at the Engineering School. He's tough and demands a lot, but overall is worth it. Probably the most I've gotten out of an ENGS class thus far.\"",
            "review 5: \"05S with Eric Hansen: Really just a great class. The project at the end is tough but fun. Of course, this probably only applies if you're into electronics and stuff.\"",
            "review 6: \"05S with Eric Hansen: This is a fast paced course...you start out and learn everything you're going to in like four weeks and then there aren't classes anymore while you do your project...the first midterm is the final (worth 25% of the grade) It is really fun but a lot of work...very rewarding.\"",
            "review 7: \"02S with Eric Hansen: ENGS 31 was a very interesting course the whole term. Classes and labs were a very helpful introduction to digital electronics. The most notable part of the class, however, was definitely the project. For the last few weeks of the class, I was in the lab 50 hours a week, and only managed to get 20 total hours of sleep the last week before the presentation. My suggestion is to pick a feasable project. Your life will be much more enjoyable that way...\""
        ],
        "Brian Pogue": [
            "review 1: \"06S with Brian Pogue: I've ever taken. Digital electronics was interesting, inciteful, and practical - everything an engineering class should be, although so few at Thayer actually are. More for the computer science minded, this course is one of the few I know that really starts at the bottem, with basic logic gates, and works its way up to something complex enough to be useful - the final project. If you have even just a pssing interest in electronics I suggest this course.\"",
            "review 2: \"06S with Brian Pogue: how can you not like a class whose end project is to make a game?\"",
            "review 3: \"05X with Brian Pogue: Lectures went pretty well-Prof. Pogue used Powerpoint, and printed the slides out before class so you could refer to them instead of taking notes. If you've taken CS 37 before taking this, a lot of the material is review, although there are some subtle differences. Pogue himself did a good job keeping people involved (and awake, given the class was offered as a 9) in lectures, but wasn't always around when you needed him outside of class. Towards the end, however, as the project was coming due, he became very accessible, more so than many other profs I've had. The tests were mixed-the first one included a lot of curveballs that weren't on the practice exams, but the second, more hardware-based exam was pretty straightforward. The weekly labs and large final project make this class remarkably similar to CS 23, complete with the same amount of classes (none) in the last third of the course. Labs went fairly well (see separate review). For the project, expect to spend a LOT of time (and perhaps some late nights) in the lab working on this project no matter what you do, but PROJECT CHOICE IS KEY. My personal recommendation is to avoid Digital Othello like the plague. Overall, if you want to take the class, go for it, but try to pair it with classes with lighter workloads-Astro 2, for example. It's a great way to close the 'hardware/theory gap' most CS majors have, plus get that elusive lab rec out of the way.\"",
            "review 4: \"02X with Douglas Fraser: Professor Brian Pogue is a nice individual, always smiling and willing to help you. But sadly, he is not good at teaching Digital Electronics. He is more of a biomed person. Doug Fraser is an excellent lab director, always willing to help you. The TAs especially Gordon Ehret is very helpful. I remember how he helped us out during the final project. Whether you are considering Engineering major or not, take this class and try to take it with Prof. Hansen.\""
        ],
        "Douglas Fraser": [
            "review 1: \"02X with Douglas Fraser: Professor Brian Pogue is a nice individual, always smiling and willing to help you. But sadly, he is not good at teaching Digital Electronics. He is more of a biomed person. Doug Fraser is an excellent lab director, always willing to help you. The TAs especially Gordon Ehret is very helpful. I remember how he helped us out during the final project. Whether you are considering Engineering major or not, take this class and try to take it with Prof. Hansen.\"",
            "review 2: \"02X with Douglas Fraser: If you've taken CS 37 prior to ENGS 31, you'll already have learned everything you need to know for this class. What you do get out of the class is the design of a larger project than in CS 37 and more importantly the actual construction of the project. Once you've had to build your own design, you suddenly start paying more attention to things like minimizing as much as possible. Professor Pogue doesn't always explain things as clearly as he could, but Doug is always there to help you out during labs. Be sure to pick something small and reasonable for your project! I don't think I can emphasize that enough. Guaranteed you will still have to put a lot of time and effort into it. The components you use in your project are far more basic than anything you'd use in real life so you'll still have your work cut out for you but if you start small you'll at least get it to work in the end. Then if you have time you can add more functionality to it.\""
        ],
        "Fabio Pellacini": [
            "review 1: \"08S with Fabio Pellacini: If you took CS22 and 32, you know what to expect. The difference in this class is teamwork, which makes it more challenging. The prof is extremely knowledgeable but a little dry and sometimes too skeptical (though that is mostly good as it pushes people to do their stuff early in the term rather than staying up nights during the last week, which is what we did anyway :D). Take it only if you are really passionate about this stuff and want a little challenge. For me, a great experience.\""
        ],
        "James Mahoney": [],
        "Lorie Loeb": []
    },
    "COSC024": {
        "Lorie Loeb": [
            "review 1: \"08W with Lorie Loeb: Lorie = best prof ever for this course TA's = most amazing resource you could have Class = best class ever This course will take all the time you give it and then some, and you will always wish you could have put more time into each assignment. The truth is you can probably do very little and get by, but it's not worth it to take the course if you don't want to spend hours in the lab with your classmates cursing Maya for crashing before you saved. If you are interested in animation *at all* then this is an absolute must course for you!\"",
            "review 2: \"08W with Lorie Loeb: Lorie is an excellent teacher (extremely nice, understanding, entertaining, inspiring, and helpful) and the class seems to attract a diverse and interesting group of people which made everything a lot more fun. Assignments can take as much or as little time as you want to put into them but you can expect to spend many hours in the lab. Animations are screened in front of the class and critiqued which is a pretty good motivation to get things done on time and work hard on them\"",
            "review 3: \"08W with Lorie Loeb: Besides being a class I was genuinely interested in, the course is enhanced significantly be the professor, Lorie Loeb. She is energetic, quirky, and just great fun to have, and she makes it a point to get to know each student. That aside, the class itself is immensely interesting. You work in Maya, a 3-D software program, and use already built and rigged models to make little animations that build up in complexity, starting with making a ball bounce and ending in a short animated film of your own choosing. You not only learn how to use Maya, but also learn film techniques using cameras, lights, storyboarding, and much more. This is where Lorie's film background really kicks in, as she studied film at NYU. An all around great course, and I highly recommend taking a class with Lorie before you're done at Dartmouth, even if you have no computer experience whatsoever.\"",
            "review 4: \"08W with Lorie Loeb: This class was a lot of fun and very hands on. Learning how to use Maya opens up the possibility of jobs in Computer Science or animation. Prof. Loeb is a really kind professor.I loved the way she tied computer animation to films, TV, other media and real life. This a great class but you have to be willing to dedicate a lot of time (probably 10-20+hours a week) especially at the end to have decent animations.\"",
            "review 5: \"08W with Lorie Loeb: This is not an easy class, so I would not combine it with other tough subjects (labs, drills etc.). It is a class worth taking just for the experience though; it is very different from anything else you'll ever do at Dartmouth . Lorie is the greatest prof I've ever had, her ability to inspire interest and creativity is truly spectacular. A must-take, but be ready to work hard, especially towards the end of the term.\"",
            "review 6: \"08W with Lorie Loeb: This was by far the best class I've taken at Dartmouth. Lorie is an incredible prof - not only is she incredibly knowledgeable about animation, but she's also extremely energetic and absolutely loves to help the students in the class learn. The class itself is a lot of fun. It pretty much revolves around hands-on experience with Maya, a state-of-the-art animation program. It culminates in a final project with you have to present to the class at the end of the term. Even if you're not a digital arts minor, or not even interested in computers or graphics, definitely take this class. It's practical and insanely fun, plus the TAs and the prof are amazing. You'll probably work harder than you will in any other class at Dartmouth, but it's worth it - no question. Highly recommended.\"",
            "review 7: \"08W with Lorie Loeb: This is a course where you learn by doing, which means that you will have to put a lot of time into the class if you want to see results. The professor is helpful, but she cannot be in the lab 24/7. Because of this and the fact that most people get their work done in the afternoon or late at night, the class all depends on the availability of the TAs. However, I'd wager to guess that all DA minors will have the dedication to work with students, like ours did.\"",
            "review 8: \"07W with Lorie Loeb: DEFINITELY WORTH TAKING. Gives you a whole new perspective on the process of animation--how much work goes into every little part, the amount of patience and cooperativeness necessary to making a really good animation. Lorie is incredible--very caring and patient, shares a lot about her background and how she got into the animation world. Very experienced so she rarely doesn't know how to answer a question. TA's are soo helpful too--when you have a problem, they work till the end to fix it for you. Overall, this class has probably turned me into a digital arts minor. This class is more time consuming and more constantly on my mind than any class Ive taken here yet, but in the end you see how much you've achieved and its incredible.\"",
            "review 9: \"07S with Lorie Loeb: CS32 was undoubtedly one of the best classes I've taken at Dartmouth. Lorie was a simply MARVELOUS prof - literally, she couldn't have been any better. She had tons of energy, was willing to help us out in whatever way she could, and was incredibly supportive and encouraging even when we were particularly frustrated with trying to do the assignments. I would blitz her from the lab at like midnight, and she would respond 10 minutes later - it was almost ridiculous how willing she was to help, regardless of what time of day it was. The whole course is based around learning how to use the industry-standard computer program for animation - Maya. Assignments are due every Monday, each of which is reflective of some animation concept that Lorie has taught the class about in the past week. You spend half the time trying to wrestle with Maya to get it to do what you want, and the other half of the time actually animating. Overall, the class is REALLY time-consuming - you will probably spend a minimum of 6-8 hours on the weekly assignments, but often more than that. And I probably spent nearly 50 hours on my final project. There's a reason that they call the Mac lab in Sudikoff the Sudikoffin - you'll be spending a LOT of time in that room. However, once your animations are finally done and rendered, everything is worth the work. You'll be so proud of what you've accomplished, and Lorie is really supportive and encouraging when she does in-class screenings of people's work on Mondays. Do NOT take this class if you're just looking for an ART distrib; there are way easier ways to do that, but if you have any interest in animation, digital arts, or want a course where you'll feel incredibly fulfilled at the end, take CS32. Lorie is amazing, and you won't be disappointed with everything that you'll have been able to accomplish by the end of the term.\""
        ],
        "Patricia Hannaway": [
            "review 1: \"22W with Patricia Hannaway: Overall, good class\u2013\u2013you learn a lot about Maya and animation. Definitely came out of the course with a different perspective on animated movies, modeling etc. Hearing about Prof Pat's experiences was also super cool (she's animated characters such as Golem from LOTR, Donkey from Shrek, Mushu from Mulan, and many others). Name any animated film by Disney or Dreamworks, and she'll probably have some connection to the film. However, a few warnings about the class. First, it's a lot of work. If you put time into your animations, your animations will look good. If you don't, then it's also pretty easy to tell. Second, Prof Pat's grading and feedback is really unpredictable at times. She'll take a look at your animation and say that it looks excellent, but then she grades it, and you somehow get a B on the assignment. As a result, medians are typically B+/B for assignments, but you do have the option to resubmit assignments which can boost you up to an A-/A in the end.\"",
            "review 2: \"21W with Patricia Hannaway: I imagine this class was a bit different than usual because it was online. Time was super limited and not having access to the Maya lab meant that most people couldn't render. Class twice a week for two hours (though the professor almost always went overtime). That being said, it was still a quality course. Hannaway is a baller with incredible experience and high expectations. She doesn't look for perfection, but she does look for an understanding of animation principles. She teaches 1-2 new principles of animation per week, so make sure to pay attention to them and focus on applying what she says to your weekly assignment. Go to TA or office hours at least once per week if you can. Basically, if it looks real, it's probably bad. She really emphasizes that animation is life PLUS more so you really have to learn to exaggerate everything. Definitely not an easy grader. For most assignments, the spread was like a 75 to a 100, with an average around a B+ or low A-. Not too low, but lower than you'd maybe expect for an art class. However, she does allow you to re-do all assignments once (averages in the second grade) and if you ball out on the final (worth like 25% of the final grade) you can still get an A. It gets progressively more time-consuming. First few weeks, I was spending maybe 5 hours max on assignments outside of class, whereas by the final I was pushing 15 easily. Still a great class overall. While there isn't too much room for creativity, you'll learn a lot about animation principles and practice.\"",
            "review 3: \"21W with Patricia Hannaway: Great course if you love animation, but 3D animation is pretty hard to get used to. The lectures can get boring because she repeats some things. I didn't really run into any issues with Hannaway, but other students have varying opinions. She can come off as rather arrogant or braggy at times, and I have seen her be rather rude at a student who wasn't following her directions that well.. I think if you go into it generally curious and just ask for her feedback a lot, you'll be fine though. When you ask for advice on any assignment, she will often just take over the computer and do it for you / show you how to do it. Also don't really expect to get anything above B for the posing assignment btw. The bar for that assignment is pretty high\"",
            "review 4: \"21F with Patricia Hannaway: Took this with Hannaway the term classes were mostly all back in person. I have mixed feelings about taking this class with her. There's only so much you can fit into 10 weeks, but still, the principles taught each week were solid for the most part and I do think I learned quite a bit about animation. My issue with this class lies in Hannaway herself. While she's certainly knowledgeable in her field, she might've been one of the few professors at Dartmouth that I have had a very difficult time maintaining my respect for. Most of the time, she's an endearing and hilarious person, but those moments are overshadowed by the arrogance, hostility, and pride she displays. I know for a fact some students hesitated to ask for help from her because they felt that she can be rude and condescending (BTW the TAs were awesome, super helpful and nice people). I once overheard her say: \"You think you know this better than me? No way. Not a chance.\" when helping a student, which I think is pretty representative of her worst traits. The student in question was definitely doing something wrong and not paying attention, but that is no way to talk to a student. But still, she will help you through a decent chunk of the assignment, as a previous reviewer mentioned. Also, this class sometimes had extremely boring lectures where we'd just watch her animate for hours or show us videos. What previous reviewers have said about grading is mostly true, though I would just add that, if it looks wrong/not-lifelike, it probably is wrong. Or just get a TA's eyes on it. Also the week on poses will not be fun. Ok this review is getting way too long, so overall, Hannaway is genuinely knowledgeable in her field and gives good feedback on Canvas on how to improve and I did learn a lot on animation, but just be aware of her personality. What previous reviewers have said about this class with her is generally true.\"",
            "review 5: \"19X with Patricia Hannaway: First of all, Hannaway's a legend. She's been in the industry since the beginning and has done amazing work such as Gollum from LOTR, donkey from Shrek, and other Disney classics like Mulan and Pocahontas. She likes to tell stories from her time in the industry which is fascinating and she obviously has a lot of connections. Sometimes, the advice she gives you may seem to contradict itself but just go with it because she knows what she's talking about. The class is structured as lecture with some work sessions where Hannaway goes around helping one-on-one. If possible, always have her look at her work cause she'll do a lot of the basics for you and you will save a lot of time. The course is mainly learning to use Maya to pose and animate, with some action-line drawing which is pretty easy even for the not artsy. Taking CS22 beforehand will make your animations look better. Devote a lot of time to your final project cause everyone else will as well and you don't want yours looking crappy at the final screening. Overall, this class is not a layup and a lot of work but you def. learn a lot from one of the greats in the field. It makes a great art distrib if you're not afraid to put in a little more work than the typical class.\""
        ],
        "Claire Preston": [
            "review 1: \"23X with Claire Preston: Don't take it with this prof. I'm not sure who's better, but Preston's grading is so arbitrary and unfair imo. I would spend hours on a project and she would take off so many points without valid explanations. I wouldn't say the class itself is hard, but getting a good grade is really tough. She's not forgiving AT ALL with deadlines. Missing one thing can screw u up pretty badly. She also doesn't really teach you how to use Maya, relies on the (amazing) TAs a LOT (i feel like they could teach the class better tbh), and hands out disheartening grades.\""
        ]
    },
    "COSC022": {
        "Lorie Loeb": [
            "review 1: \"23W with Lorie Loeb: This is an amazing course and you learn so much. As a person with no computer background, I did really struggle at the beginning of the course. However, the learning curve is so steep. The class is so gratifying and you get to have tangible work you are proud of by the end. You spend many many hours in the lab. For the first project especially, when you are learning how to use Maya. I spent genuinely 100 hours (but I also work slowly). Many kids spent between that and 50 hours. You end up enjoying the work you are doing. Lorie is an absolutely amazing professor mostly because she cares so much about her students. W is the most approachable prof I\u2019ve ever had and she is always there to help. She buys her students little gifts and food all the time. Also, The TAs literally teach the class and you will get to know them because you will spend so much time with them. They are literally amazing. They spend so many hours helping students in the lab. This is a great intro to digital arts. Though it is time consuming, you will think it\u2019s worth it in the end.\"",
            "review 2: \"22F with Lorie Loeb: Exceptional class. This course is like learning photoshop all over again but with a 3D modeling software, i.e., there's a relatively high learning curve. It took about 6 weeks for everything to click. The courseload is quite heavy: I spent at least 40-50 hours on the first room assignment (due week 6), though I spread that time throughout the entire term. The animation assignment was pretty easy, and I found it to be the most satisfying (12 hours). My abstract was simple (1 hour). There's a no-late policy, but there are unlimited revisions until the end of the term, so it's verrrrry lenient. But I'd warn against falling behind in this class. Probably spent 20 hours right before week 10 just finishing my work. Regardless, I found my completed works to be immensely fulfilling. As long as you do the work, you get an A. But know that many students in this class, including the handful of master's students, usually output fascinating renders--all of which are presented alongside each other. Essentially, DONT take this class with other large time commitments. Also, cherish your TAs.\"",
            "review 3: \"21F with Lorie Loeb: Best class I've taken at Dartmouth. Its a lot of work but I created some of the stuff I am most proud of ever.\"",
            "review 4: \"21F with Lorie Loeb: Extremely time consuming. Do not underestimate the time you will spend in the lab. However, it was an interesting class even if you're not super artistically talented and Prof. Loeb's enthusiasm was contagious. The TA's were lifesavers!!\"",
            "review 5: \"21F with Lorie Loeb: A lot of work but you're almost guaranteed to get an A if you put in the work. You can put in as much work as you'd like, and some people go way above and beyond. For your interior design project, I would recommend making a small room (instead of a big space) so you don't need to make as many objects that you need to make and texture. Maya crashes sometimes, so make sure to always save. I really respect Lorie as a prof. She is super energetic and genuinely cares about her students. Get to know her by going to office hours, especially if you're considering digital arts. If you're looking for a LAB course with no coding or science labs, this is the course for you!\"",
            "review 6: \"21F with Lorie Loeb: So glad I took this class! I was so proud of the work I made in this class and how much I learned. It's a really time-consuming class, but it's time that you want to put in and will def see the outcome of. Lorie is so passionate and kind, she really cares about her students and wants to make the class experience not about doing the work to get a grade but doing the work to learn and make something we're proud of. Definitely start on assignments early and ask TAs for help!\"",
            "review 7: \"20S with Lorie Loeb: This class is amazing. I took this class purely out of interest even though my artistic talents are questionable. And it was totally worth it. Even during remote learning this class was the bright star of my day. I had so much fun learning to do animation, and even though it's a ton of work, it's worth it every step of the way. This class is mostly based on effort and improvement, so if you put in the work, you'll do well no matter what comes out. We started by building out a model room to help us with the basics. Lorie recorded the lectures and she has tutorials posted online in case you're like me and forget everything. Then we did these really cool abstracts , where you played around with colors and water, etc. Then we ended on little animations which are hard at first, but really fun once you get the basics. This class is a little bittersweet because it was so amazing, and I just wasn't able to put my full effort in because of being at home and everything else going on. But! You should take it. Take it just because it's college and when else are you going to computer model. And also, the TAs and prof are absolutely amazing!\"",
            "review 8: \"20F with Lorie Loeb: This class was SO MUCH FUN. definitely a lot of time and work but one of the most rewarding and amazing classes ever. in terms of grade, she grades at the end so I don't know how it's going to go for that yet but apparently almost everyone gets As. Professor Loeb is so nice and engaging, one of the sweetest women ever\"",
            "review 9: \"20F with Lorie Loeb: Prof Loeb is legitimately the sweetest woman ever. I almost dropped after the first class because she went insanely fast and I had never done 3d modeling before, but she slowed down significantly moving forward after that. She truly wants her students to succeed, and if you find the topic interesting and want to learn, you will do great. You are able to work on / revise your projects to be resubmitted all the way up through the end of term, so there's always the opportunity to increase your grade/standing with her. If you can manage your time, this class will be an amazing addition to your schedule and you will actually learn so much.\"",
            "review 10: \"19W with Lorie Loeb: TAKE THIS COURSE WITH LORIE. She is absolutely amazing and makes the class super fun. Don't take it if you want a layup cause it is a lot of time but it is worth it if you want digital arts. The class is so fun and interactive.\"",
            "review 11: \"09F with Lorie Loeb: This class was just a lot of fun. I was really happy with the product that I received from it. You will have to put in some work, but the TAs are very helpful and you will be able to get everything done. Loeb is also very understanding and she was still tweaking the curriculum around to make the workload more manageable. Take this course.\"",
            "review 12: \"07F with Lorie Loeb: Lorie is an amazing professor. She is motivational, very in touch with her students and overall one of the best professors I've had at Dartmouth. The class is a TON of work, but the end product is totally worth it.\"",
            "review 13: \"07F with Lorie Loeb: Apparently everyone gets an A in the class. It is a fun but time consuming class, similar to any Studio Art class. Be prepared to work and have fun.\"",
            "review 14: \"07F with Lorie Loeb: This was only the second (i think) time that it was taught, so some of the kinks still need to be worked out. I heard this term was a huge improvement over the last one, so the third time will probably be a charm. Be ready to work, and also be ready to be frustrated from time to time. That said, you'll be very proud of what you accomplish at the end of the term. Take it!\"",
            "review 15: \"07F with Lorie Loeb: This is simply a great course, but compared to many other courses at Dartmouth, you NEED to be enthusiastic about the subject and have a REAL commitment. If you are thinking about taking it out of interest, to fulfill a distributive or whatever, go for it, but think twice: a lot of people in the class will be digital arts minors , CS majors or something related, and these people are really fond of what they are doing and like to put a lot of time into it: for them it is fun, not work, something they like to do as opposed what they have to do. Having said that, the course is suitable for complete beginners, you need no previous experience and you will not feel intimidated or anything like that. Lorie is an AMAZING prof, she makes everybody in the class feel relaxed and takes it easy. No exams, no midterm or final, not quizzes, not too much theory: everything is based on weekly labs that will take you A LOT of time. I don't recommend taking this class if you have another class with a lab or if your other classes are very demanding. You will need a lot of time to dedicate to this. At the end, though, you will have a REAL sense of achievement looking at what you produced and how much you learned. And even if you had to pull an allnighter or two in the lab, the sense of achievement will make up for it. So, overall, take it, but be aware of the time you need to put in.\"",
            "review 16: \"06F with Lorie Loeb: As always Lorie is just a spectacular professor. She is is extremely understanding and incerdibly encouraging. This was the first time the class was taught so I believe that the extreme amount of work is going to go down in the future. You spend loads of time outside of class on the homeworks, so I do not suggest this class unless you are both very interested in computer modeling and also more than willing to make this sort of commitment. You will get to love the hot Sudikoff Mac lab. If you are unsure if you are interested, let me tell you right now that you should be interested. You will be so proud of what you eventually make, especially your final project. This class also sets you up perfectly for the animation class (Cs 32) in the winter, which is by far one of the best classes I have ever taken at Dartmouth.\"",
            "review 17: \"06F with Lorie Loeb: Great class, wonderful teacher and TAs. Fabulous incentive to work hard. learning Maya is fun. You spend a LOT, i mean a lot, of time on this class though.\""
        ],
        "James Mahoney": []
    },
    "COSC020": {
        "Lorie Loeb": [
            "review 1: \"13S with Lorie Loeb: Course: Really interesting course on the ORC description and it ended up being pretty laid back except towards the end when we had to do a research project. Make sure you pick the right topic and if you don't like the one you are assigned change it, otherwise you'll get stuck doing something you're not really interested in. Professor: The professors are very different from each other. Each one used powerpoint slides during lectures with occasional videos and such. Professor Loeb is much more into the animation aspect of the course while Professor Wheatley is more into the psychology aspect of motion. A really interesting combo/pair of profs. Loeb is more animated and excited while Wheatley is somewhat serious ( a bit intimidating) but each one is very knowledgeable in her respectful field. My only complaint is that the course was a bit disorganized at times which may be because it's taught by two different profs but I'm not sure. Workload: So for the first half of the term the workload was I would say managable busy-work. We did 3 journals every week in which we just observed motion in our world and in addition to that we would have 1 or 2 legit journal assignments that were focussed on what we had learned in class. Not too difficult but this can easily become a \"let me do this last minute\" type of course, which in turn sets you up for failure during the final project. So about 40% of your grade is based on the journals and participation while the other 60% is based on a research project you work on with 2 or 3 other students. Hurray for group projects (sarcasm)... So this project is supposed to focus on one of the five motion topics covered in class. You choose a theme then get put into a group and then together in the group you design a project or research method to test out what ever it is in motion you're focussing on. This can get tricky because although Loeb is more into animation Wheatley is more into the statistical methods of research gathering in psychology. This means that you should/have to collect data and know how to properly analyze it (something you kind of can't do unless you've taken one of those annoying Stats 10 classes: psych 10, socy 10, etc.). My advice is pick something that's easy to research and test out to get valid numbers otherwise you may end up with some obscure data that you have no clue what to do with. You present your research to the class in a 15 minute presentation (make sure to have your data ready) and the class has 5 minutes for questions. Then you write a 15-20 page research paper summarizing everything you did and what you discovered. Overall the course has a chilled vibe to it and you learn all kinds of different applications of motion but it starts slow and just takes off very suddenly.\"",
            "review 2: \"06S with Lorie Loeb: This class was the best. You don't need to go to class except that she takes attendence and that will affect your grade. But it's just one project of your own and a journal.\"",
            "review 3: \"06S with Lorie Loeb: This class was not at all what I expected from a computer science course - I barely used a computer at all. The class is much less about trying to teach you one thing than showing your the many was in which motion is analyzed and that analysis is used, then letting you pursue your own interest within that realm. There were a lot of guest speakers and we learned about very diverse topics (sports medicine, dancing, animation, robotics, and bees, just to name a few). There are no exams, just one paper and a final project, both of which you can tailor to your own interests. Lorie is really into the subject and very interactive with the class. It's also a great TAS distrib for someone who's not great with engineering, computers, etc. and it isn't really that much work.\"",
            "review 4: \"05W with Lorie Loeb: This class was disappointing on several levels. I found that Professor Loeb grades with high expectations without properly conveying what it is she actually expects. She failed to inspire interest in me in a subject that I came to the class already interested in.\"",
            "review 5: \"05W with Lorie Loeb: This was the first term this course was offered..so it was still in its beginning stages. Very little work, very easy. Was disappointed that many of the things on the original syllabus never actually were covered in the class(because guest lecturers in the topics couldn't be found? not sure why...) and instead, entire classes would be spent discussing how to do a powerpoint presentation, or describing what one of the papers was supposed to be about. That was the most frustrating thing. The professor is very nice and very enthusiastic about the class, also very available outside class. She is an animator, though, and that is really where her expertise lies. The rest of the course is covered by guest lecturers that come in. Bottom line: this course is very easy, very little time. interesting at points, but overall, on the slow side. I'm sure it will improve with each new time it's offered though.\""
        ]
    },
    "COSC016": {
        "Craig Sutton": [
            "review 1: \"02S with Craig Sutton: The course could have been better.\"",
            "review 2: \"02S with Craig Sutton: This class is so easy. But Sutton is terrible. During the classes, I had to really try to keep my cool because his lectures were so irritating. He didn't teach at all! The first part of each class was a review of the last class, and then he would teach maybe half a new concept for the rest of the lecture. So really you could probably do fine if you just went every other class. But even so, Sutton was unacceptably bad. I have had horrible professors in the math department, but Sutton managed to be even worse. I didn't even know it was possible to be that bad! Linear programming is a really easy class, but since Sutton didn't teach well at all it made learning the material much more difficult than it should have been. Avoid Sutton at all costs. If you ever take a class with him, you will regret it. I guarantee it.\""
        ],
        "John G.": [
            "review 1: \"07S with John G.: The material isn\u00e2\u20ac\u2122t bad in itself but the textbook is rambling and not theoretical at all, so a reading course with books of one\u00e2\u20ac\u2122s own choice would serve better. I see no reason for taking this class except for TAS.\"",
            "review 2: \"07S with John G.: This is not a very difficult class, as long as you keep up with the work. Some topics covered are more confusing than others and I needed to go in and get some help during office hours, but the prof was very happy to go through everything until i got it.\""
        ],
        "Rosa Orellana": [
            "review 1: \"05S with Rosa Orellana: The material for this course is not very interesting. Most of it is simply learning new notations and new methods for solving the same types of linear programming problems. Some people had trouble in this course who hadn't had a good background in matrix algebra. I'd strongly recommend taking math 22 before taking this course. Though Professor Orellana seems dedicated to teaching and being certain her students understand mathematical concepts, she has trouble understanding and responding to student's questions.\"",
            "review 2: \"05S with Rosa Orellana: if you're going to use LP in a business setting (generally operations, engineering, cs) definitely take this course. if not, i'd think about taking something else\""
        ],
        "Richard Granger": []
    },
    "COSC010": {
        "Timothy Pierson": [
            "review 1: \"23W with Timothy Pierson: Honest opinion as an upperclassman who took this class: it's not easy, but you can do it. I went to this class with the expectation of doing really bad to be completely honest. What I will tell you is that the class is really time consuming, but it's possible. I took it with another super time consuming class, and a really easy layup. It worked out well for me, but I was still grinding PSETs until late hours on Sundays. First, Pearson is decent. Some of his lectures are great, but when he had code on slides it was always really confusing. He is a bit dry/not the nicest professor ever, but he is a fair professor. My biggest tips are: first, get a good PSET partner. They don't have to be the smartest, but pick someone with a similar schedule as you or at least someone who works in a similar way. What I am saying is: if you're someone who likes to do everything early, don't pick someone who grinds last minute. Also pick someone you are comfortable with/finds nice because you will spend some time together. Second, find out who the good TAs are early. Some of them are super helpful (shoutout to Nick and Rehoboth) and some of them are really not that helpful. It helps because PSETs get increasingly harder and you will need to stop by office hours from time to time, so go to one in which your time will be wisely used. Also, be careful leaving everything to the last minute because the OH the day before a PSET is due are crazy packet. Also, don't fall behind. Seriously, we learn so much in such a small period of time, it's crazy. That being said, I did enjoy the class. The assignments are really fun and I was so proud of them by the end. I would say CS10 is the class to know if you should be a CS major. If you enjoyed it, that's it. I did enjoy it a lot, put a lot of work in but also didn't die in the class. Trust yourself, but also definitely NRO just in case.\"",
            "review 2: \"23W with Timothy Pierson: This class isn't a joke that's for sure. Especially at the end of the term, it's intense. A ton of work and constant office hours for debugging. That being said, Pierson is my hero. A saint. Just an overall good man. If you need to take this class, take it with TJP\"",
            "review 3: \"23W with Timothy Pierson: Pierson is an amazing professor. The paper exam was a bit frustrating but the psets were engaging. Debugging was a little annoying but definitely doable. Not all TAs know what they are doing so make sure you go to ones that do know. Overall, not a hard class but pretty time consuming - good to take with a layup. Concepts are pretty straightforward and easy, but the coding part can be a little tricky if you didn't practice leetcode.\"",
            "review 4: \"23W with Timothy Pierson: Enormous fan of Pierson. Lectures (and slides) were very well-organized and he explained core concepts with remarkable clarity. He can drone on a bit so paying attention is important. That is to say, the class itself is not hard. The work outside of it definitely is. P-Sets took me 10 hours of sustained work each (once from 7pm-5am since I procrastinated ... don't do that) and I consider my logical thinking skills to be well-suited to coding. Short assignments were of course more reasonable - each took me about an hour. Exams were fine and a good review of core course material.\"",
            "review 5: \"23W with Timothy Pierson: Pierson is such an awesome prof. This class is super overrated in difficulty. While its a HUGE step up from CS1 (which i took in the fall), the class is pretty straightforward and it doesn't require an excessive amount of work to get an A. The midterm are tricky and a time crunch but with a bit of review and understanding of the psets you will do fine. I disagree with people who hate on pierson's lecture style. He is very clear and helps you understand the fundamental concepts that you are coding, understanding the implementation is usually up to you. I NROed which I found helpful to relieve the pressure but I still tried my best in the course and got an A anyways. Be very careful about who you pick as a partner. You need to understand the psets so don't get carried but also don't let yourself get dragged down by a partner who can't help out. Also take pierson out to breakfast the man is so interesting!\"",
            "review 6: \"23W with Timothy Pierson: Bro is a full time OP. His lectures put me to sleep every single class without fail. Content is tricky AF, but do NOT take this class without another layup that term since the p-sets take sooooo much time.\"",
            "review 7: \"23W with Timothy Pierson: There is of course a reviewer's bias on Layup List, where people who do well in a class are more likely to review it on the website. Most of the reviews that say \"this class is easy\" or \"not too hard to get an A\" are probably a byproduct of this. This class is difficult in many respects. Similar to CS1, it is a non-stop workload, where there's always a problem set to work on, short assignment to do, or exam to study for, and if you fall behind on any of these (especially problem sets) it takes like a full day's worth of work to get back on track. Toward the end of the term, I was basically procrastinating the problem sets until the weekend before they were due, which lead to my partner and I working Saturday and all day Sunday to finish them. This strategy can work, but would not recommend every week. The material is also difficult, mostly in the second half of the class. A lot of the first half of the class teaches data structures that you were introduced to in CS1, if you took that class, so the bigger thing is just getting up to speed on coding in Java itself. In the second half, the material starts to get trickier and the lectures more difficult to follow, so it takes more out of class review. The last two problem sets are also some of the conceptually hardest assignments I've done, so it ramps up in that respect. The pace is fast and the material gets hard, but it is nonetheless manageable for someone interested in the subject and willing to do the work. I thought Pierson was a decent prof, though his lectures can get kind of boring (he always lost me when he had slides with large blocks of code on them), but each class is recorded, so if you stop paying attention, you can still go back and review. Despite its difficulty, I've taken so many things from this class, and it is a fantastic final introductory course to computer science.\"",
            "review 8: \"23W with Timothy Pierson: Huge step up from COSC 1, in terms of both difficulty and workload, but a pretty rewarding class. P-sets (basically labs) usually took around ~10 hours and could be completed in about 3 days, and if you had a partner they were even easier. TA's were surprisingly strict about edge cases though so you really had to make sure your code was bulletproof. Midterms were rough, despite the content being relatively easy; they were moved on to paper this term due to cheating on one of the first assignments and as a result, you really needed to budget your time because of how much code you had to write by hand. Final was given 3 hours instead of 2 like the midterms and so it felt way easier.\"",
            "review 9: \"23W with Timothy Pierson: COSC 10 wasn't very difficult if you had Java experience. By having some Java experience, you could probably not go to office hours and succeed in getting an A-/A. On the other hand, if you don't have any background in Java, then the first midterm might screw you over. I recommend getting some experience beforehand if you want the course to cruise through smoothly. Also, do some of the extra credit. It bumped my grade up when I really needed it.\"",
            "review 10: \"23F with Timothy Pierson: Well-organized and the guy clearly knows his stuff. Just super hard lol. Definitely know Java before you come here and be comfortable with the syntax. I didn't and got bodied (thankfully I NROed). TA's are HUGE - if you have a chill TA it makes your life infinitely easier.\"",
            "review 11: \"22W with Timothy Pierson: It's hard to give a black and white answer regarding how much I liked this course. I learned so much in this course. I really felt like I understood the algorithms at the end, the data structures, ADTs, and how I would implement different elements to solve a problem. However, despite my efforts, I finished this class with a B, which I felt wasn't really deserved. I worked probably 20 hours a week on this class, where I would go to office hours, watch the lectures 3+ times, take notes, ask my TA questions, find numerous practice problems on the internet, ask Prof Pierson how to prepare for exams, and so much more. It is frustrating to receive a grade that does not reflect my efforts. Personally, I did not like Prof Pierson's teaching style. However, I think he's a great guy with great intentions. He is truly very very nice. But, he never physically wrote out code, and I felt like class wasn't always engaging. I think I will compare every single CS professor to Vasanta, which is perhaps unfair, but she made the class engaging and helpful every single time. I never felt like going to class was a waste of time, and I cannot say the same for this class. To whoever is taking this class, know that it is a lot of work. It is SA after SA, PSET after PSET, exam after exam. Yet, do not be discouraged. If you want to be a CS major, still take this class and try your best to get through it. You may not receive the grade you want, but one grade does not define you, and you should continue to pursue your dreams and interests. Good luck!\"",
            "review 12: \"22W with Timothy Pierson: As someone with a pretty solid grounding in CS, this class on a surface-level took basic effort to get a good grade in. For people with similar CS background (have taken an intro and data structures & algorithm course), the first 2/3 of the class should fly by. With some minor review on class-specific notes on topics, I was able to do really well on tests. However, after the second midterm, the course material starts to get outside of the realm of a typical DS&A class, and covers web, synchronized, and other algorithms. Make sure to go to these lectures if you don't understand these concepts. From a homework perspective, I found myself devoting 4-10 hours per problem set, which was usually on a Saturday. Make sure that you plan out your other work so you're not crunched on Sundays like I was. The TAs are all great and recitation & SA's were easy and helpful. If you put in the work, you should be able to be fairly successful in the class, but it does take time regardless of background.\"",
            "review 13: \"22W with Timothy Pierson: This course will tell you whether you should be a CS major or not. I went into the course with AP Java experience and it was quite easy for the first 3-4 weeks before you learn new ADTs and more information beyond just ADTs itself. The course is pretty cumulative in the fact that everything builds on each other. I highly recommend looking at slides after class to make sure you understand the information going forward because you will use beginning weeks material all the time. Half of the grading was psets( 5-8 hours each and increasingly difficult) and short assignmetns (easy 100s). Definitely get a good Pset partner and do the Psets because they are the best practice you have in the course. The other half are tests that were pretty difficult (c+/B- medians). They are open note, online timed coding tests, 3 parts of 40-45 mins, and one part MC. The timed coding tests are very stressful and hard to prepare. You either know it or you don't. The midterms and final followed this format. Overall the class was interesting and you definitely learn a lot. The lectures can be boring sometimes but Pierson is a really cool dude and really just wants the best for his students. Get to know him more because he has so many interesting and insightful experiences.\"",
            "review 14: \"22W with Timothy Pierson: Took this class with Pierson, then worked as a teaching assistant for Quattrini Li. My best recommendation is to take the class with Quattrini Li. I believe that both professors are equally capable of teaching the material, and are equally intelligent. I do not believe, however, that Pierson comes close to Quattrini Li where concern about student success exists. While I think both professors have a genuine interest in ensuring their students succeed, Quattrini Li does a much better job of showing it and actually ensuring student success, especially when said students are from populations historically underrepresented in fields of computing and technology. About the material: my best recommendation for you is to practice everyday and seek help often. For problem sets, aim at scoring above a 96/100 on every single one. Find the good TAs and stick with them. Often, you will find that while all the TAs are equally knowledgeable about the material, some of them are just kinder or friendlier. Stick with them. When I took this class, TAs were not willing to hold office hours on Zoom, which affected when I could attend them. There's a lot of politics about whether COVID-19 is over or not, so I will leave that out of this review. But I will mention that Quattrini Li's TAs were very willing to offer help in-person and on Zoom which, to me, was very helpful. And I assume it was to other students as well. For exams: I suggest you go over the material covered prior to exams and ensure you understand how it works. I also suggest you work on the exams on your own. While I know some folks worked with friends, I think that this has the adverse effect of overestimating your own knowledge, or getting you in front of the Committee on Standards. Avoid this. Remember: you can use an NRO. I suggest you apply it anyway because of the cushion it provides. All in all, good luck, seek help often, and work diligently. CS 10 does not have to be a difficult or draining course.\"",
            "review 15: \"22W with Timothy Pierson: PIERSON IS THE BEST! I highly recommend taking this class with him. It's not the most fun course, as it really gets down to drilling in coding, and the volume of work is a LOT. However, Pierson does his best to keep the projects/class engaging and definitely make use of the TA's and office hours (debugging was by far the most time-consuming and tedious part of the class) If you have experience with APCS, the hardest part is just keeping up with the workload and setting aside time to debug. The exams weren't too bad, but they vary by term\"",
            "review 16: \"22W with Timothy Pierson: Loved the class. Pierson is a good lecturer, though I can see his style agitating a certain type of person and that's fair. I would recommend this class if you are interested in continuing to learn about CS past the content of CS1. I took it out of interest and, while I could have done better in the class, I can't complain about the class, the prof, nor the grading\"",
            "review 17: \"22W with Timothy Pierson: This class gets a solid B from me. You have to take it to be a CS major, and if you are actually proficient in CS and planning to major in it, you'll most likely cruise through this course with an A or A-. That doesn't mean it's the most fun course ever. There are 9 short assignments and 6 problem sets (which are like labs from CS1) and you can choose a partner to work on the problem sets with. Most PS take between 2 and 6-7 hours or even more so definitely don't procrastinate. Pierson is an average lecturer and pretty much reads off slides for most of the class, but you sort of needed to go to class to do well on the midterms/final because he asks very specific multiple-choice questions where he is looking for an answer that he mentioned in class. The midterms are fair, but fast (4 40 minute sections, 3 of which are coding intensive) so plan to rush through and never really have time to test your code. If you've just taken CS1 and plan to take this class, do something to learn Java in advance because it really picks up fast. Also, the TAs are a great resource but people realize that quickly so if you want to actually get help from a TA you can't really go the night before a problem set is due (I tried, and got turned away because office hours were \"full\").\"",
            "review 18: \"22W with Timothy Pierson: If you're comfortable with Java, this class isn't too bad. The lab assignments were generally long but the things you implement in them are actually really cool, so the work is worth it in that respect. You need to pay attention to the style of your code to get a 100 (i.e. user interface) because you will get points taken away if you don't cater to the user. Pierson is a fun guy, lots of interesting life stories and very outgoing. His lectures were very detailed which is helpful for understanding the material but he does a decent job selecting material for exams (stomps foot), though the exams were difficult. Some people might like the four-part format, but for me it was quite the hassle because the time taken on each varies wildly from section to section, so you might be running up against the clock on one part and finish with half an hour left on another (which happened on two of the three exams for me). It would be much better if the time was a single complete block like it is in literally every other class I've taken but whatever, that's how it is.\"",
            "review 19: \"22F with Timothy Pierson: Personally, I loved this course because it taught me CS which is much more useful and in-depth compared to high school CS classes. I came into the class with a fair amount of Java programming experience which was super helpful. If you have programming experience, that's great. If you have Java experience, you'll be fine for the first 3rd of the class, easy. That being said, the class itself is not easy, but I thought it was incredibly interesting and intellectually stimulating. The problem sets are the main way you actually practice what you learn in the lectures because the short assignments die down a lot after the first half of the class. The problem sets are challenging for sure. You should always start early if you can, and go to office hours for anything you need help on. TAs and both professors are SUPER helpful! Some people say that Pierson is boring and not a great lecturer, but I thought he was great. Pierson is an amazing person with a super interesting backstory, and his lecturers are completely fine. The content may be hard, but Pierson will answer all questions and even stay after class to discuss questions with you. As for grades, there are 2 midterms which for us were online and open-note, usually within a 24-hour window. However, I hear from Pierson that this might change to in-person, paper exams next term or in the future. The midterms are very long with medians of Bs. Problem sets are long and challenging, but usually, if your solution works, they will be graded easily. The final is even longer than a midterm and is fairly challenging. A lot of people I know had a hard time with the final third of the class's content, and I would agree. Make sure to study up and review all of the notes before those exams. Overall, COSC 10 is a hard class for sure, but it is also very interesting and will advance your programming knowledge tremendously. Take it if you have previous experience and are willing to put in the time and effort. Oh also, NRO it if you can.\"",
            "review 20: \"22F with Timothy Pierson: Pierson and AQL are both is a great profs! This term was taught by AQL and Pierson and the two sections are very integrated so you can always go to AQL or Pierson for anything (though AQL tends to be more active on Slack). AQL worked with me for 40 minutes privately just to figure out my problem set that I was really struggling with -- he's really great! Pierson is also very helpful if you ask for it. The TAs are godsends and you should DEFINITELY go to office hours whenever you can. Honestly, the class overall was pain. If not for the NRO I would have lost all motivation to see it through. The assignments were hard, the lectures weren't always clear. I came in with AP CSA experience, so the first couple of weeks were super easy, but after that it was no joke. Understanding the lectures is by no means the biggest portion of this class - you definitely learn more by just doing the assignments and tests. ...enjoy...make some good friends and struggle through the psets together!\"",
            "review 21: \"21S with Timothy Pierson: Loved this class. Find a good pset partner and stay present in class. Psets and short assignments are easy. Tests are stressful and kind of hard, so make sure to study the slides and the code he talks about in class\"",
            "review 22: \"21F with Timothy Pierson: Definitely take this class if you are considering it. Pierson is an amazing lecturer. Short Assignments aren't hard, and if you do get points off you can earn them back. Programming drills are easy and you're just graded on attendance. OKAY HERE IS THE IMPORTANT STUFF!!! Long assignments. Personally I went into the class hearing it was very hard and thus I should seek out TA help immediately. I regret doing that. Try to do the long assignments by yourself and if your code isn't working, try to debug it. Only go to TAs for long assignments if you are actually stuck. This will make you actually learn the material and enjoy the course more. You code some really cool things. Also, obviously everyone says this but start long assignments early. TA hours get so busy right before the due date so if you get these done ahead of time you can have a TA all to yourself for questions. Now exams. Definitely the hardest part of the course especially because there are many questions and not much time to code. Study by really understanding the dfifferent ADTs and when you approach exams think of what ADT Pierson is looking for. Once you have that, the rest is not so bad.\"",
            "review 23: \"21F with Timothy Pierson: Ok, so context: AP CS in high school, had a good understanding of java. I found this class pretty easy. Lectures are very easy to understand if you can manage to pay attention. You might want to go over the lecture code and run it later + review lecture notes (around 3 hours per week). Problem sets-6 count for 30% of your grade. Some are harder than others. Start early!!! TAs will help out a lot in office hours, and if you figure out who the good TAs are quick, you're all set. I spent 4-5 hours a week on the Psets (be warned if you start late the line for office hours gets long). The problem sets are due Friday usually so keep that in mind while planning your schedule. SAs after each lecture were great for understanding concepts and took ~15 minutes. Now the real stuff: exams. 2 midterms = 15% each and final = 25%. We do get practice material that's very diff from the actual exams. The exams are easy to understand if you know your data structures and when to use them. Pierson gives out hints on what will be on the exam which actually helps you know what to look for. We had open note online exams which made it easier, but they are still conceptually challenging under a time crunch. My best tip is to practice coding under timed conditions and make sure psets bring your grade up! A is usually a 93 too but it curved down to a B+ median:)\"",
            "review 24: \"21F with Timothy Pierson: This was a fantastic class with a fantastic professor. He consistently and adequately answers questions, and the lectures are well-paced and informative. He also has lecture notes on his website, which help if you need another, slightly different explanation for the subject material. The recitations (additional hour with a smaller group, led by TA) were overall very helpful for understanding the more complicated topics near the end of the course. I had considerable experience with CS before taking this class (skipped CS1), which helped considerably. The first week or two were review of APCS A from high school, and the rest of the first half was basically the same material as data structures classes that some high schools offer. With this in mind, the class was not all that difficult for me, but I imagine people who had no experience in HS/got to this class from CS1 had a considerably harder time. The labs were long and challenging but can be fun, and you can work on them with a partner, which was very helpful. There are lots of office hours from the TAs, who were very willing to help. The tests were a mix of conceptual multiple choice and problem solving. The free response requires you to write code *very* quickly, so you'll have to know the material well enough to do it right the first time. This was ultimately a great class. Tim Pierson is a sigma male.\"",
            "review 25: \"21F with Timothy Pierson: I honestly think the difficulty of this class is overstated. Yes, the exams go by fast, but Pierson scaffolds them pretty heavily, and since they\u2019re also online now you can code faster. Yes, the PSETS take some time, but they\u2019re also scaffolded a lot (literally just read the instructions on the course website) and if you have a good partner (granted, may not be a guarantee) you can split it into two ~5 hour parts (which I think is reasonable.) Pierson\u2019s also just inherently a great guy (super nice and has a really interesting life.) I will concede however that his lectures are a bit dry. Still, I would highly recommend taking CS 10 with Pierson.\"",
            "review 26: \"20W with Timothy Pierson: Monotone lecturer but a good dude. The psets take a long time and the tests are pretty hard. If you make sure your psets and short assignment grades are near-100 and you get B's on your tests, you'll be in A territory. To avoid getting railed by midterm 1, know your Java (toString, inheritance, etc.) and think data structures in data structures (lists of lists, arrays of arrays, etc.) to map 2d situations. Midterm 2 required you to understand file reading/writing, runtime, and how to solve solutions using up to 4 data structures in a single method. Can't give much advice for the final -- ours was an online MC joke because our class got nuked with corona.\"",
            "review 27: \"20W with Timothy Pierson: Pierson is a great instructor. If you did AP CS in high school, the first 2 weeks of this class will be very boring. Otherwise, the class is interesting. If you have no Java experience, this class will be very difficult. Unless you are really committed to becoming a CS major, reconsider taking this course. Throughout the course, you learn multiple new data structures, machine learning techniques, and client-server communication. The workload is about 6-15 hours a week on a problem set. They get progressively harder and require the entire week. Both the midterms are reasonable, but a big time crunch.\"",
            "review 28: \"20W with Timothy Pierson: This was a challenging, but rewarding class. Most of the challenge comes not from the conceptual difficulty of the material (though that begins to change during the last third of the class) but from the sheer amount of material covered. With every new day, we were presented a completely new topic with little relation to the previous. That's just the nature of the class, and most of my peers felt that there was little to be done except study diligently. Regarding workload, I would spend 4-10 hours on each of the problem sets (this was fairly quick I think) but this was because I refused to go to office hours because I wanted to struggle with the content. The short assignments took 10-20 minutes on average, and I would study for around 5 hours for each exam. This is the experience I - somebody who: took CS 1 with Cormen and scored well (A), had a fairly solid background in math, and went out like 4 times this term- had, so factor that into your evaluation of this review. On the topic of experience, this class was an absolute blast. I really enjoyed the content (however difficult it may have been) and it significantly deepened my appreciation and understanding of computer science. I like Professor Pierson a lot, and his teaching style suits my own learning style (brief general overviews in class, where the majority of the learning comes from struggling with the content yourself in problem sets and in the process of studying for exams.) Some do not like Pierson as much (and there is legitimate reason to feel this way) and I remember one of my peers describing Pierson's lectures like McKinsey pitches - you leave his lectures feeling safe and secure in your understanding of the material even though you should not. All in all, I recommend this class to individuals interested in CS or simply looking for a challenge.\"",
            "review 29: \"20W with Timothy Pierson: Good class. If you have a strong CS background (especially Java), e.g. a 5 on the AP, it will be easy. Otherwise, it can be a very hard class. Pierson expects you to either already know or teach yourself Java, and immediately gets into abstract concepts without teaching how to code at all. Still, he is a good teacher with a great website containing all the slides and notes and his teaching style is solid. Don't be afraid to ask questions in class. The problem sets can be harder than expected, depending on your programming skill coming in to the class.\"",
            "review 30: \"20W with Timothy Pierson: This class has so much material that you really need to want to study it for you to survive this class. I came into the class sort-of taking it for fun, but struggled a lot because it took forever to just study all of the material. It's so much, and it really takes a lot of willpower and motivation to get through it. That being said, I quite like Pierson as an instructor, and his lectures always made a lot of sense. He was always really clear, and he has a really untraditional background for a computer scientist having gone through the business side of things first.\"",
            "review 31: \"20W with Timothy Pierson: I came from an AP CS background in junior year and had minimal Java experience afterward. I intended to be a CS major before taking this course, and my thoughts remain unchanged. Nonetheless, I picked up the Java concepts quickly again, though I understand the suffering CS 1 students face when transitioning from Python. I was one of those students during the first week. Like many of the other reviews, I found CS 10 very challenging but also quite rewarding. The problem sets/labs were difficult, though taking advantage of TA office hours can greatly help. The exams were also challenging and knitpicky (typically C medians), though their low weightings make them relatively low stakes (15/15/25 for the two midterms and final). As you can see through the graph above, the course median typically ends up being A-/B+. You typically find out your exam grades about 4-5 hours after completing the midterms (around 1 a.m.). This term, because of the open-book online final, I suspect there was a bit of grade inflation. The textbook can be helpful (I found a free PDF), though I wouldn't invest in it. I did the problem sets alone, and perhaps that may have contributed to a better understanding of the concepts. Make good use of the cheat sheet (and you don't have to make it 4 point font if you take the time outside of class to internalize concepts). One time I didn't put something down on my cheatsheet when the question testing that topic was 8 points, but I earned 7 points by writing what I recall from the problem set. I also had another question I wasn't really sure how to tackle, though I wrote some source code similar to what the question was asking and earned 6 out of 7 points. Make sure to start problem sets early so that you get priority with the TAs!\"",
            "review 32: \"20F with Timothy Pierson: Pierson is the goat! Take this class with him - you won't regret it. Although you'll definitely want to know your Java beforehand. They won't walk you through the syntax during class; instead, you'll get right into the problem-solving. So it's critical that you know how to at least work with Java syntax beforehand or you might be surprised to find yourself unable to follow along to the sample code he uses in his presentations.\"",
            "review 33: \"20F with Timothy Pierson: Coming in with APCS, Java background knowledge really helped. Definitely a hard class, but midterms are fair (material has all been taught). Textbook is useless--> everything is on his slides. Recitation is helpful if you are engaged. PSETS are doable if you start them early. Pierson is the best.\"",
            "review 34: \"20F with Timothy Pierson: Pierson is a great prof. He assumes no prior knowledge of Java, so the first week or two is pretty mellow. Pierson also explains things pretty in-depth so you don't really have to read the textbook to understand the concepts (I actually found that the textbook made things more confusing). The PSETs are difficult, but working with a partner makes them manageable. Because the course was taught online, the midterms were open-note. I took very detailed notes during all the lectures and found the midterms to be easy, especially since we could use IntelliJ to debug our code. This course is great if you are interested in pursuing CS further. It's difficult, but if you stick through it, it's very rewarding.\"",
            "review 35: \"20F with Timothy Pierson: I really enjoyed CS10. Challenging, but definitely manageable. There are 6 PSets, which are kinda challenging programming assignments, 8 easy short assignments, and 2 midterms and a final. Overall a lot of work, but if you have a strong CS background its not that bad. Programming is done in Java. Professor is really nice. Online exams are all open note and open programming processor so it's really just a matter of managing your time well.\"",
            "review 36: \"20F with Timothy Pierson: Professor Pierson is amazing! Obviously, CS10 is a difficult class - so much material is cramped into nine weeks. But Professor Pierson really makes sure that he answers questions anyone has throughout his lectures so as long as you pay attention, you'll learn a lot out of this course. Expect the workload outside of class to be around 5~10 hours per week. Start problem sets early...theres a huge line for office hours near due dates for problem sets so get started early + visit office hours before anyone else so that you have more time with a TA. I did very well in this class because I had a lot of experience coding in Java, but if its relatively new for you, make sure you stay ahead of the game because his exams will expect you to fluently code in Java...otherwise you'll run out of time.\"",
            "review 37: \"20F with Timothy Pierson: As someone who had never touched Java and only taken CS1 before this (although I did well in CS1), I found CS10 SO HARD. I would recommend reading the class notes and slides for class before he teaches them in class, otherwise you'll have a hard time understanding the lecture. I was spending 15+ hours each week and still struggling to get it. I do think it's possible to succeed if you attend office hours and are willing to devote lots of time. Would also suggest going over Java basics before the term starts.\"",
            "review 38: \"20F with Timothy Pierson: I would say that CS10 was the most challenging class I've taken at Dartmouth so far, but it was also the most rewarding (then again, I'd never really had coding experience before, and I'd taken ENGS 20 instead of CS1). Prof was great and very knowledgeable, though the course pace was insane. Exams were challenging, not necessarily because the content was tough, but rather the time limitations were really constraining. The 6 problem sets were also quite hard, and you needed to start them early in advance if you wanted to have any hope of finishing them, but they were so rewarding to complete. Overall a wonderful class which I'd recommend taking, but be ready to put in quite a lot of work.\"",
            "review 39: \"20F with Timothy Pierson: Pretty great class. The content is very relevant for anyone considering a career in CS, and the lectures by Pierson were very understandable. When I didn't understand something fully, the short assignments, drills, and problem sets always solidified that concept and made it so I would be successful in Midterms/Finals without much studying. Overall, the class is fairly easy if you have a good CS background, but if you took CS1 and had a rough time, you will have a rougher time in this class. Besides that, just watch out for the problem sets. My number one tip for this class is to BEGIN THEM EARLY. If you work on them gradually over the course of a week, your code will be way more functional and less buggy than if you try to crank them out in the night or day before. Otherwise, good class, would recommend.\"",
            "review 40: \"20F with Timothy Pierson: This was a great class! Pierson is an excellent prof, his lectures are quick-moving but engaging (for the most part). One of my favorite things about Pierson's style of teaching is how he has lecture notes and slides for all the classes on the website, it makes it really easy to follow along or go back to review a concept. One issue I had was that I feel like I didn't understand the implementation of some concepts well enough from his lectures. The conceptual part made sense, but I got lost when he would switch to walking through the code, and would often be confused about how to implement them. This course worked well in an online format, though sometimes it was difficult to collaborate on problem sets. Overall I found this course to be a lot of work; we move fast through topics and it's easy to fall behind if you don't work hard. I didn't do very well on the midterms (the time crunch was super difficult for me), but was able to bring my grade up a lot with the final (I studied so much for it :0). Problem sets weren't overly difficult, I always felt like I had the knowledge base to get them done, they just took a lot of time. My advice is to go to office hours early and often! The TAs are usually very helpful, even just walking through concepts or how to start the problem set. Overall, great course, I learned a ton, and I'd highly recommend it to those who want to get a better knowledge of CS.\"",
            "review 41: \"20F with Timothy Pierson: This course is going to be hard no matter who the prof is (unless you're some CS god, in that case congratulations and fuck you). To beat a dead horse, there is SO MUCH material. I came in with some (very) basic Java background and breezed through the first few weeks and the first midterm, got cocky, and was subsequently fucked in the ass by the second midterm. And yes, start the labs early. Even when I had the knowledge to complete them, it takes hours of debugging to complete. The TAs really saved my ass there--Lily, Dylan, and Gokul, you guys are the fucking gs\"",
            "review 42: \"19W with Timothy Pierson: It's really helpful if you already know some Java before starting this course. I relied heavily on my Java background from AP computer science in the class. The class moves really quickly, but it's manageable. Preview the material before class, review the slides after lecture, and make sure you understand the programming drill exercises and problem sets. The problem sets take so much time and are really difficult, so start them as soon as possible and stick to a good schedule. The problem sets are really frustrating and difficult, but they are also extremely rewarding at the end (when the code actually works). The TAs are helpful in general, but some didn't really know what was happening a lot of the time. Professor Pierson explains concepts well. However, the problem sets could have been explained a little bit more clearly.\"",
            "review 43: \"19W with Timothy Pierson: I took CS1 with Cormen \u2014 no programming experience beforehand \u2014 and found it very manageable and straightforward. CS10 was double the workload & difficulty. Mainly because Pierson doesn't spoonfeed you nearly as much as Cormen does; whereas Cormen's instructions on both labs & exams were basically pseudocode, there is a lot more room for interpretation, and variability in solutions & their efficiencies, on Pierson's materials. Get used to thinking of data structures within data structures within data structures. Also, do whatever you need to do to keep up with the fast pace of this course (preview, review, ask questions, etc.). Make use of TA office hours, but maximize your time by going to the ones with the more experienced TAs. You'll figure out who they are soon enough.\"",
            "review 44: \"19S with Timothy Pierson: This course sucks so much and made me cry. I don't know who had enough hours in their weeks to be able to succeed in this class but it certainly wasn't me. I don't think I was ever able to turn in a lab fully completed because they were so needlessly obscure and difficult. There was way, way too much material packed into 10 weeks and the exams were harder than anything we'd seen in class or on homework. I enjoyed coding before this class but no more- it's clear that the CS department at this school doesn't have room for me, or for any student that enjoys free time/mental stability.\"",
            "review 45: \"19F with Timothy Pierson: An excellent class! If you come in knowing Java, you are at an advantage for the first 2 weeks and the first midterm, but after that it doesn't really matter. Professor Pierson's lectures can get dry because he reads directly off his slides but the problem sets are very interesting. This class is quite time consuming but extremely manageable and exam questions are fair as well. There are a ton of TA office hours for help and if you stay on top of everything, this should be a very manageable class.\"",
            "review 46: \"19F with Timothy Pierson: Pierson is a great prof and really nice and approachable too. He's a really interesting guy to talk to if you get a meal with him. The class is hard like most CS classes so you gotta put in the work. 6 practice sets, 9 really easy short assignments, weekly drill section, 2 midterms which are kind of hard especially the second one (study your runtimes), and the final isn't too bad. You learn a lot of data structures and other important stuff like graph traversal. Definitely work with a partner on practice sets as this will save a lot of stress. It is definitely helpful knowing some java going in too.\"",
            "review 47: \"19F with Timothy Pierson: Very hard class. Unless you are willing to put in hours upon hours to complete a pset and then study for several more hours on top of that for exams, you are going to hate this class. Having taken CS1 with Vasantha and enjoying it a lot, I thought this would be an enjoyable next step, but it completely turned me off from CS. You have to really love computer science to enjoy this class.\"",
            "review 48: \"19F with Timothy Pierson: CS10 is a significant step up from CS1, but definitely doable if you can put in a significant amount of time to work on the psets. I can't speak for those who have CS experience before coming to Dart, but after taking CS1 with Vasanta, I found the problem sets in CS10 to be 4x harder rather than the 1.5x or 2x harder I was expecting. Pierson is a very kind person and a good professor, but his lectures are a little sleep-inducing as others have said. I wasn't getting great this term, but I sometimes found it hard to stay awake during class (which I can't say about any other class I have taken in 2 years at Dartmouth). Exams aren't the worst, but you practically have to be able to write code as quickly as you write in English to finish them completely on time. All this being said, the class is certainly doable if you get decent sleep, try to understand Pierson during lecture, and invest a good number of hours into problem sets. I would highly, HIGHLY, recommended using an NRO on this class no matter how smart you think you are, especially for CS majors since it is the last prereq for the major and major classes after prereqs are out-of-bounds for NRO. Getting a solid grade is far from impossible, but having the comfort of the NRO safety net is a huge help when struggling on problem sets or rushing through the exams.\"",
            "review 49: \"18W with Timothy Pierson: This class went insanely fast. Pierson goes through roughly 120 slides per class. It was hard to absorb all the information being thrown at you. I recommend sitting on the sides with your laptop in class and following along on your computer to the slides. Sometimes he goes really slow on the concepts to make sure you understand it, but then he'll speed through the actual code parts. The labs were hard. It took a lot of hours at office hours with TAs for me to figure out the labs. Try to do labs with partners. That definitely helps. Do the practice problems before the exams, but don't fret if you can't figure them out. His exams were usually much easier than the practice problems he gave us. His final really helped boost my grade. If all else fails, remember you can NRO this class.\"",
            "review 50: \"18S with Timothy Pierson: The concepts in the class are not hard, it's just a lot of material being thrown at you so the class is time consuming. Professor Pierson is a smart guy (not to mention cool) and his office hours are really helpful if you have specific questions. For the class, the PPTs are very helpful ~ if you understand them back and front, that's all you need for the exams. You need to taking learning into your own hands for this class. You can't just go to class and listen. You need to know the PPTs like the back of your hand -- I studied for the exams by testing myself on whether I could write the code on the PPTs myself and it turned out to be an effective way of studying. His PPTs cover a lot of information but the tests are based on what he covers in class. If he doesn't focus on something in class, it's not likely to be tested on. There are 6 PSETs for the class, and they each take a lot of time. Each took me 12-20 hours. Start them the day they're released. Know that you have one 48 hour extension! I spent 15+ hours per week for this class, but I felt like it was very rewarding. I've come out of it proficient in Java and well acquainted with many new types of data structures.\"",
            "review 51: \"18S with Timothy Pierson: Professor Pierson is one of most interesting professors I've had during my time at Dartmouth. Some people complain about the pace of the course and conflate its difficulty with Pierson's teaching skill, which is a flawed assumption as best. Be ready to put in work, work with a partner who works just as hard as you (which is hopefully very hard), and you'll do fine. Slack off, expect the lectures to leave you completely understanding the material, and you won't succeed. CS is not about listening, it's about doing. If you can't figure out the concepts on your own, then maybe CS as a course of study isn't for you.\"",
            "review 52: \"18F with Timothy Pierson: Tons of work and overall hard class but still pretty manageable. I actually think the class is easier for you if you took AP CSA than if you took COSC 1 before this class (judging from other people's reactions to the class), because you won't have to struggle with syntax and you'll be familiar with java and it'll make sense to you. Still not super bad if you did take COSC 1 before though, I would think. It's definitely not a layup but I think people exaggerate about how hard it is. I would say, to do well just go to class (never skip, you'll miss so much content), try to understand (like to actually think about it and have it make sense to you, or if not, ask for help in understanding either from the prof or the usually super helpful TAs) and you'll be okay. The midterms are hard and super stressful and everyone gets a pretty bad grade on them but your grade will probably go up a lot with the curve. You really just get the back the grade for the effort that you put into the class, imo. But I'm super glad I took this class, was super interesting and overall super fun.\"",
            "review 53: \"18F with Timothy Pierson: The material of the class is really interesting. However, Pierson is a terrible professor, who has completely plagiarized the class from the last prof. As such, all the last profs' mistakes in assignments are still present. I love this material but almost every assignment is riddled with unclear directions, and english so bad someone from north korea could have written it. TAs are helpful. The class would be infinitely easier if it was written by someone with a coherent understanding of the english language. Also, to do well in this class, familiarize yourself with java beforehand. ESPECIALLY java swing and awt. You won't need to write a lot of gui code / swing code, but I think that understanding these libraries will help you grasp assignments much faster and make your life much easier.\""
        ],
        "Robert Drysdale": [
            "review 1: \"13W with Robert Drysdale: Course: *** Please read! *** Professor: This is pretty long, but please read because I think the information I'm giving is really helpful, and I wish I knew this stuff before I went into the class. The professor is not that great with words. You have to sort of already know the answer beforehand in order to understand what the professor is getting at. Fortunately, though, you can go to office hours/ help hours/ T.A. hours to get extra help if you are unable to follow the lecture. Having the professor teach me individually during office hours was very helpful. During his lecture, I would not understand a concept, and he would just keep going, and since the material is cumulative, I was basically screwed. He just goes too fast during the lecture for me to follow, and he's just not great at explaining the logic of the algorithms or the purpose of each of the data structures. I think it's because he just assumes we know certain things already. That's why I would highly recommend going to his office hours to have him clarify some of the steps he sometimes skims over or just assumes we know. He is very friendly during office hours, and you don't have to worry about being bothersome to him because he is genuinely happy to help you. I'm a pretty shy person, so at first I was really uneasy about going to him for help. However, by the end of the term, I was just so desperate that I had to, and I'm really glad I did because otherwise, I'm sure I would've died on the final. If I could change one thing, it would be to go to office hours more often and not have been so reserved until it was almost too late. I had taken c.s. in high school and gotten a 5 on the AP CS A, so I sort of felt invincible going into the class and was like, \"I dont' need no help,\" but I was absolutely wrong. Getting help early, for the tests and for the labs, is super important. Sorry I made this so long. Good luck! Workload: Sorry this is so long, but please read because I think the information I give is important. The course is fast-paced and time-consuming, which means you should probably not take too many other work-intensive courses alongside this course. Be very wary of your time management. I was overconfident and took some really hard courses alongside this course, and I deeply regret it. Please stay on top of your homework and labs. I feel like everyone, including me, thought they could just be CLUTCHBEAST and do the labs on the second to last day or last day, but DON'T do that. Also, I always study like... one or two days before test because I am the procrastinating kind, but DON'T do that either. It is easy to fall dangerously behind very fast, because concepts are cumulative (to some extent), and it takes time to think things over and finally understand the logic of it. When I eat or walk around campus to go somewhere, I am usually thinking about the comp sci material we just learned because, for me at least, the material isn't something you can just get immediately. It takes time to figure out the logic before it finally clicks. Most people reading this are probably going to be like, \"No I'm so smart. I can do anything. This reviewer is probably just some noob who isn't made for the c.s. major and should probably go do the Econ major,\" but I promise you I am legit (not to be arrogant). I scored really well on the final and did really well on the problem sets, and I still thought the course was super hard and that staying on top of the homework and material is super important. Just don't leave things to the last minute! Good luck!\"",
            "review 2: \"09W with Robert Drysdale: If you're reading this, you've most likely taken CS 5 and are considering the next step. If that's the case, CS 8 won't surprise you- it's very similar in structure to CS 5. Lectures that are pretty dry (code examples don't work well in a lecture format) but the labs are fun and interesting- the Kevin Bacon game for databases, for example, and Tetris for graphics. Haskell is very different from Java. It's going to feel very weird for a while, but you get used to it, so don't worry if it's uncomfortable for several weeks. It was interesting to see how different programming languages can be, how their strengths and weaknesses are different. The course feels very standard. I'm not sure what it is, but there's something exciting about CS 5 that isn't there in CS 8. I've spoken to other students who feel the same way. The labs are definitely fun, though. By the way, beware the Stock Data clustering lab- it fell at the same time as the midterm, and was the most difficult lab of the course in my opinion (since you have two weeks for Tetris.) Also, with grading, you get practically all of the points on the programming assignments (if you finish them and they work), but the tests tend to be difficult, so it isn't necessarily a guaranteed A.\"",
            "review 3: \"09F with Robert Drysdale: This class was a functional programming class. While the labs were (for the most part) really cool (Tetris, Kevin Bacon Game, etc), the actual lectures were invariably boring. you DO need to go to class: he covers tons of stuff in lecture that isn't in the book, but it's not a class i really looked forward going to. If you've got solid programming skills, i'd recommend the class, but if you're not a major/minor, i wouldn't take it for an \"easy third\". I spent many late hours in sudikoff, and so did many of my classmates. In the end, i've got a love-hate relationship with the class. even though i did learn a LOT, it was tough and time-consuming.\"",
            "review 4: \"08W with Robert Drysdale: The classes and topic were decent, but some of the lab assignments were ridiculously hard. They were all doable, but would take 6 or 7 hours per night. However, the prof and the TAs were helpful. Also, you really don't need to buy the book. You can find everything online.\"",
            "review 5: \"08W with Robert Drysdale: The material was definitely interesting and professor Drysdale is a very nice person. However, in the later parts of the course, I found myself dozing off in lecture because professor Drysdale often went over pieces of code in class, which was rather ineffective for me. However, I am really glad to learn about functional languages and I got to enjoy Haskell a great deal. The assignments/exams were definitely fair.\"",
            "review 6: \"08W with Robert Drysdale: The professor knows the material and the TA's are good. But the course hasn't been taught very many times, and things are still getting ironed out.\"",
            "review 7: \"08W with Robert Drysdale: The hardest part about this course is the lab-- the problem sets and short assignment do help you to understand the material but if you are not a natural programmer expect to spend a HUGE amount of time in the labs. The TAs are not always available and many times there were many more students who needed help than there were available TAs. Expect a big time commitment\"",
            "review 8: \"08W with Robert Drysdale: Functional Programming is quite exciting compared to the tedious Java of CS5. The lectures for the course weren't that great. Drysdale knows a lot but he does not communicate it very effectively. However, he puts up his lecture notes on the web, so you can easily teach yourself what you missed after class. The assignments on the other hand are a lot of fun and the way to really learn what was taught in class...\"",
            "review 9: \"08W with Robert Drysdale: The course is really great and interesting. Functional programming is a whole new world (different from OOP stuff like Java). The syntax of the language used in the course (Haskell) is a little frustrating at first, but you come to appreciate it as time goes on. The material is really interesting, but the lectures can be a little dry sometimes. It varies day-to-day. Some are good. Some you'd rather sleep through. The problem sets, though, are a lot of fun. Among other things, you create programs to play Tetris, parse HTML, and play the six degrees of Kevin Bacon game.\"",
            "review 10: \"08W with Robert Drysdale: The lectures during class were - at best - mediocre. Although taught with the best intentions, and by a good prof, the concepts were very difficult to explain through a lecture and the lectures were close to useless. Tangents and explanations of \"bad\" methods of doing things led to confusion. Luckily, the Professor posted typed lecture notes (although not formatted), online - which were helpful to use to study for exams. See the lab section below for information on that... Unfortunately, the heavy weighting of the tests counteract all the work you put into PSs - and the tests are not only very difficult, but also seem to have many trick questions. This course will make you reconsider many times if you really want to be a CS major. Take it only if you need it to become a major - and are sure you want to.\"",
            "review 11: \"08F with Robert Drysdale: This class isn't too bad. I slacked off a bit during the term so I didn't do as well as I'd liked, but all the work was pretty manageable. Haskell is a bit weird to get used to but I liked it once I understood it better. I hate exams in this type of class, but they're pretty much like the ones in CS5 (except there's only one midterm). The major problem I had with this class is just that Drysdale is reeeeally boring, so I almost always fell asleep in class. He posts his lecture notes online though, so teaching yourself the material really isn't that bad.\"",
            "review 12: \"07F with Robert Drysdale: I enjoyed this course a lot. Admittedly, I am something of a CS geek. The programming language this class is taught in is very helpful, I've found, and my experience coding in it has made my code overall much better. Coming from a language like Java or C, Haskell seems initially very odd, but it is incredibly powerful, as we came to realize in the course of this course. Professor Drysdale was very accessible, and while I never took advantage of his office hours, he was very good about responding to questions emailed to him, I found.\"",
            "review 13: \"07F with Robert Drysdale: This is the first term this particular class has been taught, so it was perhaps a little rough around the edges. The old CS-18, before my time, was taught by the now-departed Fromberger and used Scheme. This class is (at least this term) taught by Drysdale and uses Haskell. Professor Drysdale is perfectly competent and knows (and explains) the concepts of functional programming, but it's obvious he hasn't been working in Haskell for years. The problem sets were overall very reasonable, but the third one was considerably more time consuming than the others, and came as something of a shock (it was not intended to be any more difficult). Little rough edges such as these should be ironed out as the course is taught more. I personally found Drysdale's lecture style to be a bit boring, and he would sometimes go through some examples and expansions that seemed unnecessary to me. Nonetheless, the lectures were informative, and I would highly recommend attending them. Skim the textbook to pick up a few minor points and concepts that the lectures don't cover or if you're having difficulty understanding the lecture. In general I didn't consider the text to be phenomenal or essential for most of the course. The problem sets are for the most part very interesting applications (parsing, solving problems such as n-queens). There is a little too much emphasis on graphics for my taste, and the final project involved writing Tetris. The application of functional programming abstractions to these areas is interesting, but I think slightly impractical. Game/graphics development is one area where C/C++ still reigns supreme due to the speed concerns and purely functional languages such as Haskell become a tad ugly when doing I/O. One place where this class really shines is in availability of the professor and TAs. There were three TAs in addition to the professor for a class of about 30, and all were very helpful. Professor Drysdale is very pleasant and always available.\""
        ],
        "Alberto Quattrini Li": [
            "review 1: \"24S with Alberto Quattrini Li: A lot of people have said this in other reviews - if you're doing this than you obviously know what you're getting into. It does suck and it does take a lot of time, but also if you end up liking CS it probably won't suck that much. AQL is 10000% one of the most organized and nicest professors I have ever had and I think if you were to take this class you should take it with him. I will also mention that if you can - sign up to take recitation with a TA that you know. They end up grading everything but your exams, and it's nice to know that person.\"",
            "review 2: \"24S with Alberto Quattrini Li: Definitely take the class with him. His exams are fair and well-structured, reflecting the material covered in class without any surprises. His teaching style is engaging and clear, making complex concepts easy to understand. Beyond his professional skills, he is a true gentleman\u2014always respectful, approachable, and willing to help students succeed. His dedication to his students' learning and well-being sets him apart as an exceptional educator.\"",
            "review 3: \"22S with Alberto Quattrini Li: take it with him. just take it with him. best guy ever. best class. he's so kind. you will LOVE CS after him\"",
            "review 4: \"22S with Alberto Quattrini Li: Prof Li is the most helpful prof I have seen at Dartmouth. This class is pretty busy and difficult with the constant flow of problem sets, exams, and other assignments, but Prof Li was always there to support the students. Whether it is agreeing to meet outside office hours, scheduling extra office hours to answer questions related to the exam, or answering questions on Slack at 11 pm, he was the most devoted and engaged prof I have seen here. He has some struggles with squeezing all the material into a 10-week term, but the reason is that he tries to answer all student questions to the fullest during lectures before proceeding with the next topic. If you are interested in CS after the intro, you will take this class, and I think Prof Li is the best to take it with.\"",
            "review 5: \"22S with Alberto Quattrini Li: Didn't do CS in high school (didn't know how to write programs either) and only had CS1 as my background, so hopefully what I'm sharing can help those in a similar standing. I also didn't NRO because I wanted to give myself some motivation and do well - that said though, having an NRO is definitely a safety net and will help with mental health. Prof: genuinely cares about students, very passionate about CS, and he accommodates our needs (e.g. by offering multiple extensions on HW and Psets towards the later half of the term) and regularly checks in on students' mental well-being. TAKE IT WITH HIM if you take CS10 and want your life to be more positive. Workload: NGL - very tough for someone like me with minimal experience. There were 6 psets each requiring 6 to 12 hours. I didn't get a pset partner (they allow two people to work on a pset) because I want to truly learn everything and every concept. It was tough but rewarding and I didn't regret my decision. TAs: accessible office hours and TAs are very helpful (THANK YOU!!) .Exam/Grading: 2 midterm + 1 final so I think it's pretty reasonable, we also had enough time to complete the questions. Overall: I learnt so much in this class, and based on what I've mentioned, I don't think I was easy on myself either. People who have taken AP CSA (and possibly scored well) will have less of a difficult time in this class. But it's ok - if you put in enough effort, you'll learn a lot and it will be fine!! Good luck on CS10 and may the force be with you!\"",
            "review 6: \"22F with Alberto Quattrini Li: Alberto is super sweet and kind, but you might find it a little hard to understand his accent sometimes. Start the labs early, and go to TA office hours. Don't think you're superman and spend 20 hours to fix an issue only to find out you've been doing it wrong from the start. This class is time consuming and difficult so don't take with other hard classes like math 11.\"",
            "review 7: \"22F with Alberto Quattrini Li: Coming into this class with a significant amount of CS experience, I found the content of this class to not be too difficult. However, it was still a lot of work. If someone didn't have a lot of CS experience, I could definitely see this class being very difficult. Midterms and final took the entire day to complete. Problem sets also took a while, but weren't too bad if I didn't procrastinate. Also the course picks up very quickly after the second midterm. Li was a good professor, very nice and flexible, but sometimes hard to understand. Overall a pretty decent course.\"",
            "review 8: \"20X with Alberto Quattrini Li: Alberto is the best. He's new but he's passionate and cares so deeply about his students. He explains the concepts really well and answers basically every question clearly. I think he makes a great effort to interact with students by asking questions in class. Also, love his patience. Take CS 10 with him!!!!\"",
            "review 9: \"20S with Alberto Quattrini Li: The man is a gem. His Italian accent and positive energy are infectious. Coming from prof Cormen to Prof Li made a huge difference for me: prof Li made the learning about the content, while Cormen killed the subject if you weren't into his personality. That said, Prof Li is still in the learning phases of how to schedule and manage a 10 week term. CS 10 is notoriously dense with new information, and it was tough for prof Li to fully cover all the info in as much depth as it seems he'd like. The term was online, so we ended up having probably 8 assignments extended. The first couple were bc Prof Li allowed people to get used to remote education. The last 6 or so were because the class was behind schedule. Some individual learning is always necessary for CS, but I think there was more than I expected in this class. Now with all the negatives out of the way, I have to say the course helps you undergo one of the most spectacular computer science transformations I've seen. I started with a shaky understanding of CS 1, and now I feel confident enough to look for tech internships. Prof Li's generosity and positive attitude shaped revived my appreciation for CS. The the teaching wasn't exceptional, but I have to say CS 10 was more than worth the effort. TLDR: The material was invaluable + Prof Li was just a good human being\"",
            "review 10: \"20S with Alberto Quattrini Li: Alberto is a passionate and knowledgeable prof. Don't be fooled, this class is hard and requires you to get ahead and start labs as soon as possible. Do not wait for that one little topic to get clarified in class later in the week; the curriculum will just move on and its up to you to get help to do assignments (whether from TAs, prof office hours, or online) and go over notes - sometimes lectures cover some but not all details about a topic. Be willing to go over class notes and fill them in with any missing code and information a few times a week. Successful CS10 students need a strong work ethic and capacity to self identify areas of confusion with the material, but you can do it! Alberto will help you along the way but you gotta get on that grind to help yourself when things get hard. You can do it - start assignments early and get help.\"",
            "review 11: \"20S with Alberto Quattrini Li: I loved CS10 with Prof Li! I took ENGS20 instead of CS1 as the prerequisite, so I was a little worried but I actually think it may have been an advantage. The topics in CS10 are much more advanced than CS1 or ENGS20 and it required A LOT of individual work, but by the end I felt like I knew much more about computer science beyond the basics of coding. If you put in the work, this class is extremely interesting and rewarding. We had 9 short assignments (these took about 1 hour each) and 6 problem sets (these took between 8 and 15 hours each). You have the option of doing problem sets with a partner, which I would absolutely recommend. Prof Li always checked in with his students and did live polls on zoom regularly to make sure we were understanding the explanation. He even took the time to reach out individually to students who were struggling on the exam. Overall, an amazing professor that is incredibly smart and very patient. My only complaint is that TA office hours over zoom were often overbooked. There are TA hours almost constantly, but only one TA on at a time, so just before the problem sets are due there would be lots of people logged on to zoom trying to get help. Since the TAs can only answer one person at a time, they didn't get to many people.\"",
            "review 12: \"20S with Alberto Quattrini Li: This class is fundamentally very different from COSC 1 - it will likely be hard regardless of the professor. That being said, if you do take it, you won't go wrong taking it with Quattrini Li! He clearly cares about all of his students, and he is very responsive to the students' needs and situations. The problem sets are very difficult, but they are the same with every professor so don't let that influence your choice of professor.\""
        ],
        "Christopher Bailey-kellogg": [
            "review 1: \"21W with Christopher Bailey-kellogg: CBK is a great prof and really cares about helping students. He is very patient when students ask questions and makes sure that everyone understands before moving on. The workload is decent but manageable. Problem sets take up the most time by far but if you put the time in they are fine. I really enjoyed taking this class with him!\"",
            "review 2: \"21W with Christopher Bailey-kellogg: A ton of work, but I thought the class content was interesting and the psets were all super cool once we figured them out. CBK's lectures were pretty good but could be really wordy and confusing at times which made it super easy to stop paying attention or tbh fall asleep over zoom. But even if you didn't totally get the lecture, there were still course notes and powerpoints posted every day which help you figure out things afterwards if needed. I thought the hardest part of the class was the psets, which took 10-15 hrs each and I think makes most students suffer at times. CBK is obviously super passionate about what he's teaching, always stays after class for questions and holds optional office hours each week which were helpful. TA office hours were also super helpful. Overall I thought it was a solid class and pretty good prof.\"",
            "review 3: \"21W with Christopher Bailey-kellogg: Definitely a step up from CS 1 but not too bad. As long as you do all the work and practice exams before the midterms, you will be fine. Definitely use the TA, don't want to be stuck on a bug for 2 hours when you can just ask the TA and figure it out in like 5 minutes.\"",
            "review 4: \"21S with Christopher Bailey-kellogg: cbk is an amazing prof!!! He is super kind and approachable and is totally willing to explain concepts to anyone. questions are super easy to ask, overall amazing lecturer-great prof! TAs in this class vary, but amazing availability of office hours. Overall heavy workload, but not unmanageable. worth it!\"",
            "review 5: \"17F with Christopher Bailey-kellogg: CS10 is a huge step up from CS1. I had a relatively easy time in cs1, did well on the exams, and I thought cs10 couldn't be that much more difficult. I was mistaken. If you have time before the course, I would definitely recommend starting to learn Java syntax. It's very different from Python and the first few labs took me an unnecessarily long time just because I was so familiar with the syntax. Beyond that, the first and final exams are really difficult. Even though we were allowed to work with partners for the labs, you should do labs yourself to be better prepared for the exams. I think this class will tell you how well-equipped you are in continuing in CS, and if you struggle a decent bit, then I would recommend changing your major.\""
        ],
        "Devin Balkcom": [
            "review 1: \"23S with Devin Balkcom: This term, Prof. Balkcom changed the entire course structure of a normal CS10 class. All short assignments and problem sets were Pass/Fail. While this did take a huge component of the stress out when it came to debugging code and not pulling all-nighters to complete mere perfect PSets, it also left the vast majority of our grade dependent on exams, which were in total worth 65% of our grade. This structure made exams all the more stressful, and to make matters worse, section leaders and TAs did not comment on how we were doing on our PSets, which made learning from our mistakes rather hard. Speaking in terms of Prof. Balkcom, he had his moments. It is clear that he is exceptionally knowledgable and knows what he is doing, he also teaches in a way I have never experienced before. It is more lecture and PowerPoint based, as opposed to how Prof. Vasanta taught with code. This is a huge step up from CS1. I had a great time learning in this class, but it is not easy and it is not easier with Pass/Fail problem sets. Study hard for the exams, and pretty much understand everything because everything will be asked. After reading the reviews, I am glad to have taken this class with Balkcom, but would probably be happier with Quattrini Li.\"",
            "review 2: \"23S with Devin Balkcom: Balkcom is an interesting guy. He made 35% of our grade pass fail and put the other 65% towards our 2 midterms and the final. He also cut out the hardest unit, Markov Models. Balkcom comes across as an incredibly intelligent person, but there are some problems with his lecturing. The first issue is that his teaching style was so different from what everyone in CS10 was used to from CS1. Balkcom made everything very conceptual and theory-heavy, and it didn't help that he didn't use the slides for most of the lectures and managed class time badly. For the most part though, you won't have trouble understanding the concepts if you just review the slides on your own after class (30-45 minutes of extra work). I actually think Balkcom's way of teaching is better, it's just harder for us. The second issue is that, for almost every lecture until the first midterm, he seemed like he put so little effort into preparing for the lectures. And then half the class failed the midterm so he realized he fucked up. He's also a nice guy and basically gives you answers/hints during the tests if you phrase your questions right.\"",
            "review 3: \"23S with Devin Balkcom: People had mixed feelings about Balkcom, but personally I loved how he approached the class. CS10 is a little notorious for being a weeding-out class, but Balkcom didn't really seem to care about making it difficult. The changes he made made it SO much easier, at least for me. I audited CS10 in the winter and the difference in difficulty between Pierson and Balkcom is not to be understated. All problem sets were pass/fail, which saved me so much time because I didn't have to go back and change every little small detail to meet arbitrary \"style\" guidelines. The exams were MUCH, MUCH easier too. I got copies of the old exams from last year and I noticed significantly less questions and less nit-picky conceptual questions on Balkcom's test. People who complained about Balkcom mostly just didn't realize what they were being spared - people who have seen Pierson's class would know. That said, there could be a few downsides. If you're someone who learns by trial and error, the pass/fail problem sets means that TAs really wont bother to point out the flaws in your code. Balkcom increased the weighting of tests too, so if you're not a good tester that could work against you. Disclaimer: I took AP CS A in high school and would say I came in with a lot of background knowledge. But still, I HIGHLY RECOMMEND you take this with Balkcom if at all possible. Balkcom + AP CS = basically a layup imo. Plus balkcom is a pretty funny and relaxed prof\"",
            "review 4: \"23S with Devin Balkcom: As talked about before there was a revised course structure which appeared to make it easier, however, I was not a massive fan of Balkcom's lecturing which made the class somewhat harder than usual. He often spent the majority of the class talking about theory and abstract concepts without using slides and then rushed through the slides in the remaining time. Not knowing Java really hit hard the first midterm because I (along with a lot of the class) was lost on some core Java concepts/practices that were not intuitively demonstrated. PSETS were very time-consuming and often required the full PSET to be completed in order for a passing grade (most of the time anything short of full completion was not a passing grade which kind of defeated the purpose of the revised structure). The second midterm and final were noticeably easier once got more familiar with Java and once I understood how Balkcom created his exam questions (and I suspect he wanted to make them easier because of the first midterm median). Overall, it's no secret that this class is structurally different compared to CS1. Be prepared to study a lot more and to sink in huge portions of your week for exam review and PSETs (especially the last one which screwed over my finals studying time in week 10).\""
        ],
        "Prasad Jayanti": [
            "review 1: \"15F with Prasad Jayanti: If you can take this class with Professor Jayanti, do it. He is an absolute joy. He makes lectures engaging and easy to follow. He gives good assignments and provides plenty of help. The exams are not easy, but they are fair - they cover questions similar to the ones covered in class or assignments.\"",
            "review 2: \"12S with Prasad Jayanti: Course: Fast-paced and really interesting. The concepts you learn in class and the problem sets make you think. Professor: Very enthusiastic, eager to answer questions, and explained concepts clearly. Workload: Lots of work. Weekly problem sets and short assignments (which aren't that short sometimes). It's necessary to really get prepared for other CS courses at Dartmouth, though, so its nothing to complain about. There are a lot of help hours for assignments.\""
        ],
        "Christopher Bailey-Kellogg": [],
        "David Kotz": [],
        "Michael Casey": []
    },
    "COSC002": {
        "Christopher Bailey-Kellogg": [
            "review 1: \"08W with Christopher Bailey-Kellogg: DO NOT TAKE THIS CLASS. There are much easier ways to get the TLA. The first week of class Professor Bailey-Kellogg makes the class seem like it will be easy and fun. IT IS NOT. Do not be fooled- it gets insanely hard and he cannot lecture to save his life. He first introduces examples, and then goes through each one offering an explanation. Result? No one understands concepts- merely these few isolated examples. When it comes time to complete the homeworks and projects more time is spent copying his work or begging the TAs for answers. He seems nice in class and over blitz, but in person he is awkward, unhelpful, and downright uncaring. I wasted an entire course and did not even learn anything. And the quizzes will destroy you. (Unless you are one of the lucky few awkward front-row kids who do nothing but study for this class.) The projects were bad enough to complete, but the quizzes are what end up slaughtering your grade. If you are into computer science and spending long nights withering away in the CS lab- take this class. If you are a normal person who values sanity and happiness, turn back now!!!!!\"",
            "review 2: \"08W with Christopher Bailey-Kellogg: This class while excellent for fulfilling a TLA distrib, is a bit of a gamble. I ended up doing okay in the class but had several sleepless nights in the lab and still did not get the grade I wanted. There will be CS majors in the class and other people for whom this is much easier and takes less time, so even though the class says no CS experience required you are at a disadvantage without it. Also, since the language/program is obscure you can't really transfer the knowledge if you want to continue in CS. So, it could be worth it for the distrib (there really were no labs, just TA help time) but be prepared to spend more time than you think and get a bad grade.\"",
            "review 3: \"08W with Christopher Bailey-Kellogg: This course moved really quickly. About half the class was stellar and probably will write raving reviews about the professor, and the other half had no idea what the hell was going on. The professor focuses heavily on examples without really spending a lot of time going over core concepts. There is a lot of math-related thinking involved. Class is graded on two projects (that are very broadly defined, making it hard to determine what's worth an \"A\"), a bunch of homework assignments that use a straight-forward rubric, and two quizzes that are fair but challenging. Check out http://cs.dartmouth.edu/~cbk/2 for the entire course breakdown, including the syllabus and lecture notes. I don't think this class deserves the description \"CS for non-majors.\" Anyone who was good at this probably would have succeeded in CS 5.\"",
            "review 4: \"08W with Christopher Bailey-Kellogg: I took this course thinking that it would be a fun beginner's course to help ease non-majors into programming. Boy, was I wrong. This is an incredibly fast-paced course that was very difficult to follow. The root of the problem, I feel, is that Prof. Bailey-Kellogg, while a very nice man, cannot lecture to beginners for the life of him. He would sort of explain the general idea, then show us example after example after example without ever really explaining how the code worked. If you could follow that jump and deduce how to use the code properly, great for you; if you couldn't (as the majority of the class couldn't) then you just had no clue what was going on. The entire course continued this way, and I think that the majority of us had absolutely no idea what was going on by the end of the class. His notes were a bit more helpful, but they didn't really explain how the coding worked, either. All in all, we were left to our own devices there. The tests were absolutely awful. The homework assignments were fairly open-ended, the projects extremely so (\"Do something cool. Go.\"), but the tests asked for incredibly specific programming (\"write a code that would result in this, with these ten specific details\"). As a result, if you weren't one of the few people who actually understood what was going on, the tests were pretty much impossible. (And he calls them 'quizzes,' but they're a mid-term and a final. Really.) The first test was bearable, but the second went so badly for the entire class that Prof. B-K scaled it 18 points. I think my biggest problem with this course was that there was absolutely no correlation between comprehension and the grades we got. I say this having gotten an A and not understanding anything after the first week of class. I heard more than one person say they got 60% on one assignment and 100% on the next with the same level of comprehension. The general consensus was that CS5 would have been easier. This course was pretty miserable at points. If you don't understand CS, then don't take this course - it's not worth it.\"",
            "review 5: \"08W with Christopher Bailey-Kellogg: I took this class having never taken computer science before, and it ended up being a really enjoyable way of getting a TLA requirement (the 'labs' are just assignments that you can do on your own laptop). The class moves really fast, and most of the learning for the course can be done by just fooling around with the programs rather than actually paying attention in class. The weekly homework assignments are helpful, but the projects were so open-ended that it was hard to know what was actually expected. The quizzes are fair, but they require a lot more knowledge of programming than the assignments, which can be mostly cut-and-paste, trial-and-error jobs. Honestly though, they were fairly basic and not as big of a deal as a lot of people in the class made them seem. I absolutely recommend this class for the distrib requirement, mostly what you do is fool around with a computer program and make things that look cool.\""
        ],
        "Michael Casey": [
            "review 1: \"23S with Michael Casey: Michael Casey is one of the kindest, most caring profs I have had. This class on its own is definitely not a layup if you have no background or natural ability in computer science, but if you pay attention in lectures, do the daily assignments, and try your hardest on the homeworks you will definitely get a good grade. Prof Casey is so good about scheduling office hours, both for the class in general and one-on-one if you need some extra help, and he truly cares about all of his students. He is the kind of prof that you want to take to pine at the end of the term to thank for his teaching in the course. Absolutely would recommend taking this class if you are in need of a TAS or TLA distrib, just do the work and you will do well.\"",
            "review 2: \"23F with Michael Casey: This class wasn't too bad! It was really interesting the first couple of weeks and then it got a bit boring and complicated once we got into objects and particle systems. I liked how open-ended this class was though in terms of creativity. We had 11 short assignments (worth 25% of our grade) that were pretty easy to get a 100 on as if you had any questions you could go to office hours for clarification. We had 4 homeworks worth 50% of our grade that were also pretty easy to get an A/A- on as long as you followed the rubric. The final project was open-ended which was really cool because you could work on something you were interested/passionate about. Professor Casey is really knowledgeable but a bit intimidating-- he's pretty responsive over email, has regular office hours, and appreciates if you participate/have questions in class. At times, though, he is vague and didn't really have that many samples/examples of what he was looking for, which didn't really detract from the class but was a bit annoying. Overall, though, I thought this was a really cool class and I learned a lot as a non-STEM person who wanted to learn how to code but in a less-pressurized environment (I actually dropped CS 1 to take this class and I'm glad I did because I feel I got more out of it). While this class is NOT A LAYUP and you get out what you put in, I would highly recommend taking this class if you're looking for a TLA or simply want to learn about CS in a more creative way.\"",
            "review 3: \"19F with Michael Casey: I would definitely recommend taking this course if you need a TLA. I took it because a friend of mine highly recommended the course and I do not regret it. You learn a lot about Processing in a short period of time and although you will probably never use it again, it is an interesting and creative way to think. Professor Casey is great and provides a website with all the class notes (here https://cs.dartmouth.edu/~mcasey/cs2/index.php). A lot of people see this and do not show up to class as attendance isn't mandatory, but it is definitely better to show up as Casey notices and definitely helps the people who show up during office hours more. So show up and go to office hours and it is pretty easy to get an A. You should start the assignments earlier than you think and the course is the kind of layup that you have to work for (you can get an A but you have to actually put time into the class if you haven't coded before). Grades are based on 12 short assignments, 4 homeworks, and a final project. A word of advice: do not do a \"pong\" project for any of the four creative homework or the final project, Casey hates them and will publicly roast you if you propose it.\"",
            "review 4: \"18F with Michael Casey: This is one of the best classes I have ever had the pleasure of taking at Dartmouth. I took it because I needed a TLA, now I'm considering finishing a digital arts minor. Casey is brilliant. He has expertise in both music and technology and the intersection between the two in ways that blew my mind. I thought he was a random guy from the music department teaching a CS class; turns out he's been writing code since 1984, went to MIT, and holds something like six patents. I heard a rumor that he was somehow involved in Spotify's music-recommending algorithm, which I can't confirm but honestly wouldn't be at all surprised if it were true. Anyway, the course itself was really fun. I had some programming experience before but still felt challenged enough to feel engaged in the course. You get as much out of the class as you put in, and if you meet all of the outlined expectations for each assignment you'll get an A. If you half-ass your work, you won't get an A. There are definitely some legitimately tricky classes despite what the A median might have you believe, but it's manageable. Creativity is rewarded. The class uses x-hour, but you get lab credit without technically having a lab. Casey and his TA were always available for office hours, which were super helpful. You learn to code in processing, which is essentially a watered-down version of Java. You probably won't be a proficient coder by the end of the course, but it will give you a solid enough foundation that you could definitely continue to build on if you wanted to. I'd take this class a second time if I could. Best way I could've gotten my lab distrib, that's for sure.\""
        ],
        "James Mahoney": []
    },
    "COSC001": {
        "Thomas Cormen": [
            "review 1: \"19F with Thomas Cormen: Cormen is a great Prof. I'm glad I got to take CS 1 the last time he taught it. Short assignments can sometimes be a lot, but if you genuinely like coding it shouldn't seem like work at all. Labs were pretty interesting too. I'd suggest getting a tutor as soon as possible, because office hours sometimes gets pretty crammed. Ask for materials from past classes and use them to practice, especially coding on paper.\"",
            "review 2: \"19F with Thomas Cormen: I took the class this quarter because it was Cormen's last time teaching and I really wanted to take CS1 with him - he's an algorithms legend, and you can tell how smart of a guy he is. The class itself was really interesting and I definitely learned a lot. However, Cormen's grading is unecessarily harsh - I ended with a B in the class (after a LOT of hard work), and if his grading hadn't been so severe, I probably would have ended with a B+ or even an A-. Concept-wise, the class is really hard. Cormen's online lectures helped, but by the end of the course I couldn't wrap my head around anything. Wish I had NROd it.\"",
            "review 3: \"18F with Thomas Cormen: Probably the worst class I have ever taken and it's all because of the prof: 1) He has a bullshit grading rubric, which basically makes all the homework count for basically nothing 2) His exams are unnecessarily wordy, which makes them unnecessarily difficult The material is really interesting, just take it with ANY other prof and you will have a great time.\"",
            "review 4: \"18F with Thomas Cormen: Huge workload and extremely hard. I think you really need to have a background in CS or some natural god given ability to thrive in this class Do not take this course with other hard classes. Cormen has tough grading rubric as well. Overall, super rewarding and interesting course, but do not expect an easy time.\"",
            "review 5: \"18F with Thomas Cormen: He's a good professor but it's a 190 student class, and there's virtually no interaction between the prof and the students except for the questions. The class period tends to get very boring very fast. It's a nice if you're trying to experience new fields in your freshman year, but I would not recommend taking it for a distributive. The workload is heavy. I agree that you should have a natural talent or CS background to achieve high grades in this course.\"",
            "review 6: \"18F with Thomas Cormen: Hard AF! Prof Cormen is good but very demanding class especially if you have not taken any CS before. Do not take with 2 other tough classes - many withdrew.\"",
            "review 7: \"18F with Thomas Cormen: This course is difficult if you have no programming experience (which I didn't). The two big things that are graded are the exams and the labs. You can get a perfect grade (or close to it) on the labs by just going to office hours until you get it to work. The exams are what can kill your grade. Cormen is a good professor, but he definitely has his quirks.\"",
            "review 8: \"18F with Thomas Cormen: The GOAT. The GOAT. The GOAT. The GOAT. The GOAT. The GOAT. The GOAT. The GOAT. The GOAT. The GOAT. The GOAT.\"",
            "review 9: \"18F with Thomas Cormen: Came into CS1 with absolutely no prior experience. If you are interested in CS and find logical/problem-solving puzzles as satisfying as I do, you will be able to do well if you just put in a few hours of extra studying a week (usually just 1-2 for me). Sometimes I felt pretty behind compared to other students with lots of prior experience (especially after the first midterm), but I can definitely say that if you read the lectures Cormen posts on the website, go to section more often then not, and are reasonably intellectually competent, you can easily pull out a B+/A- in this class.\"",
            "review 10: \"18F with Thomas Cormen: Half of the class had prior coding experience. During first midterm half of the room completed it within an hour, while another half was there for 3 hours. I'm afraid in order to get something close to B- you have to learn Python on your own PRIOR to enrolling into this course. I expected it to be intro course, but ended up dropping it after week 3. First 2 weeks were intro and very deceiving. Grading system is strange. Your lab assignments and homework can change your grade only to plus or minus while grade by itself is based on the 3 exams. To get A you need 98% on exams and above 90% on labs I believe. Prof Cormen is funny guy, but tough. Unless you want to major in CS or have Python knowledge AVOID.\"",
            "review 11: \"18F with Thomas Cormen: Definitely not a class for the faint of heart. You will get stuck debugging for hours. You will find your eyelids drooping as Cormen regales you with the amazing story of how RSA encryption was thought of by a drunk guy. And the tests will make you think that you're taking literature instead of CS (SO MUCH READING). But in the end, its probably worth it, if you're actually interested in CS. Definitely rougher if you've had no CS experience at all as you go from printing out your name in week 1 to encrypting/decrypting files in week 9. Also a bit of a weeder course (at least 20% of the original class dropped out). In the end though, it is really what you make of it. Cormen gives many interesting/frustrating (depending on your viewpoint) extra credit opportunities on the labs that allow you to explore a little beyond class material. If you're just trying to get by though, you could probably learn all the material by just reading the online notes and textbook (project python) as his lectures are essentially 90% that, along with some random, completely irrelevant stories that he just likes to throw in. Do go early to lab section hours if you get stuck debugging as this will save you SO MUCH time and the line usually starts early. And finally, don't forget the three things a constructor does.... Also, laughing at all these salty dropouts who wrote shit reviews abt dis course XD\"",
            "review 12: \"13F with Thomas Cormen: I took this course with Prof. Cormen my freshman fall (and was a section leader with Cormen and Farid other times) and I can't recommend it more highly. It is an amazing class for anyone even marginally interested in CS or math or just learning how to think differently. The workload is manageable if you start early and go in for help (the section leaders are always available to help you!)\"",
            "review 13: \"13F with Thomas Cormen: Course: Great course, definitely take it even if you dont have interest in majoring in anything that requires cosc. develops an appreciation for something that is all around us Professor: Cormen is incredibly smart and has a lot of experience. He is also very helpful and his course is very well structured. Workload: There's a good amount of work in CS 1 but nothing too bad, definitely manageable if you're not taking two killer courses with it.\"",
            "review 14: \"12W with Thomas Cormen: Course: Very interesting, but very fast paced. It's hard to keep up a lot of the time, and the material doesn't stop for you. If you don't have a background in CS, get ready for a ride. Professor: Cormen is the smartest dick you will ever meet here. He's incredibly arrogant, but still deserves to be so. Don't ever argue for points though, you won't get anything out of him. In fact, he prides himself in taking more points than he gives if you request a regrade. Stay on his good side though and you'll find yourself with a lot of research opportunities. Workload: SO MUCH FUCKING WORK. I've taken some tough classes here and this beats them all in terms of workload. The labs take 10-12 hours to do, and there are frequent short assignments. Plus, the exams are actually pretty hard.\"",
            "review 15: \"09F with Thomas Cormen: I had never done any computer science before so i was apprehensive but i really likes this class. We learned how to do a lot of cool stuff and some interesting ideas about computer science, and, considering that i had started with no knowledge in the subject whatsoever, made the class very satisfying. Some of the homework is kind of busy work but most tests your skills very well. there is a quiz before almost every test and i did really badly on them all, but they showed me what i needed to work on so i could perform well on the tests. you definitely don't need the back and you don't even need to go to class, all the notes are perfectly documented online. it helps to go to the lectures though, cormen explains things really well. take this class!\"",
            "review 16: \"09F with Thomas Cormen: This class is tough. There really is no time to slack off or fall behind. This course is a lot of work, and takes up a lot of time, especially if you're not really a comp sci person. That being said, Prof Cormen is a good lecturer, and really wants to help each individual student. I would recommend this course, but with caution. Don't take it with other hard classes.\"",
            "review 17: \"09F with Thomas Cormen: I took this class because it looked interesting and I wanted the distrib. The class was really great--it was interesting, Cormen is amazing, and it was definitely geared towards people with little to no programming experience. The only annoying thing was that there were people in the class who had tons of programming exp and just didn't know java, which made the curve a little bit annoying. But it was definitely a great experience. One thing to note is that it was very time intensive: for the labs, I found myself spending about 3 hours every Sunday/Monday/Tuesday getting help from the staff.\"",
            "review 18: \"09F with Thomas Cormen: General: An excellent introduction to Computer Science. The class was somewhat intense, but very, very interesting. Go to class, pay attention in lectures, and stay on top of the work. Great prof. Lecture notes for this class are EXCELLENT. Cormen has all of his lectures posted online in note form; these are almost word for word recounts of lecture, including jokes. Take this class if you are even remotely interested in Computer Science, I can say I enjoyed every bit of it (you may find that it gets addicting after awhile).\"",
            "review 19: \"09F with Thomas Cormen: Cormen is inconsiderate about how much work he gives. In the span of two weeks this term we had a lab, a quiz, and a midterm, which are all totally consuming. Also, there is NO TIME to get behind. If you take this course, learn EVERYTHING from the beginning. Otherwise you'll be in a lot of trouble and totally miserable. Otherwise, he's a pretty good lecturer although there is no real effective way to take notes. You need to be able to write out code/drawings with pencil but he goes to fast to handwrite everything. Luckily he posts the notes online, so even if you miss things, you can look back. And you will miss things. Overall, one of the hardest classes I've taken. If you're not a computer person now, you will be. Or you'll have to drop the class.\"",
            "review 20: \"09F with Thomas Cormen: This was my first introduction to Computer Science and Cormen did a great job crafting this class for people without any prior exposure to computer science. Great prof. I'd definitely recommend.\"",
            "review 21: \"07F with Thomas Cormen: Professor Cormen really made this class great. He was an interesting lecturer and also posted nicely formated notes on the web before every class so you could review them or not go to lecture if needed.\"",
            "review 22: \"07F with Thomas Cormen: Definitely a good deal of work, but the material's interesting, Cormen's a good professor, and coding can be addicting. If you're unsure about the courseload, throw an NRO on it. Of course, that doesn't mean you can get away not doing work - especially given that the only way to learn programming is to get dirty coding Java.\"",
            "review 23: \"07F with Thomas Cormen: don't buy the book or do readings - just go to all the lectures. Practical, interesting, but a LOT of work - be prepared to live in Sudikoff. Attend recitation - it helps with the labs. Great teacher lectures well & is very responsive & helpful (even if you blitz him at 1 AM on the weekend about the assignments or labs. Too bad he'll be on sabbatical for the next 2 years. Online notes and instructions are very thorough and easy to understand. You don't need previous programming exp or knowledge of comp sci, although it might help\"",
            "review 24: \"07F with Thomas Cormen: the course was being taught for the first time so most of the assignments were really obscure and it was often difficult to figure out what he wanted us to do. I learned the most during the TA help sessions.\"",
            "review 25: \"07F with Thomas Cormen: Prof. Cormen loves teaching CS 5, and he's good at it. The only problem is that you need to know how to take the class. First, do NOT buy the textbook. It's a waste of money and you really do not need it. He has every lecture written out for you on the internet, WORD FOR WORD, including the jokes he makes. Print all the lectures out because it's all you will need. Do the extra credit, because my 88.88% final grade got me a B and he would have bumped it if I did extra credit. Watch out if you are not a computer science person, because lots of freshman come into the classing knowing a lot and do very well to raise the medians. Use your TA's, they help you tremendously. Good class, boring lectures, a little fast paced, a lot of work, but you learn how to get it done.\"",
            "review 26: \"07F with Thomas Cormen: This was by far one of the best classes I've had at Dartmouth. Cormen was amazing. I def recommend taking the class with him but i head he was taking his sabbatical next year so he won't teach this class for the next year. The class is a lot of work but it is very fun. You shouldn't put things off until the last minute because that will screw you over. Go to the lab if you need help because the TAs were very helpful. His quizzes were a little tricky on purpose but if you know the info, you will make a good grade in the class. Also, there is extra credit in the class so you can either get bumped up if you are on the edge or get a citation.\"",
            "review 27: \"07F with Thomas Cormen: Lots of students in this class-- all sorts of experience/abilities. If you can think logically then you will do well and understand most things. EXTREMELY detailed notes are posted online.\"",
            "review 28: \"07F with Thomas Cormen: This course is pretty good and manageable, just don't fall behind. It's pretty reasonable as long as it's your 1st/2nd priority as a course. If you're taking other math/science + other demanding courses it's probably not a good combo. If you're looking to learn a bit about programming, it's useful. Cormen's a good prof, especially in office hours which really can help. The undergrad TA's are also good, they helped immensely with the short assignments and labs. Also, try to take advantage of the grad TA office hours, they can come in handy. The book is useful if you have the time to read it, otherwise Cormen's notes will suffice. It is a beast of a challenge though, only take it if you have the time.\"",
            "review 29: \"07F with Thomas Cormen: Lots and lots of work.....lab assignments will kill you if you don't start them early enough....but it's a good class and you learn a TON about programming... I hadn't taken any CS classes before and knew NOTHING about programming and now I feel a lot more comfortable and the assignments that looked challenging at first now seem really easy.\"",
            "review 30: \"07F with Thomas Cormen: This class was amazing! I really enjoyed the material that was covered in this class. The only bad part of the course was when Professor Cormen had two guest lecturers who were grad students that he was testing out speak. They weren't very good. Other than that, everything about this course was remarkable. Many people found this course to be challenging, but if you enjoy the material and subject matter like I did, you will have no trouble with it. This was actually one of my easiest classes this term.\"",
            "review 31: \"07F with Thomas Cormen: So I came into this class with a bad attitude because I wasn't supposed to take it -- I'm an ENGS major and had been planning on taking ENGS 20 as my computer prereq, but it didn't fit in my schedule, so I had to take CS 5 instead. From the beginning, I kept thinking \"Oh, this class will be so useless... I'm not learning anything engineering-related.\" However, this bad attitude started to fade away as the term went on. I started to actually enjoy programming by the end of it, especially since the lab assignments [although quite hard and reallyyyy time-consuming] were kind of fun. It was awesome to learn how to make the computer do what you want. Professor Cormen is an excellent professor, making what is inherently not the most exciting topic quite entertaining at times. He's an extremely fair prof and is ALWAYS, ALWAYS, ALWAYS available for help. Definitely take advantage of that! it's not too often that profs reply to blitzes at 11pm on Saturdays! And the homework assignments REALLY helped me understand the material, except my one complaint is that they were far too time-consuming. I spent so much of my life on CS this term -- way more than I would have liked. So be prepared to learn a lot, and perhaps to even learn to like programming, but to also put tons of work into this class. I'd say it's worth it.\"",
            "review 32: \"07F with Thomas Cormen: Cormen was a great professor, and the class was extremely well done. I do think that the class somewhat favored people who had the time to do extra credit though (I was really busy this term, so it screwed me over on extra credit). There are kids in this class where this is all that they do, so it can be competitive, but the material is not hard at all.\"",
            "review 33: \"07F with Thomas Cormen: Cormen's a really talented prof - it's obvious he has loads of experience in the field, but he hasn't lost his touch at teaching - he's personable and has no problem engaging with students inside or outside class. I didn't want to be one of those that puts a 5 in every box but I couldn't resist. Take a class with him if you can. I had fun just with the course material as well, and I learned a lot. Theres always some useful yet cool element to the regular short assignments that makes them more enjoyable than any other kind of homework, and they're the best way to drive the material into your brain. The only drawback was restriction to the Java language - maybe take ENGS 20 if you want something more physically \"practical\" than random but awesome (cause you made it yourself) web applets.\"",
            "review 34: \"07F with Thomas Cormen: This was by far my favorite class this term! Professor Cormen is an amazing professor and he makes the course content so interesting! He is very sensitive to student concerns and makes an effort to get to know everyone in the class. You learn Java in this class and there is a lot of focus on good form and coding practice. I think this course really changes the way you think and if you can, definitely take this class! You will have 3 quizzes and 3 exams during the year, so the course is broken up (there isn't too much pressure for each quiz/exam). There are around 16 short assignments and 5 labs. The course is definitely fast-paced and pretty demanding, but if you try, you will definitely enjoy it!\"",
            "review 35: \"07F with Thomas Cormen: Computer Science 5 was by far the best class that I took this term. Cormen was a great lecturer and conveyed the material very well. The material itself was useful, covering the basics of computer science from the ground up. The labs were hard, but fun to do and very rewarding. Highly recommend this class for anyone interested in computer science or analytical thinking.\"",
            "review 36: \"07F with Thomas Cormen: You will be worked in this class and worked hard. Do not take this course as a distrib killer; you should only take it if you have some interest in computer science. Make sure you use all of the resources. Prof. Cormen is an amazing resource who makes himself really available. DO NOT GET BEHIND IN THIS COURSE! That is the key to your success.\"",
            "review 37: \"07F with Thomas Cormen: Coming into this course with absolutely no background in Computer Science and an aversion to programming in general, I was shocked how much I enjoyed this course. It's a lot of work, and my Wendesday nights were shot since we had quizzes or exams the majority of Thursday, but you get a lab distrib without having to actually go to lab, and the work is fun as well as rewarding. Cormen is also an AMAZING prof, making the material accessible to everyone, since there is a supremely varied amount of experience amongst the students coming into the course. Constant tests & assignments mean that if you fall behind you're in big trouble, but as long as you stay on top of your work and are willing to work hard it's very possible to do well.\"",
            "review 38: \"07F with Thomas Cormen: Cormen is a great teacher. He provides all of his notes online - the notes, and his lectures, are very clear, straightforward, and effective at explaining material which can often be quite complex. Cormen also manages to keep the lectures entertaining with demonstrations and corny jokes. My only complaint with Cormen is that he can be somewhat sarcastic when aswering students' questions in class, which doesn't exactly motivate kids to ask for help. I found writing code (Java) to be a very enjoyable experience. I enjoyed that it felt like solving a logic puzzle, and when I finally got a program to work I felt like a Godly Creator.\"",
            "review 39: \"07F with Thomas Cormen: Professor Cormen knows his stuff. In this course you learn the basics of using Java to create small programs that do things like sort lists and draw basic graphics. While this course might lead into some useful, fun stuff, as of yet I haven't seen much return for all the hard work I put in except a few dinky little graphical outputs. That said, when you look back on how difficult it was to do anything, you realize you learned a lot in this course. As a warning, watch out for falling behind/handing things in late; they do NOT cut you any slack. That said, Cormen and the TA's are very available for help. I once got an email back from Professor Cormen at 12 midnight. Play by the rules, keep up with the course, and you will do well.\"",
            "review 40: \"07F with Thomas Cormen: This class is pretty interesting, and actually a bit of fun if you have any interest in programming. Most of the enjoyment comes out of doing the labs, where I found myself doing the extra credit just because it was a bit of a challenge. However, lectures are very slow, and definitely oriented towards freshmen, who make up the majority of the class. Not bad for an intro course where people come from very diverse skill backgrounds, but I think Cormen babies people too much by having them turn in short assignments almost every class and having an asinine lateness policy.\"",
            "review 41: \"06S with Thomas Cormen: As a non-major, I took this course during my Senior spring purely out of an interest in learning some java programming. If I had taken it sooner, I would have likely ended up a CompSci major because I enjoyed it so much. Cormen is an excellent professor and the course material is organized extremely well.\"",
            "review 42: \"06S with Thomas Cormen: The pace of this course depends on your competency in the subject. If you're good at logic or good at math, it'll be a breeze. Otherwise, it'll be torture.\"",
            "review 43: \"06S with Thomas Cormen: Don't be scared off from taking this class by the work load, because this is one of the best classes at Dartmouth. Prof. Cormen is excellent and extremely nice. If you do all the homework in the class, it is pretty easy to get an A or A-. My favorite aspect of the course is that everyone in it forms a small community. We all work on labs together and everything, so you make a lot of new friends and you really enjoy programming. Cormen helps make this class very interesting, you won't regret taking it. It's so cool to be able to make your own programs, and you'll be amazed by how much you learn in such a short time! Take this class (but make sure its with Cormen)!\"",
            "review 44: \"06S with Thomas Cormen: If you have any interest, and you have the right mind for it, this class will be fun and easy for you.\"",
            "review 45: \"06S with Thomas Cormen: Professor Cormen is a miracle worker. The amount of material covered in CS 5 is immense compared to introductory programming courses at other colleges. Cormen however managed to make it all seem accessible to the majority of students. But, don't get me wrong, the course still requires a lot of work, and if you fall behind, you will do badly. However even though the breadth of the material is great and the work accompanying it as well, if you go to class, do the assignments, and don't fall behind you'll be left with a good grade and a great experience learning from Professor Cormen.\"",
            "review 46: \"06S with Thomas Cormen: This was by far the best class I've taken so far at Dartmouth. I hadn't had any past experience with computer programming whatsoever before coming into CS5, and was intially really nervous about taking the course because i had hard that it was really hard, incredibly time consuming, and that everyone who takes it plans to major and has had past computer experience. This is completely not true!!! Cormen is an amazing lecturer, and the amount of time he puts into his class and the class notes, assignments, etc, is incredible. the course is designed for people with absolutely no past computer-programming experience, and within 2 weeks everyone in the class is on even footing regardless of any past experience they might have. cormen is one of the best, most knowledgable, and caring professors at dartmouth. despite being chair of the writing program, and heavily involved with the computer science department and world-renowned for many of his works, he refuses to give up teaching an intro level computer science course. he teaches CS5 because he loves it, and it shows. he's always available in office hours, and will form a personal relationship with nearly every person in the class by the end of the term, connecting names to faces within the first week. this being said - the course can be time consuming. it is not, however, incredibly difficult in a conceptual sense, but rather just time-consuming to get the labs done on time and keep up with the work. but although the labs do take up some time, they are so well-designed that if you do them and keep up with the homework, you will know the material for the tests like the back of your hand. overall, the amount you learn in 9 short weeks in CS5 is incredible and will change the way you think about everyday problems. its knowledge that you will use for the rest of your life, very applicable, and incredibly interesting. i especially recommend this course for those without any prior computer experience. absolutely amazing course. i could go on, but just take it. also, you get your lab requirement as cormen repeatedly petitioned the college this term to get CS5 recognized as a LAB course, and told us on the last day of classes.\"",
            "review 47: \"06S with Thomas Cormen: java doesnt have the rep that c++ has. but seri, good prof, good course. the only real problem with it is the notes are online, so if you dont like lectures, theres really no incentive to haul yourself all the way over to moore. but the times i went to class i was glad i did. the prof's explanations are always good. he's a bit corny/into himself. but not in a way that's overly annoying. and he works really hard to get to know all the students, which is needless to say impressive in a course of that size.\"",
            "review 48: \"06S with Thomas Cormen: Awesome class. Cormen is a great teacher and is generally interesting even though he is in front of almost 100 people. If he moves too slowly, you can simply miss class and just read his online notes which are almost word-for-word. Great availability for assistance by Cormen and the TAs.\"",
            "review 49: \"06S with Thomas Cormen: This class was alot of fun and the teacher was extremely nice. He was available outside of class and he was always helpful during office hours. Professor Cormen made lectures enjoyable with his quick wit and helpful examples.\"",
            "review 50: \"06S with Thomas Cormen: Even though there was a lot of work, the class was definitely worth it! I felt like it took me longer to get the concepts so I always took a long time to do the assignments. The TAs were so helpful! I was in the Sudikoff computer room almost every night when we had lab assignments due but that's just me. The assignments did reinforce what we learned in class and they were always fun to do despite requiring a lot of time in my case.\"",
            "review 51: \"06S with Thomas Cormen: First of all, I agree with most of the other reviews; Cormen is a great prof. He is funny, smart, and gives great lectures. His lecture notes are online, too, and they are a very helpful resource. I had no cs experience and don't consider myself very technically-adept; I'm a humanities major. So, this course was very time-consuming for me. I was taking two other challenging courses at the time, and I really just did not have the time and energy to put the necessary effort into some of the assignments. The TAs are a helpful resource, and they certainly alleviated a lot of my frusturation. Be willing to ask for help and spend a few hours every night reviewing material and doing lab and homework assignments, and you should be okay. Ultimately, I am glad that I took this class as an introduction to computer science.\"",
            "review 52: \"06F with Thomas Cormen: The class was really good, a lot of work but worth it. cormen is a great prof.\"",
            "review 53: \"06F with Thomas Cormen: For me the course is broken into three parts. The first part is painstakingly boring if you've had any programming experience before. Cormen aims for the people who are completely new to the subject, which slows the class down at first. He puts all of his notes on the web so you can skip if you want. A warning though, grades at the end are always somewhat subjective, and if you go to class, go to office hours, and appear to make an effort, he's nicer in terms of grading. The second third starts to get into more interesting, complete projects, including some partner labs. This was the best part of the class. The last third is tedious dealing with program efficiency. It isn't that hard of a concept, is boring, and ends the term on a blah note. Quizzes were conceptually based, exams programming based. Usually people could do well on at least one or the other, so they helped their grades. A fair method of testing the material. Cormen was an awesome professor if corny at times. His animated lectures really helped you remember the material. Sometimes they were tedious, but that was because he tried to make sure everyone understood everything. He is always available to help. He even answered blitzes at 1 am on the nights before assignments were due. Office hours are a great way to get help and get to know him.\"",
            "review 54: \"06F with Thomas Cormen: This class is very challenging for people who have never done programming before, but there is so much help available (from the prof, to the TA's in lab, to the prof's TA's) that anyone can learn it. It does take some work, but it isn't hard to get a good grade if you seek out help. Professor Cormen is amazing too. I would HIGHLY recommend taking the course from him if you are able.\"",
            "review 55: \"05S with Thomas Cormen: I took this course on the advice of a friend who thought I might like the subject. I never imagined that I would want to be a computer science major, but now I am heading down that path. This was the most interesting and exciting class I've taken at Dartmouth to date. Prof. Cormen is competent and enthusiastic. The assignments were challenging but doable, and there was always plenty of help when I got stuck. If you think you have any interest in the subject (or even just like problem solving), I recommend taking this course. By the way, the workload is not bad (I know when I read others' reviews before taking the class, they said it was and that almost discouraged me from taking the class.)\"",
            "review 56: \"05S with Thomas Cormen: don't listen to the horror stories. it's not too bad. All the lecture notes are posted online, so I basically only went to class cause I enjoyed Cormen's lectures. In my opinion, taking this class improves a student's overall ability to think logically and solve problems, so take it. Made me want to be a major.\"",
            "review 57: \"05S with Thomas Cormen: Don't get behind in the work in this course. It's just too much material to be able to catch back up. It's a lot of work, but if you're even remotely interested in computers, take this course. You'll learn a lot. Perhaps TOO MUCH! But you should take it anyway.\"",
            "review 58: \"05S with Thomas Cormen: Get used to the term Short Assignment and Labs. Our class had about 13 short assignmnets and 6 labs. That means at least one short assignment a week and the last 6 weeks 1 lab a week. A lot of work, but if you put in the time it is manageable.\"",
            "review 59: \"05S with Thomas Cormen: Lots of work but you learn more content in this class than in most science classes and that's saying a lot.\"",
            "review 60: \"05S with Thomas Cormen: This class is a lot of fun, especially with Cormen, he really inspires enjoyment and makes things interesting. The work is only hard if you make it, ie: go into the ta and prof office hours and its not a problem at all.\"",
            "review 61: \"05S with Thomas Cormen: The class and the homework were interesting, and help in learning material quickly. There are all sorts of ways students can get help when necessary. A great class to see if you want to continue CS or not, or even just to fill a distrib.\"",
            "review 62: \"05S with Thomas Cormen: Having never programmed before I found the work for this class more time-consuming than that of most other classes. That being said, I did learn far more than I expected to. Cormen is a great lecturer, very enthusiastic, tells terrible but funny jokes, and does a good job making the material accessible. If you're willing to put in the time necessary to complete all the assignments this class is definitely rewarding. Overall, it's not nearly as bad as its reputation, and with the right attitude it can be a lot of fun.\"",
            "review 63: \"05S with Thomas Cormen: Lots of work, but you learn a lot in the class. Cormen is an interesting & engaging lecturer - he also has the surprising ability to memorize names + random facts about you (even though you rarely show up for class). The class was a huge time commitment - (all the x hours are used + an additional 1hr recitation session/wk), but it's pretty hard not to get a good grade.\"",
            "review 64: \"03F with Thomas Cormen: I'm the most unlikely person ever to take CS5 - a combination of all the wrong attributes: disorderly, unmathematical, not even remotely considering a CS major (hello - I'm going to be a hardcore English major), a freshman, juggling several extracurriculars... but I took CS5 out of pure interest, and enjoyed it, sort of masochistically, and ended up doing vaguely all right in the end. Oh yes - and now that I understand how for-loops work, and a little bit about how to manipulate data structures, it's been a lot easier for me to teach myself other useful things like PHP. There, that's about all.\"",
            "review 65: \"03F with Thomas Cormen: Its not as hard as some people make it out to be. Concepts and logic are easy once you get the hang of things and start to think in the way you need to. I did it freshman fall with no prior experience and I survived intact and happy. Cormen's pretty damn good.\"",
            "review 66: \"03F with Thomas Cormen: The assignments in this class are very interesting and really teach you a lot about programming. The lectures themselves, however, can be very boring, and I often learned more by staying home and just reading the lecture notes instead (at least then I don't fall asleep). Everyone should have a basic knowledge of this stuff nowadays, so I recommend the class. Careful though, if you aren't science-minded going into this class, a lot of the assignments can be really tough. Plan to spend a lot of time on them.\"",
            "review 67: \"03F with Thomas Cormen: If you have past experience this course is still a bunch of work, but is not that difficult. If you're learning everything for the first time, be prepared to study. Prof. Cormen gives well organized lectures and really wants you to learn the material. His jokes are great.\"",
            "review 68: \"03F with Thomas Cormen: Definitely not an easy way to satisfy your TAS req, but a must for anyone with a serious interest in computers. Even for non-majors, the JAVA skills you'll develop are incredible, and immensely useful. Take it if you have a lot of time to spare.\"",
            "review 69: \"03F with Thomas Cormen: I will recommend this course to anyone who would like to learn what Computer Science is all about. Apart from learning JAVA programming language, you learn how to think as a programmer. Materials are not so hard to understand and homeworks are really fun. Although be prepared. The amount of the homework and short assignement you will get is overwhelming. If you are prepared, an excellent course!\"",
            "review 70: \"03F with Thomas Cormen: The course left me with one regret: that as a senior it is too late for me to even pursue a minor in CS. I will definitely be continuing in the CS department until graduation, however, because this stuff is absolutely fantastic. This is definitely a class you either love or hate. If you hate the first short assignment, get out! Programming is not for you. If you find yourself eagerly awaiting the first homework, congratulations! But a word of warning: letting yourself get caught up in doing extra credit is a potential hazard, especially if you really find this class fun. It will steal your life away, and you will pour hours upon hours into your assignments AFTER the basic requirements are already done!\"",
            "review 71: \"03F with Thomas Cormen: Tough class. Professor Cormen is a great prof but the amount of work is a bit absurd. Plus the exams and long assignments are extremely long. The last half of the term was absolutely chaotic. Lots of work. But in the end, you learn a lot from Cormen and I think it's a worthwhile class if you're dedicated to putting a lot of work into it.\"",
            "review 72: \"03F with Thomas Cormen: Great prof, interesting material, makes you think in ways you never have before: What more could you ask?\"",
            "review 73: \"03F with Thomas Cormen: This class is difficult, mostly because of the amount of time required, but it is challenging in a good way, especially if you enjoy logic problems and are decent at math. It can be frustrating at times, but the programs you write for homework are actually pretty cool, and it's worth taking this course even if you're not a major as so many things involve computers today. I probably won't ever take another computer science course, or even write another program, but I'm glad I took this course. But, be prepared for work if you want to do well.\"",
            "review 74: \"03F with Thomas Cormen: Professor Cormen is smart, and he'll let you know it. He seems to enjoy his work, but he also enjoys being smart. He'll let you know if you're not doing things his way, and he expects you to do things the same way he does, which isn't the most effective way to teach a problem solving course like CS 5. One of the beauties of this course is that there are many ways to work something out, but Cormen prefers his students to do things his way. That's my only complaint. It's a lot of work, but I enjoyed it. Cormen does a good job of presenting the material, and the TA's are helpful, if you want them to be.\"",
            "review 75: \"03F with Thomas Cormen: This class was a great class, if you had the time to do all the work. The homeworks were very time-consuming, but also very helpful. Cormen gives good lectures (although his sense of humor can get kind of annoying). Warning... the exams are long. The first midterm took about 4-5 hours, the second 3-4, and the final took up almost all 3 hours. It's a really great class, but I would only recommend it if you have the tenacity to work on code for many hours and you have the hours to spend on it.\"",
            "review 76: \"03F with Thomas Cormen: My only criticism of this class is the exam format. The professor has a significant portion of the exams based on writing code on paper, which I quickly learned is vastly different from coding on a computer, where you can test your code and relatively quickly determine where there are errors in the code. A plus side to exams is the professor allows you to make a 8.5\"x11\" double sided crib sheet upon which you can write anything you want... this helped a lot on the short answer questions, but I found when coding, I remembered all I needed to and the crib sheet helped minimally. It's the small mistakes you don't realize you make in the code that takes off points from your exam grade. I found course material was extremely interesting, and I enjoyed coding. Having prior experience in coding helps immensely, though make sure you are flexible, because a significant portion of grading is also based on code \"style\". Make sure you give yourself plenty of time to do homework... procrastination in this course definitely affects your grade.\"",
            "review 77: \"02F with Thomas Cormen: If you just want to take this for fun, do so in the spring term. Cormen is an excellent professor, but can be very confusing to people with absolutely no background. Also be prepared to throw a lot of time into this course.\"",
            "review 78: \"02F with Thomas Cormen: I signed up for CS 5 looking to fulfill my TAS, but by the end of the term I was looking at ways to change my major to Computer Science or modify my major to include Computer Science. Cormen is a wonderful professor who responds to students during class and is available outside of class as well. The HWs are challenging, but you have a week to do them, which means if you get started early you should have no problem. Short Assignments are also given to reinforce what has just been taught. The TAs in this course are so helpful because they do everything from help you with HW to reviewing concepts we have learned during the weekly review sessions. Lab hours are particularly helpful, if only to get you going on the right track. The topics we covered in this course were very interesting, and the assignments were generally fun such as creating applets that display raindrops and programs that kill soldiers and cats (you'll just have to take the course!). I have heard that people enjoy this class a lot more than its ENGNS equivalent.\"",
            "review 79: \"02F with Thomas Cormen: This class takes a ton of time--but if you're willing to put that time in, it's completely worth it. It gives you a very solid background in Java and in computer science in general, and I thought it was fun along the way. The professor is great; he will go out of his way to help you with the material, and is very responsive to student input during lecture. I really enjoyed this class.\"",
            "review 80: \"02F with Thomas Cormen: This class is difficult and time consuming if you don't have a programing background, which I didn't. However, it is very worth it. THe material is interesting, and Cormen is amusing and gives very good lectures. The test are not too difficult, but it is hard to get used to the format (untimed). About ten people dropped the class after the first test. This class has convinced me to continue in computer science.\"",
            "review 81: \"01F with Thomas Cormen: This course is going to be a lot of work, but as long as you stay on top of things it should flow smoothly. Cormen is very organized for his lectures and provides everything on the network.\"",
            "review 82: \"01F with Thomas Cormen: CS 5 is supposed to be a really difficult course, but in fact, if you've had any kind of programming experience before (and I really mean anything), it should be easy for you. And if you haven't, as long as you think logically, you shouldn't have too much trouble. Besides, Prof Cormen is a great teacher for someone having trouble undestanding the material. His lectures basically summarize the contents of the book, which, although somewhat frustrating for people who've read the book, is great for those who haven't understood it. Yes, the homework takes quite a bit of time especially the extra credit options), but most of the time it's kind of fun, so it's a lot better than, say, math problems... Anyway, I strongly recommend this course. It's not as hard as it sounds!\"",
            "review 83: \"01F with Thomas Cormen: CS 5 is a great class but it is a lot of work. If you are a logical person, the work is more time than difficulty; if you are not, the work is both but even so is worth the effort. Cormen is a great lecturer so you'll want to go to class, but even if you miss the stuff is on the web. He isn't such a great guy in person so I'd say don't bother going to office hours unless you don't fit the standard cs profile, in which case he really will go to a lot of effort to encourage you to major. Even so, that doesn't detract from his ability to teach the subject to a large group. Take this class, but do have the time to put into it.\"",
            "review 84: \"01F with Thomas Cormen: CS5 is a great course. i learned an extraordinary amount, i couldn't even learn it all as well as i wanted to! i was disencouraged however, by the amount of computer programming that other students had in the course. i was treading water from day one just to keep up. and no matter what, i was not able to do well on exams due to this disadvantage. it's frustrating to me, to have to take a class and know that i can never get above a certain grade due to my lack of experience. i feel like the same course should be offerred for students with zero experience. it's supposed to be an introduction to computer science, that is the title of the course!! If another course was offerred, however, students should not be penalized for taking it, nor should the pace be much slower.\"",
            "review 85: \"01F with Thomas Cormen: The class serves as a fabulous intro to programming. Computer Science is used in almost every field in tomorrow's world; so a solid introduction to computer science is in some sense a prereq for any college major. This class is able to introduce a computer novice to the world of programming in an effective manner because it has a reasonable pace, very fair homeworks and tests, and, best of all, a dedicated prof that always makes himself available outside of class. I would definitely recommend this class to students of any major, as mentioned before--computers are prereqs for anything one wishes to do in the future.\""
        ],
        "Vasanta Lakshmi Kommineni": [
            "review 1: \"24W with Vasanta Lakshmi Kommineni: Vasanta is super nice, class is definitely manageable. The tests are 60% of the grade and are actually way easier than the assignments which can really take a sec. Don't struggle alone though TA sessions are going on all the time and eventually they'll point you to the right direction, but assignments are going to be a huge chunk of your time no matter how you go about it. I hate how much this class makes me walk lectures are in LSC but required recitation sessions and TA office hours are in CECS. But it's a very cool and important intro class Vasanta's a great prof.\"",
            "review 2: \"23W with Vasanta Lakshmi Kommineni: NOT A LAYUP. I swear you learn a lot, but half the time you need to go to office hours to understand. It would be best if you put in the time and energy. Vasanta is very accommodating, if you try it should be a solid A/A-\"",
            "review 3: \"23W with Vasanta Lakshmi Kommineni: Good class! Starts off really really slow and goes really really fast in the last couple of weeks. Vasanta's teaching is good, though a bit slow at times, and there's an amazing amount of TA help available (at *least* like 6 TA office hours a day, often more, tho they can be moved around last minute). This term we had 4 paper exams (30 min, during x-hrs), a paper midterm (2 hours) and a remote/online final. All the tests were really fair, and there was never anything unexpected if you did the practice problems (often harder than the exams), read over the textbook, and paid attention in class. The Labs (4 of them) are long and time consuming, and you are basically required to get TA help for them, while the short assignments (8 of them) are a bit shorter, but still challanging. Overall, I feel like I learned a surprising amount of Python and programming in 10 weeks.\"",
            "review 4: \"23W with Vasanta Lakshmi Kommineni: NOT A LAYUP; the course itself is super challenging, but Vasanta is very accommodating and a greater lecturer, which is why the medians are so high. I liked this class and learned a lot from it but I wouldn't sign up if you're looking for a layup.\"",
            "review 5: \"23W with Vasanta Lakshmi Kommineni: NOT AN EASY CLASS. I took this bc I assumed the labs would take less time than other lab classes, but omg I was so wrong. Horrible class.\"",
            "review 6: \"23W with Vasanta Lakshmi Kommineni: big layup IF you've taken ap cs a and you are willing to work ahead on the assignments. otherwise the assingments can really pile up and they aren't always super easy. but still, pretty good class and vasanta is a genuinely good person. it's worth to take it even if you're not a cs major, as long as you're decent at STEM\"",
            "review 7: \"23W with Vasanta Lakshmi Kommineni: I have no coding experience prior to the class, and the first few weeks are incredibly easy. Vasanta taught with superhuman patience and divine explanation ability, I legit can understand everything by re-watching the lectures only. The last third gets a bit crazy in terms of workload, and the learning curve is a bit overwhelming by week 8, but TAs are always so helpful and recitations help every time, especially for the pre-exam weeks. This term we have the revamped exam format and the frequent tests and exams could get a bit stressful but not at all hard if you practice every single day. Overall the best class ever, there was so much work but it was all worth it.\"",
            "review 8: \"23W with Vasanta Lakshmi Kommineni: I will preface this by saying this is not a layup and it requires a ton of effort. However, the class is more than worth it. Vasanta's one of the most accommodating and kind professors on Dartmouth campus and personally inspired me to even change my academic path to include a cs minor. That being said, I cannot stress enough the importance of office hours and making close relations with the TAs, some of which will do all they can to help you. Take this class but keep in mind the academic strain it will put on you.\"",
            "review 9: \"23W with Vasanta Lakshmi Kommineni: This class is not a layup. It starts off so easy and then becomes hours of work, yet it is not hard to do well. You will become lost in this class if you\u2019re not super good at coding, but if you continue to get help to go into office hours you will get an A or A-. The tests aren\u2019t hard but the labs are a ton of work and worth so much of your grade. If you go in for help you will do well it\u2019s just a huge time commitment\"",
            "review 10: \"23W with Vasanta Lakshmi Kommineni: This class was fairly light - very little work for the first 5 weeks and then picks up a bit, but still very manageable. Had no coding experience but still found the class to be very doable, especially with office hours. For the tests, you should spend some time doing and understanding the practice problems. If you do the practice problems, basically all the tests are a breeze. Borderline layup.\"",
            "review 11: \"23W with Vasanta Lakshmi Kommineni: NOT A LAYUP AT ALL. If you don't have previous coding experience, you will struggle. However, there are plenty of TAs that are available throughout the week. The instructions for the assignments and labs are clear, although they are pretty challenging. Vasantha is a great prof and I highly recommend this class if you want to gain a basic understanding of programming and Python. Grading wise, the class is layupy because the labs are most of the grade and the exams don't count for much. A-/A is very doable, even if you don't understand the last few topics, which are taught super fast. I learned SO MUCH in this class and would recommend it, but make sure you don't have a packed term because towards the end, you'll need to spend more and more time on the assignments.\"",
            "review 12: \"23W with Vasanta Lakshmi Kommineni: Take this class with Vasanta! She is an excellent professor. I found her to be a gifted and funny lecturer and was rarely confused despite coming into CS1 with no experience. She is much better than Campbell, who subbed for two lectures in 23W. CS1 is a well-organized class. There are always office hours, and the textbook is well-written and useful. The instructions for the labs and short assignments were also clear. Vasanta always explained what would be on the tests and provided applicable practice problems. Grading isn\u2019t hard. Everything feels very easy at the beginning of the term. As the content gets more demanding, you will need to spend more time on the class, but an A is within reach with a reasonable time investment.\"",
            "review 13: \"23W with Vasanta Lakshmi Kommineni: Vasanta is legitimately the sweetest woman. CS doesn't click with everyone immediately but she does her best to manage two 100+ person classes and keep everyone on the same page. I found the grading in this class to be a little non-standardized (as in I would get points off on assignments for things that my friends wouldn't) since it's done by like 30 TAs but in the long run that meant a difference of only 2 or 3 points overall so not a huge deal. This is a class where you can pretty much guarantee yourself an A if you have enough time to show up to office hours and really put a good amount of effort into the labs. The in-class exams were on paper but they made up a relatively small portion of the grade so they don't matter all that much (but the 65% median on the midterm was lowkey demoralizing). This was a weird term since Vasanta was trying a new structure for the class so assignment dates kept changing and a few got canceled but overall a really good class that teaches you a valuable skill. Some people say that this class isn't a layup, and it's true that this class might take a good amount of work if you don't have a knack for CS. HOWEVER, I can't think of another class where you can not understand the material at all and have a B or C average on the exams and then end with like a 97/98. If CS comes naturally to you this will breeze and if it doesn't you can still get an A with a few extra hours of effort per week.\"",
            "review 14: \"23F with Vasanta Lakshmi Kommineni: Definitely not a layup. Vasanta made it known that students shouldn't expect the median to be an A anymore, and the course definitely got harder from previous terms. For example, now there are four major exams held every 2 weeks. Your top 2 scores are worth 20% each, and the bottom 2 scores on the exam are worth 10% each. The assignments are worth 30%. They start off really easy, but then end up being extremely difficult for the second half of the class. However, the TAs are always holding office hours so do use that to your advantage. Maybe I found this course more difficult since I've never coded before, but do know that she changed the structure of the course so that it's more difficult to get an A. Regardless, it's definitely worth taking as I learned a lot and I consider myself to be a smarter person after taking this class. Also, make sure to take it with Vasanta as she's super understanding and really tries to make the class as much of an enjoyable experience as possible.\"",
            "review 15: \"23F with Vasanta Lakshmi Kommineni: I LOVE VASANTA. She is the best. She cancelled our third exam and gave everyone 50/50. The class is fairly easy in the beginning especially if you have little coding experience. But after week 6 the class starts to pick up and become a little bit more advanced and the assignment become more frequent and can very easily pile up. If your on top of your stuff and go to TA office hours when you need help, you'll be fine. It's also very easy to skip class because she posts the lectures but if you do, you'll find yourself falling behind fast. She doesn't use X-hour except for exams. We had 3 exams throughout the term excluding the exam that got cancelled. I know that she was testing the format of this class for the first time so don't expect everything to be the same. Overall, an extremely useful class that is a fair amount of work and studying for exams but is great for lab credit because you'll actually learn something useful.\"",
            "review 16: \"22W with Vasanta Lakshmi Kommineni: Take this with Vasanta. We had for her the first three weeks and then the rest of the course was taught by Balkcom, Jayanti, and Campbell. After she left I lost all hope. I love her. I hope she is okay. But I agree with what everyone has said. You'll get a good grade if you put just enough work into it. The TAs are always available and helpful. People talk about how insane this course is, but genuinely you'll be fine. It was fun to learn and getting problems right make you feel so cool. Take this class.\"",
            "review 17: \"22W with Vasanta Lakshmi Kommineni: I LOVE VASANTA! so sad she only taught the first few weeks of class. But manageable class anyways. OH was on zoom so I went to like every OH for the assignments for my codes all worked. And somehow I was able to understand CS1 enough to do extra credit for every lab. Vasanta was incredibly clear and the content became very intuitive. idk but she just makes it logically understandable and i am a very illogical person. When we had like a different prof every class it became incredibly confusing. One prof coded on the blackboard in chalk and pretty sure he was coding in java but somehow it worked in python. Was confused. But exams were chill. I think I just looked a practice problems and was fine.\"",
            "review 18: \"22W with Vasanta Lakshmi Kommineni: PREFACE: Vasanta only taught this course for three weeks or so and then we had Balkcom, Jayanti, and Campbell. The portion of this class that Vasanta taught was great. She is a phenomenal lecturer and explains things very well. The first few assignments are tough but doable and you find that you are able to manage most of the work yourself with some input from the TAs when needed. However, Vasanta had a family emergency so we got a mixture of the three professors listed above. It was apparent that none of them were very invested in teaching CS1 and we covered some of the most challenging material of the course during that transition period so the class got very difficult very quickly. At the end of the day, you get the work done, but in my opinion I felt too reliant on the TAs for help on short assignments and labs. Even if you're going to all of the lectures, reading the textbook, doing the assignments and practice problems, conceptually this class is just hard to wrap your head around at times. I felt with each assignment I was getting by by the skin of my teeth. By the end of the course, the TAs just give you the answers to the assignments in their entirety. I think this class is doable and very interesting. You walk away with a lot of knowledge. However, in the moment it's very stressful and I would say be selective with your other two classes when you take CS1. It isn't a lot of work but it's more so about structuring when you do work so that when you need help you can go to office hours in order to progress.\"",
            "review 19: \"22W with Vasanta Lakshmi Kommineni: Class was great when Vasanta taught it for the first few weeks before she had a family emergency and had to take a leave of absence. The other lecturers unfortunately did not share her talent for being actually perfect at explaining literally everything. Take it with her if you can. PSA Balkcom was especially confusing and unclear. :( As for the class in general, a lot of work but doable (even as someone with no CS background) with help from TAs especially! Not a layup by any means but I learned a lot!\"",
            "review 20: \"22W with Vasanta Lakshmi Kommineni: As in other reviews from 22W, Vasanta had a family emergency after the first three weeks. (Best wishes to her; she is genuinely a wonderful person, and it is so sad to think of bad things happening to her or her loved ones.) I thought the class was hard before she left. Turns out, you don't know what you have until you lose it. At the very least, I've learned that I won't be taking more CS classes. Computers are horrifying. It's a doable (and probably useful) class even if you hate the subject with a passion. Use the TAs, make friends in the class who know what they're doing, and try to avoid using the late days for as long as possible. To conclude, an actual quote from Prof. Balkcom (one of the profs who filled in): \"Computer science is not about computers.\" And another: \"Time is simulated by robots that are ripples in a pond.\" (I don't know about his computer science skills, but I can confirm that he is absolutely incredible at mixing metaphors.)\"",
            "review 21: \"22W with Vasanta Lakshmi Kommineni: As others have said, we had Vasanta for the first three weeks before she had a family emergency. She was amazing. Really wonderful. I personally loved Campbell, one of the fill-in profs, and thought he did a really good job keeping people engaged and explaining complex topics really well. He made sure to watch for questions and make sure people really understood the answers. Balkcom was not great. Jayanti was bad. Didn't answer any questions, and when he did he gave the vaguest possible answers. One of which was just \"the code worked because we believed\". Literally what. The short assignments are definitely not easy, but I think they're a pretty fair assessment of what we talked about in class. Towards the end I sometimes needed one or two questions answered by TAs, but in general they weren't bad. The exams I thought were also really fair. They were remote, open note, and more importantly open Pycharm, meaning we could test all of our code before we submitted the exam, so we knew whether or not it worked and could check for bugs during it. The lab assignments, however, did not feel like a good test of our knowledge. After the first one, we were given little to no explanation in class about them, and they were way too difficult. Completing them just became all about whether or not you could be the first or second one into office hours, otherwise you'd sit in zoom rooms for hours waiting to be helped. By the end the TAs would pretty much just give us the code because there literally wasn't enough time for them to explain to us how to do it. Some of the TAs were amazing, and I absolutely loved them. Some of them would just not show up to their hours, or give five minutes warning that they were cancelling. All this being said, it is an A median class and for the most part if you go to TA hours and do the assignments you will do well. But it is hours of your life every week, and I found it incredibly stressful. Really think about your other classes and whether you can NRO it before you take it.\"",
            "review 22: \"22S with Vasanta Lakshmi Kommineni: The reviews for Vasanta on layuplist make her seem like she is God's gift to pedagogy. To be fair, she is a good teacher, but the reviews of her make it sound like if you don't take CS1 with Vasanta you are hopeless-- I doubt that is the case. Especially the reviews from 22W are skewed, where she was teaching by far the easiest portion of the course, then had to leave (of course she will seem like a great teacher when the material is learning basic commands). That being said, she is still a good teacher, and can explain everything pretty well. The two main gripes I have with her class are how slow she is at putting in grades and her lectures. Grades take inordinately long to reach Canvas, like 2+ weeks for exams and labs. Some of that falls on the TAs, but even when they have done their portion of the grading it will take her another week to either grade or just do the data entry. Lectures: lectures are brutal. When you want her to be slow, she's fast, and when you want her to be fast, she's incredibly slow. Every lecture feels like it takes 2 hours, and often times the things you actually need to know are covered in like 15 minutes of class. The textbook is a mix of good and bad sections, and TA office hours were indispensable. You cover a lot of ground, and it can get to be tough at times, but it is a pretty good class, and I imagine one of the easiest ways to get a lab credit. Overall I would recommend taking it, but don't worry so much about which prof you get.\"",
            "review 23: \"22F with Vasanta Lakshmi Kommineni: Would definitely advice taking class with her. She is a sweetheart and does an absolutely wonderful job of teaching. The class can be hectic especially with the assignments and 3 exams.\"",
            "review 24: \"22F with Vasanta Lakshmi Kommineni: Professor Vasanta is a gem. Take CS 1 with her if you can. I came into CS 1 without knowing how to efficiently write code. I am leaving the class confident that I can solve a good number of programming problems, and I no longer feel like a fraud when I put \"Proficient in Python\" on my resume. Professor Vasanta does more than teach you to write Python. She teaches you how to THINK like a computer scientist. She shows how all problems can be broken down into smaller problems and then solved. She is amazing. Before the term started, I was so scared of how I would perform coming from a background of no coding, so I sent her an email asking if she would be willing to discuss with me about my fears about taking CS 1. She replied quickly and we had a Zoom call; she encouraged me to take the class. I am leaving the class happy and sad: happy that I took it, sad that it is ending after ten weeks. This course is amazing. The short assignments are fair and help you digest the material. The labs can get tough, but there are a lot of helpful TAs, and I recommend you attend every TA office hour at least once to see who you work best with. Professor Vasanta also holds \"concept hours\", where she re-drills in the concepts covered in class through practice problems. I highly recommend you attend them. Do all the practice problems before the exam; correct your mistakes and study the solutions to practice problems that she posts. Make sure you understand why your code works the way it does, and you will excel in this class. Also, take notes!!! in class. It makes all the difference. Summary: this class is a layup if you have significant prior CS experience; it requires work if you don't, but it is definitely very possible to get an A.\"",
            "review 25: \"22F with Vasanta Lakshmi Kommineni: Even if you have literally ZERO python/coding experience, this class is amazing. You will learn so much stuff, and I'm genuinely amazed at what my coding capabilities are at the end of the course. This class has a scary grading curve (something like 96% for A, 90% for A-), but it is so, so possible to get an A (A- is honestly pretty easy if you're a diligent student). Exams are surprisingly straightforward if you do all the practice problems, concepts hours are a great investment (Vasanta's 1.5 hour office hours where she gives problems), and the TAs are gems. I'm posting this before the median gets released, but I wouldn't be surprised if it's an A. However, if the exams are written in the Winter, the median will certainly drop. We had online exams, meaning that you can very easily spam code in Pycharm to see what works (I'm very guilty of that).\"",
            "review 26: \"22F with Vasanta Lakshmi Kommineni: TAKE THIS CLASS. You learn so much. Vasanta is an amazing, strong, powerful woman in addition to an excellent lecturer. Everything is fair. Labs are worth a good portion of your grade in addition to the 4 midterms. Go to office hours, if you sit there long enough, someone will help you.\"",
            "review 27: \"22F with Vasanta Lakshmi Kommineni: Great class, good breadth of subject and very applicable. Love Vasanta- she's so nice. She's a pretty good lecturer overall. Get TA help on the assignments, they hold office hours very often! Lowkey nearly a layup, especially with even just a bit of Python experience\"",
            "review 28: \"22F with Vasanta Lakshmi Kommineni: Great class. Definitely take it even if you don't plan to go further with CS. It will be a layup if you have any CS experience (I took AP CSA in hs). Vasanta is great and explains everything very clearly. Only complaint is that it is a bit hit or miss with the TAs, don't be surprised if they grade your lab or test wrong and you have to email them to get points back.\"",
            "review 29: \"22F with Vasanta Lakshmi Kommineni: Vasanta was a strong lecturer and does a good job breaking down the concepts into highly digestible portions. The first half of the term, the class was exceptionally easy, especially because I came in knowing Java, so picking up Python was not particularly hard. However, it got more difficult around week 6 and ramped up throughout the second half of the term. This would have been fine except for the fact that getting help was often harder than it should have been with TAs failing to go to their office hours or cancelling 15 mins before they were supposed to start. Additionally, when there were office hours, they were often brutally crowded, so there was not much the TAs could do to offer assistance, so we had to help each other while we waiting for help from the TA. I understand that these are things that come with a very large lecture class, but I felt they could have been managed much better. The course load was always fairly manageable and I never felt like I was drowning in work. The content of the course has been useful to me, especially the data analysis portion. The labs tended to be difficult but in the long-term useful for understanding the topics. The tests were extremely easy, but you should do the practice problems because they prepare you for the tests very well.\"",
            "review 30: \"22F with Vasanta Lakshmi Kommineni: COSC1 turned out to be my favorite class of the quarter, and far more rewarding than I imagined. I had minimal coding experience before this class. I felt like the first two weeks were easy, but by week five, the class felt difficult. By week 8, it felt incredibly difficult. Thankfully, help is readily available: there are tons of TA hours seven days a week, without which I'd probably be lost. The tests are challenging, but if you can do the practice problems, you'll be okay; the labs are challenging, but once again, TA's are a lifesaver. Vasanta is an incredible professor. Super nice and forgiving, she moved two of our exams to be online due to disruptions (day of caring being one, everyone being sick and falling behind being two). If you take COSC1, take it with Vasanta.\"",
            "review 31: \"22F with Vasanta Lakshmi Kommineni: Great course. Make sure to go to every lecture and don't fall behind. Exams are not cumulative which is nice. Stay on top of things, and you should get an A. Labs are 40%, exams 40% (3 midterms and a final), short assignments are 15% and recitations are 5%. Labs can be quite lengthy - start working on them early. Vasanta is a wonderful woman and she teaches really well. Lectures are great, short assignments do not usually take too long. Watch out because the difficulty really picks up after the first 4-5 weeks. Course content is very practical and interesting, do try to take this course before you leave Dartmouth, even if you are not a STEM major. Great way to also pick up a TLA distrib. Highly recommend COSC 1 with Vasanta.\"",
            "review 32: \"21W with Vasanta Lakshmi Kommineni: I've never taken a computer science class in my life and I'm a government major, but I still enjoyed CS1 with Vasanta. If you do all the work yourself and don't take shortcuts, you will do good in this class. Don't let the workload be a reason not to take this class. The worst part of CS1 is all the people in lecture that have taken a computer science class before and want everyone to know. Vasanta's amazing though. She'll personally oversee any grading issues and is extremely understanding of personal circumstances.\"",
            "review 33: \"21W with Vasanta Lakshmi Kommineni: As someone who hasn't taken CS, this course was challenging to say the least. The TAs and Vansanta are amazing, but there is a lot of work for this class (short assignments 1-2 every week, 4 labs (every other week), and 5 exams (they take the top 4 exam grades- this is also every other week). The beginning of the course is pretty simple but the material definitely ramps up. If you haven't taken CS and put a lot of time into this course it isn't impossible to get an A (which is a 97%), definitely possible to get an A-. Not a bad class to take overall.\"",
            "review 34: \"21W with Vasanta Lakshmi Kommineni: This class is excellent and you should definitely take it with Vasanta if possible. The class was a layup to me but I have a little experience working with computers. Even if you don't though, Vasanata and the TAs work hard to make sure you can still do well. An A should definitely be attainable if you put in a couple hours of work a week.\"",
            "review 35: \"21W with Vasanta Lakshmi Kommineni: Good class. If you have any coding experience and are willing to put a few hours of work in a week, this class should be a layup - especially remotely (I imagine having to write code by hand vs using an IDE would be much more difficult). However, Vasanta is very clear in her teaching and there are an abundance of TA sessions so I can imagine even without prior coding experience, an A is still attainable in the class.\"",
            "review 36: \"21W with Vasanta Lakshmi Kommineni: Vasanta is such a good CS professor at explaining things. The class is really challenging and fast paced, but if you're going to take it anyways, take it with Vasanta.\"",
            "review 37: \"21W with Vasanta Lakshmi Kommineni: I'm glad I listened to the other reviews and took this class with Vasanta. She is an amazing professor that makes sure you really understand the material. Although the class is time-consuming and difficult sometimes (coming from someone without previous coding experience), you get a pretty solid understanding of what coding entails. If you attend office hours and put in the work, you should be able to do fairly well.\"",
            "review 38: \"21W with Vasanta Lakshmi Kommineni: This is a hard, but rewarding class. I won't reiterate all the astoundingly positive reviews of Vasanta, but I just wanted to mention one detail of her personality that demonstrates her commitment to effective learning/kindness: Vasanta responds to EVERY email within eight hours or so. This is incredibly impressive, given she teaches 200 students at once. Kudos to her for being so spectacular, despite the heavy workload (and the pandemic!). I highly recommend this class.\"",
            "review 39: \"21W with Vasanta Lakshmi Kommineni: Prof Vasanta is amazing. So sweet and helpful, and the multitude of TAs allowed you to get help often. I had never taken a CS class and found it super challenging. I spent a bunch of hours on almost every assignment (with help from TAs, CS friends) but once an assignment is completed, you usually know your grade. I don't think it is a life changing class and I definitely do not want to take other CS classes (just did not love the material) but if you are interested, take it with Vasanta. She is one of the best profs you could have at Dartmouth, cares so much about her students, and I genuinely felt like I learned so much (even though probably little compared to classmates lol). An A was 97% this term so take the high standards into consideration (definitely an easier course online).\"",
            "review 40: \"21W with Vasanta Lakshmi Kommineni: Great class, the median was an A this quarter even though the percent for a flat A was a 97%. I was not among that group lol. I learned so much, but it was kind of frustrating everybody was cheating. I don't think the cheating inhibited learning, because i would say it mostly fell under the umbrella \"collaborative work\", but it definitely upped the standards. I think it's hard to learn if you literally can't turn in bad work and are expected to do everything perfect all the time. Luckily there were TA's always available to clarify the things that didn't immediately make sense.\"",
            "review 41: \"21W with Vasanta Lakshmi Kommineni: VASANTA IS AMAZING!!!! Take cosc 1 with her, and you will be just fine. She really impressed me with her concern for her students' lives, even with large class sizes. She held one on one zoom calls with each of her students this term to address individual concerns, and that made me feel valued as a student. This class does require a lot of attention, and though it is easy to get an A / A- , I would not call it a layup because there are 2-3 assignments due per week. The exam policy is that 4 of the 5 exams count toward final grade, meaning lowest exam score does not count, which is a life-saver. The TAs for this class are generally accessible, though I had a lot of success forming a connection with my personal TA, which is called a recitation leader. Recommend this class to anyone interested in cs, and recommend this professor to everyone !!!\"",
            "review 42: \"21S with Vasanta Lakshmi Kommineni: As echoed by all the other reviewers, Vasanta is the professor you should take CS1 with. I found the workload to be reasonable considering that we learned most of Python in just ten weeks. One exam was dropped and the final ended up being canceled. Just take this class.\"",
            "review 43: \"21S with Vasanta Lakshmi Kommineni: Best professor at Dartmouth. Goes above and beyond to make sure you understand, and to make sure you feel safe.\"",
            "review 44: \"21S with Vasanta Lakshmi Kommineni: This class takes a LOT of work, so be prepared to dedicate a significant amount of extra time to it. Vasanta, however, was super accommodating during this term and you have a lot of help available during the entire course so if you play your cards right, you should be fine :)\"",
            "review 45: \"21F with Vasanta Lakshmi Kommineni: If you can, take this course with Vasanta. She is a wonderful person and genuinely cares about the well-being of her students. I came into this course with no coding experience, and I can definitely say that I learned a ton in this course and feel pretty confident in the skills I learned in Python. Even though I feel like I learned a lot, I would not have survived this class without the TAs. The labs compared to the short assignments and the exams are much more challenging, so I found myself sitting on zoom for long periods of time waiting for the TAs to help me out. That being said, if you utilize the TAs early and often, an A is definitely achievable in this course if you want it. I'm not sure if this was done in the past, but this fall we had five exams and the lowest exam grade was dropped. Plus, if you got to the fifth exam and you felt like you were happy with your previous exams scores, you didn't have to take the final if you didn't want to (many people chose this option). There is a textbook accessible if you want it, but I don't know many people who utilized this in the class. Vasanta also provides practice problems before most of the exams, and if you can do those/understand how they work, then you're set for the exams. The exams were also all open note and you could use Python tutor/run your code in Python. Overall, learned a lot in this course and if you're considering CS in any capacity at Dartmouth, I would recommend the course if you're willing to put in the work.\"",
            "review 46: \"21F with Vasanta Lakshmi Kommineni: As long as you don't slack off in the course you should be okay. If there's a concept you don't understand in the lecture read the textbook or ask questions or read through all your notes in depth to actually understand it before proceeding with any assignment. At the end of the course, you'll definitely feel super satisfied with the skills you've learned.\"",
            "review 47: \"21F with Vasanta Lakshmi Kommineni: I went into this class as someone who absolutely is not a STEM person and I had no coding experience. In fact, it was something that I told myself I was not going to even attempt to be good at. However, I was able to prove myself wrong and end the class with a B+. There are something like 15-20 TAs who hold office hours throughout the day, every day of the week which you can go to for assignment and concept help. Vasanta's office hours are more for conceptual understandings or if you want to talk about the course itself. There are labs, which are longer assignments, short assignments, recitation (1 hour session that happens weekly, you do practice problems and can ask questions on assignments), and the exams. Our exams were online and most were only 5 questions, which you have 3 hours to finish. My biggest recommendation would be to stay on top of things. With the way the course is structured, we would often move past the material that would be on the upcoming test, so it was really easy to just focus on the concepts that were going to be on the exam and not pay as much attention to the new material that wouldn't be on an exam for a while. However, I would definitely say to be proactive and review every day. Use the TAs to your advantage, they are always willing to help you with small details on assignments or to go through practice problems together.\"",
            "review 48: \"21F with Vasanta Lakshmi Kommineni: This class is a great introduction to programming. Vasanta explains the concepts very well; even students with little to no programming experience (like me) were able to grasp what she was discussing. The amount of support for students was also incredible - there are office hours with TAs virtually all the time (there was almost always at least one office hour going on between the hours of 10am and 10pm six days a week), which was super helpful especially at the beginning of the course before I got the hang of debugging my own code. They're great at leading you to the correct answer rather than just giving it to you. Also, Vasanta is super accessible - via email, concept hours, after class. I emailed her with a few questions, and she offered to have a Zoom meeting with me. She is incredibly supportive and encouraging towards her students and even made an effort to learn all of her names (despite there being two sections of almost 100 students each). The grading is divided into 3 main categories - short assignments worth 10%, labs worth 38% (there are 4 labs), and exams worth 50% (5 exams, the lowest grade is dropped). Works out well because if you don't do well on a few assignments, it doesn't tank your grade. Overall, great class - definitely NOT a layup though. I spent the most time on this class this term. If you put in the time and effort, then an A- or A is certainly achievable.\"",
            "review 49: \"21F with Vasanta Lakshmi Kommineni: Agree w the other reviews. Fast paced, but as long as you don't procrastinate on the lecture content and short assignments + labs (which you should start early), it is very doable. Make use of the recitation TAs, and do the practice problems before the exams, which can be tricky if you don't do them (source: me). Vasanta is a great prof and happy to help anyone!\"",
            "review 50: \"21F with Vasanta Lakshmi Kommineni: I have never coded before I got to Dartmouth. Vasanta is super sweet and a patient professor. The TAs are also really helpful. This class is not easy when you get to week seven if you have no experience in code, however, I do think it is a solid class to take if you are interested in getting more experience in Python.\"",
            "review 51: \"21F with Vasanta Lakshmi Kommineni: Professor Vasanta was amazing and super helpful, but the class was incredibly challenging. If you have never coded, prepare to struggle. If it weren\u2019t for my TA, office hours, group tutoring, and weekly meetings with Vasanta, I would\u2019ve failed. This is not an easy class if you have never coded before\"",
            "review 52: \"20X with Vasanta Lakshmi Kommineni: Take this class with Vasanta she is the GOAT. Even remotely she made the class worthwhile and blessed my ears three times a week. The labs and short assignments were reminiscent of eating chocolate-covered strawberries: absolutely wonderful. The TAs were legendary too. Vasanta for President.\"",
            "review 53: \"20W with Vasanta Lakshmi Kommineni: Take this class with Vasanta! She is the clearest lecturer I've ever heard, and she explains confusing concepts very well. Such a cool course with an even cooler prof.\"",
            "review 54: \"20W with Vasanta Lakshmi Kommineni: Definitely take this class with Vasanta! She is very passionate about helping her students succeed, and her lectures are very engaging. Also, she records all of her lectures which helped a lot when studying. I recommend going to office hours in the morning/ early afternoon because they are usually empty then, and the TA's are all very helpful, but if you go too close to a deadline there will be too many people and you wont be able to get help.\"",
            "review 55: \"20W with Vasanta Lakshmi Kommineni: YOU CANNOT GO WRONG TAKING THIS CLASS WITH VASANTA. Vasanta is like a mom, super caring about her students. She explains things incredibly clearly. She makes sure students understand the content before moving on. She reinforces central concepts. She gives really helpful ways of thinking about problems, visualizing concepts, practicing topics, everything. She perfectly balances \"handholding\" students through the material and providing enough incentive and challenge for us to do well on exams. Her exams are very manageable and with nothing crazy on them. She gives so much opportunities to practice and gives so many useful resources and tips about approaching those problems. She genuinely cares about her students and is a very effective teacher. Her lectures are recorded and are online. But should you take COSC1? I'd argue everyone should. It is not an easy course, and requires a good amount of time to do the assignments and practice for exams. But coding is such a useful skill to have. The assignments are super relevant and engaging and are actually fun to complete. There are so many ways to ask questions and have concepts reexplained: the professor, graduate TAs, and more than 10 undergraduate TAs that collectively hold office hours at least a few hours every day of the week. Use these office hours, as they are super helpful for completing confusing labs, and undergraduate TAs are basically classmates that are super approachable and understanding. I never had any coding experience beforehand and survived perfectly well in the class, and am considering taking more computer science courses. Take COSC1, and take it with Vasanta.\"",
            "review 56: \"20W with Vasanta Lakshmi Kommineni: Probably the best managed class I've taken here. The online textbook is interactive and well written and the assignments are pretty fun if you make time to think about them. Vasanta is fun but it felt like she babied the class a bit too much.\"",
            "review 57: \"20W with Vasanta Lakshmi Kommineni: Great prof. Take it with her if you can. She truly wants everyone to succeed. She gave so many office hours over the term it was insane. Do not fall behind in this class. Read the textbook before class and start your labs and short assignments before they're assigned; if you stay ahead of the class, it'll be fun. came in with no coding knowledge and it was a blast. do the practice problems before the midterm and really read the textbook. great class, vasanta is phenomenal, take her to pine too she's hilarious\"",
            "review 58: \"20W with Vasanta Lakshmi Kommineni: It doesn't matter what you're studying. If you're a Freshman, take this class. CS is so useful, and you don't know that it's not for you until you try it. This class with Vasanta was pretty mellow if you're into this stuff (A- median) and if you go to office hours. The concepts that I learned in this class have in all honestly reshaped the way I view the world and consume technology. Before CS1, I didn't even consider CS as a field of study for myself, and now I am majoring in it. Vasanta is super nice, but the lectures were pretty boring and hard to get through. It was the projects though that were so fun for me.\"",
            "review 59: \"20F with Vasanta Lakshmi Kommineni: Vasanta is the best! Take this class - you won't regret it. Even with the remote format, the lectures were interesting and engaging. Vasanta is great at explaining concepts and answering questions. The workload is definitely manageable and some of the labs and assignments are really cool.\"",
            "review 60: \"20F with Vasanta Lakshmi Kommineni: A great professor. I initially found the class difficult but I made use of the office hours by the TAs (there were multiple OHs throughout the day nearly 7 days a week) and it made assignments/labs so much easier. There were no official midterms/final; we had 5 short exams throughout the course and the questions were pretty easy. Since the course was remote, we had 24hours to complete these open book+notes exams. The exam with the lowest score was dropped. We also had weekly recitations with a TA which I found really helpful, especially because we would solve practice problems relevant to upcoming exams during these sessions. If you plan on majoring/minoring in CS, I suggest you start here, regardless of prior experience.\"",
            "review 61: \"20F with Vasanta Lakshmi Kommineni: vasanta is suuuuuperrrrrr nice and caring!! awesome prof; TAs are also v helpful and have plenty of office hours but since they're on zoom, you have to wait in line; kinda wished we used libraries that people actually use in industry (e.g. numpy, pandas) and not one they made just for this class (cs1lib) but ig it's an intro class so it's helpful to scale it down a bit... other than that it's a pretty fun and chill class!! vasanta changed it up this quarter for grades and we had 5 exams (in addition to 9 short assignments and 4 labs) and could drop our lowest one\"",
            "review 62: \"20F with Vasanta Lakshmi Kommineni: Just like the other reviews said, take this class with Vasanta!!! Her explanations are thorough and fantastic, she truly wants the best for you. The labs are a lot of fun, the exams are very doable. If you're stuck or struggling, go to office hours and you'll be fine, if you're familiar with Python, you've already got the first 5 weeks down. I very very strongly recommend this course.\"",
            "review 63: \"20F with Vasanta Lakshmi Kommineni: REALLY great class. Vasanta is an amazing teacher and always makes sure that her students understand the material. When I sent her questions over email she responded to all within 10 minutes. If you stay on top of your work it is not difficult. There are 5 exams, the lowest exam is dropped, they are open note, open book, and you have 24 hours to complete each one (the remote version). TAs were also helpful and there are tons of office hours. There is also extra credit offered very frequently, overall 10/10 class!!\"",
            "review 64: \"20F with Vasanta Lakshmi Kommineni: Vasanta is SO nice and caring. She wants everyone to succeed and doesn't let you feel discouraged by your struggles. I had no CS background and was still able to succeed in the class. It is very organized, and there is a lot of access to office hours with TAs which are super duper helpful. Was surprised about how much I enjoyed this class, and I encourage everyone to challenge themselves with it!\"",
            "review 65: \"20F with Vasanta Lakshmi Kommineni: Everyone else who gave a review for Vasanta is absolutely correct. She is THE BEST and you will actually learn a lot from her class. The TA system is also really helpful if you get stuck and need help - they're available every day of the week at different times.\"",
            "review 66: \"19W with Vasanta Lakshmi Kommineni: Very nice and clear teacher. She explains concepts very well in lecture and it was easy for me to follow as someone with no coding background. However you should ask individual questions to TA's first, because she sometimes complicates answers in office hours.\"",
            "review 67: \"19W with Vasanta Lakshmi Kommineni: Vasanta is a really great professor. She wants each and every person to do well in cs, and will take the time to walk through every concept with you. She'll even get annoyed if people aren't asking questions/aren't engaged with the class. She gave us tons of practice problems before the exams. She is probably one of my favorite profs. Unlike the other two reviews though, I think the only downside to her class is her tests. As someone with no coding experience, and who cs did not always come naturally, I felt the tests were always fair except for one question. She seemed to put one question on every exam that she knew only people with either previous coding experience or who were extremely good as cs would understand. This wouldn't be an issue if that question didn't count for 20/100 of the points, and it seemed impossible to get partial credit (maybe it was just my TA). Either way, do the python text readings and try to do the practice problems over time. Even if you average a C on the exams, it's possible to end with a B.\"",
            "review 68: \"19W with Vasanta Lakshmi Kommineni: If you decide to take CS1, take it with Vasanta! Vasanta is one of the best professors I have had at Dartmouth! She is very knowledgable about CS and encourages students to ask questions. She also realizes that the class is difficult and tries to be encouraging. She also tries to make the class fun through her energy/passion about CS, engagement with students, and jokes/commentary. Even though CS1 is a very challenging class, Vasanta makes it bearable and a pleasant experience. I recommend taking CS1 if you are willing to put in the time and work for the class. While the class moves very quickly and covers a lot of material, there are always a lot of TA's available to help (lots of office hours). Even if you do not do as well as you would have hoped on the exams, the short assignments and labs will balance your grade. The tests are hard even if you study for them and do all the practice problems; the tests expect you to have a very good foundational understanding of topics and apply this information to harder scenarios. Despite this, I still recommend taking this class with Vasanta! It is important to know a bit about CS (or try it out) with CS being such a hot field.\"",
            "review 69: \"19W with Vasanta Lakshmi Kommineni: Vasanta is so sweet and so helpful. She's willing to slow the class down and push back assignments if a lot of the class is struggling or behind. Take the class with her if you can!\"",
            "review 70: \"19S with Vasanta Lakshmi Kommineni: I disliked this course and would still highly recommend it. Lean on the support system (one-on-ones with Vasanta, TA's, grad TA's, tutors, smart friends, etc.) and just put your head down and go through it. I think Vasanta made it as good as it could have been, but I learned that CS isn't really for me. I feel like it was time well spent even though it was difficult. Also, I have many friends who took it and absolutely loved it. You could be in either boat so just take it. It's fairly easy to get a B+ (just need to average 70-75 on exams depending on your lab performance) and manageable to get an A-(80-85 on exams). A's seem few and far between but the expectations for the course were laid out very fairly and I'm glad I took it.\"",
            "review 71: \"19S with Vasanta Lakshmi Kommineni: Vasanta is generous and kindhearted, always willing to speak with students one-on-one during office hours and to ensure that everyone has every opportunity to earn an A in the class (although the minimum in 19S for getting an A was a 95%, which is daunting and not all that accessible). While the exams usually have one question that is beyond the reach of most students, the labs and short assignments, while also challenging, usually allow students to balance their grade to somewhere in the B-to-A range, assuming exam performance isn't too poor. Go to office hours if you're stuck\u2014go all the time, in fact\u2014and take the class with an NRO set if you're concerned about the difficulty. Even if you don't plan on taking CS after CS 1, you should take the course solely to learn Python, as it's growing so much more relevant as a qualification for employment, even for jobs where it might not immediately seem useful.\"",
            "review 72: \"19S with Vasanta Lakshmi Kommineni: The class is fair grading wise because everyone gets high scores on the labs and short assignments and the tests are fair, but it's a lot of work. The labs and short assignments are very tough, especially near the end of the course. They also aren't really related to the test material which was super frustrating. Vasanta is one of the nicest professors I've had but the lectures can get very boring and sometimes are relatively unclear. That said CS is very practical and a lot of people love the class/continue on in the field, so I would recommend taking it for the lab credit and for the exposure. Just expect some frustrations along the way and consider setting an NRO if you're worried about the grade.\"",
            "review 73: \"18S with Vasanta Lakshmi Kommineni: One of the best professors I've had at Dartmouth; she really cares about her students. Her tests are certainly fair. If you understand all concepts thoroughly, getting 100% is certainly possible. If you're taking COSC 1, take it with Vasanta!\"",
            "review 74: \"18S with Vasanta Lakshmi Kommineni: great prof, always available. Lectures great as well, however you'll need to do the readings if you want an A.\""
        ],
        "Devin Balkcom": [
            "review 1: \"20S with Devin Balkcom: I actually really enjoyed this class and found that it adapted well to the online format. This may be the only course I took this term in which I feel like the quality of my education wasn't diminished. Prof. Balkcom has clearly had lots of experience teaching CS and he explained core concepts well. I had very little programming experience before taking this class but I was able to keep up and do well just fine. My advice is to do every assignment even if it's only worth a couple points because practice and doing actual coding is the best way to get better and to learn how to program. Make sure you don't fall behind either as the course moves very fast and everything builds on what you just learned. Also, start assignments earlier than you might think as I almost always encountered some bug in my code or some unexpected difficulty that resulted in my spending a lot of time to fix.\"",
            "review 2: \"20S with Devin Balkcom: Save the effort and time. Don't take this class unless you have a background in computer science, have too much time on your hands, or want an extreme challenge. I'm sure people that like CS and find it interesting did well, but if you're not a STEM person, just don't take it.\"",
            "review 3: \"20S with Devin Balkcom: I really enjoyed the online format of this class with Balkcom. Although it was a lot of work, I think the class is very rewarding. Would highly recommend utilizing TA office hours and getting a tutor outside of class because you are almost guaranteed to get stuck on a project and you don't want it to slow your pace (because the class is already fast in itself).\"",
            "review 4: \"20F with Devin Balkcom: This course was probably the best suited to the remote format out of all courses this term. Professor Balkcom is a good teacher and pretty funny sometimes but to teach 90% of python and coding fundamentals in ten weeks requires him to move pretty fast. Make sure you understand the \"basic\" stuff in the beginning like function calls and parameters thoroughly. Balkcom also uses analogies to explain concepts which you might be inclined to not take seriously but they are actually very helpful in breaking problems down so be sure to listen as everything he says is important. Assignments and labs are almost always interesting but the exams start to get tough around the second or third one. I got full marks in each so far but they took me about 6-8 hours to do with minimal breaks so be prepared for that unless you're a coding whiz. Overall great class; I'd recommend taking it with Balkcom he won't baby you but you know you'll have a good foundation going forward.\"",
            "review 5: \"20F with Devin Balkcom: Balkcom is a terrific professor. He has such a great way of explaining computer science concepts in ways that make them seem obvious and intuitive. He's also really great at answering questions during zoom class, as well as responding to messages on Slack. At the end of the day, CS1 is a difficult class even for STEM oriented people (although definitely easier for STEM than non-STEM people), so come to this class ready to learn and work. My favorite part of the class is going from being able to do literally nothing on day 1, to by the end of class being able to write really cool and useful programs.\"",
            "review 6: \"20F with Devin Balkcom: Professor Balkcom is the GOAT. I had no prior coding experience, but found the class very manageable and easy to grasp. It will be a lot of tedious work, but if you put in the time, you'll find it very rewarding. Make sure you keep up on the concepts, because if you fall behind, chances are you won't catch back up based on the overall pace of the class. The TAs are also very helpful with projects and such, so make sure you utilize them.\"",
            "review 7: \"20F with Devin Balkcom: Professor is really engaged with class content and clearly makes sure that all students understand the content. I took AP CS in high school and this class was nothing new from high school. Workload is decent but very manageable. All in all, definitely would recommend this class.\"",
            "review 8: \"18W with Devin Balkcom: Okay class for people to get a grip on basic coding concepts. Terrible and perhaps the worst Intro CS class at any Ivy school for people who actually want to major in CS. It uses a bootleg library made off Python Canvas/QWidgets to teach some concepts of variables through animation etc? It will give terrible habits to people who will actually continue to code. Grading is ridiculous, they require you to comment code that you write on paper, or name your variables with a word etc. Hoping they switch to C++ or start off with Python from a much lower and deeper level. I mean it takes them just 11 lectures to reach Classes and OOP.... Half of the people in class don't even know how a float is stored in memory. Or how do temporary variables used in functions get stored... Anything bitwise isn't even covered by the class.\"",
            "review 9: \"18W with Devin Balkcom: ('21) - I took a small introductory course on java and HTML in junior year of highschool before taking this class and found that the skills I had learned helped for only the first two classes. The pace is extremely, but understandably, fast. Learning 95% of Python and being able to say you're \"proficient\" on your resume comes at the price of learning the material VERY quickly. However, I think that for the most part, the class was taught pretty efficiently and completely. Balkcom's lectures chronologically mirrored the online textbook (that he wrote) and that was helpful in terms of consistency and what to expect on exams. The textbook itself was on the whole pretty satisfactory; it's written colloquially and contains relevant, interactive exercises that helped improve my understanding of the material. We first learned the basics of code and then following units were built off of the previous ones, ensuring that you understood the material before you moved on. That said, it's imperative that you understand the material before attempting to move on and that you do so at a pace that mirrors the class. It's very easy to get lost and behind in assignments and understanding concepts. The \"short\" assignments and labs were sometimes annoying just because they take so long to do if you're determined to figure it out on your own, and they're assigned so frequently. What really helped me were the recitation sections. Sections are led by different leaders, so I can't say this for everyone, but my section leader was particularly thorough in his responsibilities. He created problem sets, mandated attendance, helped us out with assignments, answered questions and graded promptly, and was overall very understanding of our struggle to understand new material. On the whole, this class improved my Dartmouth academic experience. It encourages you to think critically and to break down problems into bite-sized pieces and work from the ground up - a super useful skillset to have in all disciplines. This course made me rethink my major/minor studies.\"",
            "review 10: \"17W with Devin Balkcom: I was one of those people that had to drop the class-- I had no background in CS before taking it and most of the people who take it have a general understanding of CS before coming. I found it super interesting, definitely worthwhile in that sense. The workload was manageable at first, but once they started doing labs that combined physics and coding I was lost and I was truly lost on assignments. I found that I could get by on assignments, but they took me ten times longer than any one else and I would simply run the code a billion times to see if it worked but didn't really understand my errors. This proved to be a horrible for the midterm since it was handwritten and you really need a deep understanding to get a good grade. I was in way over my head! Make sure you know what you are getting into and ask around before committing to this class!\"",
            "review 11: \"16S with Devin Balkcom: Good ol' CS 1 at Dartmouth. An incredibly valuable class and I have no regrets about taking it. However, I think every term\u2014(at least this term when I took it)\u2014at least 5-10 people will drop the course. I think that just shows you how hard it is. That said, I'd DEFINITELY take it. So so so worth it, but just know what you're getting into.\"",
            "review 12: \"11F with Devin Balkcom: Although I had some limited CS experience prior, this class was my first serious attempt at CS. I loved it. Professor Balkcom is an amazing professor and engaging lecturer. He is always willing to answer questions, no matter how small, and is willing to meet with you almost anytime outside of class. As long as you take the labs and homework seriously, ask questions, and don't start the night before, you'll do fine. The class isn't too difficult. I wholeheartedly recommend this course.\"",
            "review 13: \"11F with Devin Balkcom: I had absolutely no programming experience before taking this class so everything that we did was new for me. I have to say that I felt like a lot of students had an advantage in the class since many people had done some programming in high school, but I still felt like I was able to keep up in the class. If you're like me and have no prior computer programming experience, this class will definitely open your eyes to new ways to thinking about problems. I found the labs and short assignments to be a lot of fun, though very time consuming (labs took me about 15 hours to complete). Don't fall behind in labs and short assignments and you'll be fine!\"",
            "review 14: \"10F with Devin Balkcom: This course is really well-designed and interesting, and Professor Balkcom was outstanding (a very endearing and humble guy). It does move fast, but you will leave the class able to learn any other object-oriented programming language in less than a week. I learned Python in 3 days, knowing 0 programming before I started CS 5. Labs aren't bad at all.\"",
            "review 15: \"08F with Devin Balkcom: I took some CS in high school so the beginning two to three weeks through the first midterm were really easy for me. Then the class got really time consuming and difficult. The lectures were not really interesting and could be read in their entirety online, so you really have to make sure to go to class. Overall the midterms are fair to hard, the short assignments are really easy and the labs very time consuming. Do not take this course with 2 other time consuming courses or your term will be no fun.\"",
            "review 16: \"08F with Devin Balkcom: The course is a lot of work and extremely fast. The professor did the best he could in lectures, but the only way to learn programming is to actually do it, and that's time commitment. There was three exams all worth the same, and they were all very fair in my opinion, although they could've been a bit harder. Median was usually around 85...\"",
            "review 17: \"08F with Devin Balkcom: I don't even want to know how many hours I spent on these assignments, but I know good and well that they completely ruined my fall term. I think I pulled three all-nighters getting them done, and I didn't even put them off until the last minute. I've never been happier when a class ended than I was after turning in my final for this class. That being said, I did learn a lot about programming, and (god I hate to say this) I'm glad I took this class. I actually got a lot out of it. If you take this class, don't be intimidated by the kids who already know everything about programming, pay attention in the lectures, read the book, and go to the lab hours. Do that and you'll be fine.\"",
            "review 18: \"08F with Devin Balkcom: The course was fair overall. The homework assignments were short and easy. The labs were easy at the start and became more challenging. Fortunately, Professor Balkcom posted most of the pseudocode for the labs online so that it became a matter of translation. The exams felt easy and challenging at the same time, but they mostly covered material explained in class. Each exam had a tricky question, but the grading was generous. Professor Balkcom allows students to write second answers in the margins in case if the first answer is wrong. You will still be deducted if your original answer is incorrect, but not by much if the second is correct. The students are also permitted a single-sided cheat sheet for crucial information. The class lectures were essential for doing well in the course. Attend them! At times, they were interesting and thought provoking and at others, they just went over my head. Professor Balkcom is responsive in office hours and holds optional (but necessary) review sessions before the exams. Overall, the course is relatively easy if you took computer science in high school. However, the first half of the course was a little slow with the syntax and the second half was at a slightly rapid pace with sorting and run times. Take this course if you are interested in computer science or just want to fill your distributive requirement, but be prepared to work.\"",
            "review 19: \"08F with Devin Balkcom: if you're interested in CS and have some prior coding experience, you'll probably love this class. It requires a lot of self-initiative to succeed (reading over lecture notes, going to office hours, lab, etc.), but if you take advantage of the support system they provide you with, you'll do great. The class was rather time-consuming...\"",
            "review 20: \"08F with Devin Balkcom: This was my first experience with CS of any sort, so the reviews from prior terms that spoke of death and destruction to those without experience almost spooked me off. But I'm glad they didn't. Admittedly this class eats your time, and I wouldn't recommend it if you're taking two other time-intensive courses, but at least the time spent was interesting. Lectures became dull at times, but that was because even an animated lecturer such as Balkcom can't do much with some of the bone-dry material within Java. Most of the time, however, he did succeed in keeping my attention, and doing it well. Short assignments are basically a joke if you've been paying attention in class, but the labs are more serious. Be prepared to spend an entire weekend for each one (possibly going to lab hours for help), and it might even be wise to begin on the Wednesday that each lab is assigned (only one week is given to complete them). Exams are completely fair and even enjoyable (questions referencing Transformers, R2-D2, and Batman?), and are made quite easy by the allowance of a single sided cheat sheet. Write small enough, and you can manage to bring the entire course syllabus into the test. Upon completion of the course, I feel that I have a new and useful skill to enter the job market with, and I certainly plan on taking other CS courses. Oh, and I didn't open the textbook once. My advice: don't buy it.\"",
            "review 21: \"08F with Devin Balkcom: This class is just your intro to java programming class. I took AP computer science A, and this really helped me out in the first section of the course. The short assignments are usually pretty easy, and they help you learn the material. The labs are hard. Extremely hard. Expect to spend many many hours on them- at LEAST 10 hours each. You have a week to do them. Start the day you get them. Go to recitation session every week. The section leaders give you lots of hints on how to do the labs. Trust me, you will need help. If you want to take this class \"for fun\", don't, unless you love programming. Overall, a pretty good class, and Balkcom is a good prof.\"",
            "review 22: \"08F with Devin Balkcom: i took this course kind of as a third class, but it turned out to be a lot of time and effort. the coursework centers on the labs, which are take-home programming assignments that can take a lot of time depending on the student. i spent up to 15 or 20 hours on the hardest ones. that said, writing programs was a lot more fun than writing papers or doing problem sets. going to the lab itself in sudikoff was really helpful, the TAs help you with your mistakes and show you how to do some of the tricky parts of the labs. you have to go to \"recitation sessions,\" which are boring and kind of a waste of time. a TA answers questions that you have about the assignments for 1 hour once a week... it doesn't seem like a lot but they were really a pain in the ass. balkcom is pretty good, it's a large class so it's hard to get to know him, but he's fun and nerdy in an endearing way. and he is good at what he does, and is pretty good at explaining the central concepts of Java and CS.\"",
            "review 23: \"08F with Devin Balkcom: Be prepared to do a lot of work, and don't fall behind. This class was challenging, but it wasn't excessively so. It's definitely manageable as long as you don't start at the last minute. Professor Balkcom is amazing, he's incredibly helpful and responsive during class, and is really good at making the lectures interesting. If you're willing to put in a decent amount of work and you like a challenging course, you will love this class as much as I did.\"",
            "review 24: \"08F with Devin Balkcom: I was a transfer student my first term and I had taken one term of introductory computer science at my previous institution which I found easy, so I was not expecting the intense workloads that came with CS5. This is a very tough course for those who have had little or no previous experience with programming, but if your other courses are easy and not very time consuming, I would definitely recommend it. The course is comprised of 5 lab assignments which you are given (and need) a week to do, and somewhere between ten and fifteen short assignments that you are given two or three days to complete. There are two midterms and a final, all of which are graded very fairly and are at times enjoyable. Professor Balkcom used Transformers and other funny examples in his exam questions which made (parts of) the test sort of enjoyable. Professor Balkcom is probably the best professor I have ever had. He is a fantastic lecturer and does very well with even some very dry material. He kept me interested in programming all the way through the course, and tried to give us a broader range of knowledge than even the curriculum demanded. He also explained very well even the most complex of concepts to make them understandable to every kid in class. Professor Balkcom even came to the Lab sessions at times when there were not enough TAs, and was always very helpful and available outside of class. DEFINITELY take this class for your TLA - it's a really useful thing to learn (programming) and Balkcom is the best! Just don't take it with other hard courses, and expect to spend a lot of time in Sudikoff.\"",
            "review 25: \"08F with Devin Balkcom: People seem to absolutely love or absolutely hate CS 5. I was one of the people who absolutely loved it. Beware the people who blast the course, as they're biased, too. I had little experience with CS before this course, and took it partially on a whim. I'm so glad I did, and now I'm considering majoring. I thought that the successful CS people already knew who they were before they arrived at college, but that is not true at all. You don't need to be a CS person, or have programmed before, to enjoy this course. The course is extremely well organized and efficient. Though the lectures are often dry, they gave you the tools to use for the labs, the fun part of the course. I think everyone spends a long time on the labs, either because you find them very difficult or because you enjoy them so much you find yourself doing extra credit. The real reason to take the course is because it's fun. Labs were problem solving, but not in a math way, more in a Legos way. If you're curious, I'd recommend you go for it. Professor Balkcom is awesome. If at all possible, take it with him. He's extremely clear, funny, and relates well with his students. The people who hated the course, for the most part, still loved him. There is the chance that you will hate the course, though. For one, it is a lot of time, and you have to be willing to commit to it. If you procrastinate on labs, they will destroy you. Also, it seems that some peoples' minds just didn't work well with Java. For them, the long hours on the labs were not enjoyable, but painful. There is help available for the labs if you seek it out, and the grading is actually pretty light (you get practically 100% on all of the programming assignments, so it's difficult to do too poorly, though the tests are tough), so worst case scenario is not too bad. Don't take the course if you think it's an intro and therefore it'll be easy. Don't take the course if you think that you should learn something about computers in college and want to gain some familiarity- the skills in this course aren't everyday-practical. Do take this course if you're interested in technology and want to learn to harness the power of computers.\"",
            "review 26: \"07S with Devin Balkcom: Sometimes it was easy to zone out in lectures because Prof. Balkcom is very low-key. But the class was interesting and a different perspective.\"",
            "review 27: \"07S with Devin Balkcom: This is a fun class, not too difficult. Good way to get a TLA. The labs aren't too hard and prof's instructions/section leaders practically tell you how to do them. Just keep up with assignments and labs. Don't buy the textbook-- it's optional, and I haven't used it since the second week of class. All the resources you need are in the lecture notes (typed up in paragraph form and posted online) and the API, available online off of the CS5 page.\"",
            "review 28: \"07S with Devin Balkcom: Unless you have programmed before, do NOT take this class. It will ruin your entire term. There is an unreasonable amount of work, and you will have no time for any of your other classes. This is the absolute WORST class I have taken at dartmouth and I would recomend it to no one. Actually, if you are opposed to fun you might enjoy this course. If you want to ruin your term but spending an outrageous amount of time per week learning a new language, and you put in the work, you will probably get a good grade though. Balkcom assumes that you know whats going on, and from the outset you will be completely confused if you have never programmed. Most importantly, what you learn in this class you will NEVER use. You have to take many more terrible classes like it to actually get to the point where you can implement what you are learning into real life situations.\"",
            "review 29: \"07S with Devin Balkcom: Learned a lot, had a lot of fun, nice to learn something that is immediately applicable.\"",
            "review 30: \"07S with Devin Balkcom: Before taking this class I read a lot of reviews saying that you should only take the class if you want to be a CS major or have coded before, and I ignored them. Big mistake. Prior experience won't actually help you-- the coding and labs are actually fairly easy, but 1/2 of the material on the test is stuff that has absolutely zero application to the coding that you will actually do for the class, so unless you're independently fascinated with computer science, and not just coding, stay far away.\"",
            "review 31: \"07S with Devin Balkcom: Comp sci isn't for everyone, but you should find that out for yourself. There is a good amount of work for this class, but it's not impossible and there are many people you can go talk to for help (section leader, professor, TA, smart friends). The stuff you learn is pretty interesting and you get a real sense of accomplishment after writing a computer program. You just can't get the same feeling from writing a paper about Roman architecture.\"",
            "review 32: \"07S with Devin Balkcom: I'm still not sure how I feel about this course. You spend the first 2/3 of the course learning the Java programming language which is pretty interesting and you learn to write some neat programs. The nice thing about this course is that for the most part, instead of sitting down to study, a lot of the work is hands on and problem solving within your program. On the downside, this can be very time consuming. The TA's were very helpful and I encourage everyone to take advantage of the lab hours. The last 1/3 of the course covers different algorithms and sorting techniques and is very dry and tedious. If you take this course begin your lab assignments the day they are handed out, you'll be thankful for it. Balkcom is a pretty cool character, kinda quirky, but is very enthusiastic about what he does, he's a good guy.\"",
            "review 33: \"07S with Devin Balkcom: Some parts of the tests/labs were a bit more difficult than they had to be. The course does a good job of introducing you to the basic concepts of CS and programming. Be prepared to do a lot of programming work, though actually learning the material usually does not take as long.\"",
            "review 34: \"07S with Devin Balkcom: balkcom is an animated lecturer making it easy to pay attention and learn from him in class. I went into this class with absolutely no programming experience and only faint interest in the subject and now I want to be a CS major\"",
            "review 35: \"07S with Devin Balkcom: So I thought that this class would be an easy A because several dormmates of mine were taking the course, and two of the section leaders lived in the same dorm as I. Unfortunately, with all the extra help I got, it was still a struggle to understand the material and get the assignments done correctly. As a person with absolutely no prior java experience, I was basically lost by the first week. It was a struggle to keep up. Nevertheless, lectures aren't really that essential; most of the learning happens when you're doing the assignments. It's not even necessary to get the text book; I referenced it maybe twice during the quarter. What's really important is to go to your recitation section and not start the labs the night before.\"",
            "review 36: \"07S with Devin Balkcom: Coming into this class I had heard horror stories about how C.S. 5 was difficult and a ton of work, and I had braced myself for the worse. Thus I completely shocked when I actually took this course to find out how mind-numbingly easy it was. Excluding the EC, none of the labs took more than 7-8 hours, and most took only about 4. The Short Assignments are a joke, and only took about 15-20 minutes each. And the Exams were easy for anyone who can program on the fly, as you are given a double-sided cheat sheet, and unlimited time to complete them. Overall this course is so easy, and there are so many ways to boost your grade (thus the reason the median was an A), that I can't imagine how anyone could possibly think this was a hard course. So in conclusion, if you want an incredibly easy way to get a TLA, take this course. Full Disclosure: I am not a CS or Math Major, and had never programmed before taking this course. I did however do all my work on time, which was all that was required to get an A in this course.\"",
            "review 37: \"07S with Devin Balkcom: This was a good way for me to get rid of the TLA requirement, and I had taken the AP CS A, so the first few weeks were a breeze. Into the fourth or fifth week though, it was all new material for me. But there was nothing that I couldn't figure out just from reading the online notes. The professor had said \"Think like a computer\" if we ever ran into a debugging problem and needed to figure out the error - but that is easier said than done if you are not a logical thinker.\"",
            "review 38: \"07S with Devin Balkcom: CS 5 is one of those courses where nothing really makes sense, but somehow it all turns out okay. Prof. Balkcom sometimes (usually) spends most of his lectures explaining things that you won't have to know, except in theory. If you do all the short assignments/labs correctly and promptly (you get second chances to turn in the short assignments and the labs have tons of extra credit) that's how you'll ace the class. go to recitation, and have things explained to you there, study the past tests really well. even if you do poorly on the tests, theres still a lot of chances to do really well in the class.\"",
            "review 39: \"05F with Devin Balkcom: I had absolutely no experience in computer programming, but I did really well and I understand computers a whole lot better now. Professor Balkcom is an awesome prof. I actually did pretty much all of the reading then realized I probably didn't even need to buy the book since EVERYTHING is online. The lab assignments can be challenging but they aren't too bad and both the TAs and prof help if you just blitz them. and in the end you have a bunch of computer programs you can play with and feel like you've actually accomplished something so take this class if you have even a bit of interest in CS or if you just feel embarrassed by the fact that little kiddies these days know how to do so much more than you\"",
            "review 40: \"05F with Devin Balkcom: Having taken some C++ in high school, I think I was a little ahead of some people in the beginning (so I can't really speak for people with no previous experience). However, if you know what a for loop is, as long as you go to class you can ace this course. In the beginning I did the readings (and they helped), but the latter half of the course is mostly from material in class. The notes are all online (huge resource!), which has saved me several times. Basically, you have short assignments due every few days at the beginning of the term (not too hard) - just beware the labs! There are six of them, and most people cannot do them in a single night (plus if you start early, you can get help from the TAs). Overall a great introductory course not focusing so much on comp sci so much as basic programming skills in Java.\"",
            "review 41: \"05F with Devin Balkcom: I really liked this class. It was interesting without being overly difficult and the work was both pertinent and effective.\"",
            "review 42: \"05F with Devin Balkcom: good course but incredible amounts of work. i have never done as much work in my life. it kind of killed my soul, but if you're really into computers, it could be an enjoyable class.\"",
            "review 43: \"05F with Devin Balkcom: Prof. Balkcom is new this year, fresh from CMU building oragami folding robots. He was clearly excited about teaching a new class, and had the expertise necessary to really make a difference. Lectures were sometimes over detailed, but his enthusiasm was great. Alot of work, but worth it.\"",
            "review 44: \"05F with Devin Balkcom: this course is a lot of work, but its really fun and helps you learn the material\"",
            "review 45: \"05F with Devin Balkcom: This class wasn't very difficult and didn't take any more time than your tipical class. Devin was a pretty good prof. He is very enthusiatic. Unfortunately computer science is very boring, so it is hard to make the lectures interesting. The notes online are very helpful (moreso than the book) and all of the test questions are from the online notes. If you don't want to spend the money, you shouldn't buy the book--you don't need it. I started off reading the book and then realized that you don't need to. EVERYTHING you need to know is online.\"",
            "review 46: \"05F with Devin Balkcom: This course is an exceptionally hard introduction to computer science. We dove straight into Java and never looked back. The order of the curriculum is definitely non-standard, but worked fine. BEWARE if you haven't had an programming courses before. It will be easy if you have, or very hard if you haven't. It;s doable, but expect it to be your hardest class that term. Devin was simply awesome. He's young, makes lighthearted anti-GOP jokes, and tries to make the stuff interesting. Get to know him! The lab's are very hard. However, go to all the (4) classes/ (1)section and read the book. You'll do fine. Devin will give you lots of points back if you just give him your tests to regrade.\"",
            "review 47: \"05F with Devin Balkcom: This course is a lot of work-- don't take it unless you really like programming.\"",
            "review 48: \"05F with Devin Balkcom: A good review of basic CS and Java. Interesting for both nubs and teh 1337 h4xor5.\"",
            "review 49: \"05F with Devin Balkcom: He's a good lecturer and a nice guy. About the class: expect to do a lot of work; start the assignments (esp. the labs) early. The TA's are v. helpful if you get stuck though. Some of the labs (esp. Life)are really cool and you'll be SO proud of yourself. This class was a *tremendous* learning experience, more so than any other class i've taken at Dartmouth. TAKE IT!\"",
            "review 50: \"05F with Devin Balkcom: cs 5 requires a lot of time to learn Java, meaning that homework assignments can take forever 10+ hr but it is mostly full proof for you to learn the material. if you're in the sciences, i strongly recommend the course. Balkcom is young and excited about teaching although he did get his facts messed up enough for it to be annoying. there are lots of places for extra credit to raise your grade and homeworks count more than exams and teachers and ta are very very willing to provide help (practically do the work for you) if you seek them out.\""
        ],
        "Robert Drysdale": [
            "review 1: \"09S with Robert Drysdale: When I began this class, I had no bones in my right arm. Taking this class not only drastically improved my nonexistent programming skills but gave me the will to grow bones in my right arm, which has really made life a lot kinder to me. When the list of students in this class was leaked to the school, men and women alike began to flock to me by the second week, not only in Alpha Chi and Sig Delt but while at Foco or walking across the green. It got so bad that I had to shut myself in my room for a while. But I was never bored, for I had my computer in my room. And I had the power to program.\"",
            "review 2: \"09S with Robert Drysdale: Having taken CS in high school, I imagine I had an easier time of it than most. That said, it was still fairly interesting, and I am glad I took the class instead of trying to test out. Lectures can be dry, as code examples often don't translate well, but the prof is engaging and truly interested both in the subject and in teaching. Short assignments every few days were useful to make sure you were on track - they were usually pretty straightforward, but very helpful in terms of figuring out what was considered important. Exams were written, which I find an irritating format, but questions were fair and generally code-based.\"",
            "review 3: \"09S with Robert Drysdale: Before taking this course, I didn't know what I wanted to major in. Now I'm strongly considering majoring in Computer Science. Drysdale was amazing for me. I found about halfway through the course that his lectures were so productive for me, that I remembered almost everything he said in class if I paid attention, and didn't even have to take notes. My review may be skewed; I really enjoyed the class while I realize some of my classmates struggled. However, I encourage everyone to take this class. I feel that the critical thinking skills required are important to most parts of life.\"",
            "review 4: \"09S with Robert Drysdale: Prof. Drysdale presents the material in a very logical format. Lectures are easy to follow as long as one is alert (i.e. not sleep-deprived). Course organization is excellent. Take advantage of lab hours (I wish I had more than I did) and make sure you understand concepts. Students were allowed unlimited (within reason) time on tests, which removed stress and allowed concentration. Coding on paper wasn't too bad, and the tests were easy as long as students understood the concepts (which are definitely worth taking the time to understand, as they're worth large chunks of points on exams). Lecture notes online were thorough and extremely helpful in studying for exams. Cheat sheets (1 page front and back) made exams even more user-friendly. I learned a lot in this class and recommend it without reservation.\"",
            "review 5: \"08S with Robert Drysdale: His lectures are not effective.\"",
            "review 6: \"08S with Robert Drysdale: This class was really hard to sit through & pay attention to. By the end I would end up completely not paying attention and then go over the lecture notes kind of... I don't really recommend this because there was a lot of stuff at the end that I didn't understand that well, but there are lecture notes for every class posted on the website that are VERY helpful. The exams are kind of hard, but fortunately the homework is what counts for most of your grade & it's very possible to get near 100's on all of them\"",
            "review 7: \"08S with Robert Drysdale: NRO this course if you have never had any previous experience with computer science. You'll save yourself a lot of work and pain. NRO takes the pressure off. The exams are very diffiult. Go to the TA's. They will save you.\"",
            "review 8: \"08S with Robert Drysdale: lectures can get pretty tedious when it's just going over how a code accomplishes some task, so don't expect to be fully engaged 100% of the time. though the online notes provided on the cs5 website are AMAZING -- you could skip lectures entirely and not do any of the readings, just read the lecture notes posted online. they are incredibly comprehensive.\"",
            "review 9: \"08S with Robert Drysdale: I've heard that CS5 with Cormen is much more bearable. Take it with him (or anyone but Drysdale!) if you can. I learned NOTHING from his lectures and actually stopped attending them. He posts comprehensive lecture notes online; if you read those, do the assignments, attend small group section meetings, and read the textbook, you'll be fine. (The text is optional, but I found it helpful.) I learned a lot from the TAs in section meetings and the lab. There are a lot of assignments and the course moves quickly, so don't take it if you can't commit to that or if you're just trying to get a TLA.\"",
            "review 10: \"08S with Robert Drysdale: Overall, the course was ok. The notes are online with more detail and homework/exam specific explanations than the in class lectures. Drysdale is a horrible lecturer. It would be better to devote the class time to read and understand the notes online. The TAs were very helpful. If you have programming/CS background, this class is very easy.\"",
            "review 11: \"08S with Robert Drysdale: I would say do not (DO NOT) take this course if you don't have a strong interest in pursuing Computer Science. You will spend hours upon hours of dealing with homework and labs that have very little application to life in the real world and the programming you learn, though hard, is not very useful. Do not look at this as a TAS or TLA, go for a low level ENGS course instead. This class was an incredible waste of time and effort for me.\"",
            "review 12: \"08S with Robert Drysdale: I had never taken CS before, and this class has me hooked. The programming is a lot of fun, and the concepts are awe-inspiring. Can the class be a lot of work? Yes. But can most Dartmouth classes be a lot of work? Yes. If you ever have problems or questions talk to Prof. Drysdale -- he is wonderfully responsive to students.\"",
            "review 13: \"08S with Robert Drysdale: For someone with no previous programming experience, this course was a lot of work. You have short assignments due almost every class so you really have to stay on top of things and can't push work off until the weekends. You end up learning a whole lot though and really understanding the material.\"",
            "review 14: \"04S with Robert Drysdale: CS 5 is a lot of work, anyone will tell you that, but Professor Dysdale made it a better experience. All of his lectures are online so you can pay attention during class instead of just frantically scribbling. Make sure to attend lots of TA sessions and to seriously time manage for this course. However, don't hesitate to go to Professor Drysdale about anything! He is awesome, accomodating, and the sweetest prof. So, if you have to take the class, take it with him!\"",
            "review 15: \"04S with Robert Drysdale: This was probably the hardest class I have taken so far, but also the mosr rewarding. It is sooo much work... don't take with an easy course load or I don't know how you can handle it. I would spend hours each week on the homework assignments, and the amount of time increased as the term went on. I found it interesting when I knew what was going on but that wasn't the majority of the time. I didn't always follow what Drysdale was explaining but that could be because I'm not a CS major. The TAs are awesome though - worship them and GO TO THEIR OFFICE HOURS. I'm glad I took the course, but I'm never EVER taking another CS course again.\"",
            "review 16: \"04S with Robert Drysdale: Professer Drydale is very cool and also very patient and helpful during office hours. And the course was cool, I loved the way i learned an entirely new concept and way of thinking, but it was so hard!!! I had never done any programming before, and I had to work so hard on this class that i basically failed another class because of it!\"",
            "review 17: \"04S with Robert Drysdale: This class was a growing experience for me. Probably the biggest challenge of my academic career, even more so than AP Physics! I passed this class, and I am more proud of that than any of my academic accomplishments before This class will blow your mind, if you are not a math or code oriented person. I am a history major who hasn't taken a whole lot of math, and so for me, this class was a very foreign experience. However, I would not have stuck with it if it weren't for Scot Drysdale. The man is amazing. Not only is he just a really nice guy in class, talking to a group of 60 as if had known them all for years, even asking us \"so, how's your day going so far?\" An incredibly sweet man. He goes slow enough in his lecture that those who are confused are able to ask questions and get some clarity. He even did some funny role playing games to learn about lists. Really great lecturer--made a dry subject interesting. But all of this is nothing compared to his most wonderful quality--patience. I went to see him so much in office hours. He really wanted to see me succeed. He spent so much time with me. I am really greatful for his help. If anyone wants to take this class for a TAS, or just because they thought it might be interesting, like I did, you are in for a challenge. But this challenge is worth it. This class opened my mind so much to a field I had never even considered. If you take this class, make sure you take it with Scot Drysdale.\"",
            "review 18: \"04F with Robert Drysdale: If you've taken AP compsci and did well on the exam this class will probably be boring. But, if you don't go to every class, you'll miss things not covered by the AP and will probably mess up more often on the exams. Homeworks were easy points but exams were a bit harder. If you've programmed before, each homework can be done in a couple hours. If you havn't programmed before this class may be VERY dificult. On one of the exams the high score was 98 and the low was 8. On the final the low was 23.\"",
            "review 19: \"04F with Robert Drysdale: The TAs are very important for this course-- I did not like Scout's teaching style, but in general found that she was readily available to answer questions (the professor was too).\"",
            "review 20: \"04F with Robert Drysdale: CS 5 with Drysdale is one of the more difficult courses I have faced thus far at Dartmouth and for a good 9.5 week stretch I hated the course with a passion. In the end though I am still glad I took the course for several reason, which I will attempt to list in some sort of numerical order: 1. Drysdale is a grand prof. He knows the material, and more importantly he knows how to teach the material to CS and non-cs people. His lectures, which he posts online, are a great resource and incredibly detailed, to the extent that going to class is almost trivial. He gives untimed test, and grades them all by hand for the very next day. The guy has been sighted helping people out in the CS lab at 2 am the night before a problem set is due. ANNND he wheres a fanny pack at all times. 2. Its a really comprehensive class. By the end of 10 weeks, you'll have the basis to understanding almost any interaction with the computer ok I think 2 is enough. Its a good class\"",
            "review 21: \"04F with Robert Drysdale: Exams are hard and homeworks are time consuming. But good lecture notes, friendly prof, and helpful TA's make it all possible.\"",
            "review 22: \"04F with Robert Drysdale: This is a good classif you want an idea of how to program in Java, or an introduction to object oriented programming. But there is a large out of class time commitement required, and the assignments can be very frustrating.\"",
            "review 23: \"04F with Robert Drysdale: this course was lots of work and very fast paced, and i thought it was extremely interesting. you learn to do simple programming in the java language which isn't really all that helpful, but the course teaches you more about how to think in computer language. it's difficult because it is really like learning another language, a very mathematical one. the homework is difficult, but it does a wonderful job of helping you to understand the abstract concepts discussed in class and how to implement them in computer code. i recommend this course if you have some interest in learning how computer programs work. i wouldn't necessarily recommend it if you're just looking to fufill your TAS.\"",
            "review 24: \"04F with Robert Drysdale: do homework and study online notes and you'll do fine.\"",
            "review 25: \"04F with Robert Drysdale: Let me start by saying I already had a limited amount of programming experience before I took this course. Because I already had a bit of experience dealing with programming, I probably had an easier time working with the assignments than some. This is a great course for an analytical thinker, or one who wants to improve said analytical thinking skills without taking, say, math(bleh). The assignments can take anywhere from an hour or two (if you take time to plan out what you want to do and know how to program it) to quite a while (if you're totally lost--in which case you should see a TA or Prof. Drysdale). Prof Drysdale is a good professor; his lectures are pretty representative of what you need to know in the course. You'll definitely do pretty well on the non-programming questions on tests if you're in class. I also hear he's good one-on-one for help, along with most of the TAs. However, because he puts his lecture notes online and because I didn't feel I gained much from going to lecture, I often skipped class. I did just fine in class and on the assignments--everything you need to know is in lecture notes, I don't know how you'd do anything without them--so you might be able to get away with the same. All said, CS5 is a good class--if you have an interest in the subject (I enjoy programming a good deal) then you should do fine. If not, then you can still make do with the help they've got.\"",
            "review 26: \"04F with Robert Drysdale: This course tried to cover too much material in too short a time, and so took up way too much time. I spent easily twenty hours a week on \"short\" assignments, longer homeworks, readings, and studying for tests. \"Short Assignments\" took at least three hours. We all but one of the x-hours and had an hour long recitation section every week, in addition to normal classes. I never felt like I understood the material until weeks after we had been tested on it. I would never recommend this course to anyone, unless they already have a strong background in Java or programming similar to Java.\"",
            "review 27: \"04F with Robert Drysdale: This class was like a rollercoaster. Not like those super cool fun ones though. More like the scary ones that you kick yourself for going on when you realize there's no way out. Don't get me wrong, this is a great class. After the first test, i was pretty happy with my above the median grade. The next class, about 20 people dropped and it was all downhill from there. This is a very fast class that builds on what you learned before. If you don't get something, learn it before the next class. Seriously. If you don't you'll be lost for the next week or so, which will make you have no idea whats going on for the next week after that. The main problem with this class is the grading. There are a lot of short assignments and homeworks, which help you learn the material, but the grading is more or less all or nothing; either your program worked and you got a close to perfect grade, or you couldn't quite get it to work and got little to no credit for workng on it for those 6+ hours. Drysdale was a very good lecturer and helped everyone understand the material as best he could with demonstrartions, examples, and online notes. Like most other sciencey courses, there will be 3 or 4 people who know exactly what they're doing and will whip through assignments when you're still trying to make the program stop yelling at you for acting like you know what you're doing when you know that you have no idea how to even start. That gets frustrating, but it helps to latch on with a few other people in the class and help each other out, because what one person doesn't get, someone else will. This is a great class to take for a challenge, and its amazing the things you can do when you finish the course. If you make it that far.\"",
            "review 28: \"04F with Robert Drysdale: The class wasn't too bad. The homework assignments were very time consuming but I was very happy with them once I was done. The TA's were lifesavers-very helpful and made this class easier to get through. However be prepared to spend hours completing the homeworks for this class. And don't fall behind.\"",
            "review 29: \"04F with Robert Drysdale: Do not let the \"5\" fool you. This is a demanding class. While its difficulty may be debatable, simply putting force the energy needed to pass assignments is a feat in and of itself. The strains of the workload are enhanced by the quality of the lectures. Though they are organized and comprehensive, I found the lectures so boring that I could barely breathe. I ended up zoning out and working on a crossword puzzle. It was quite literally the only way to survive one of those classes. Had lecture notes not been posted online, I would have dropped the course after the first week. The material is interesting, however, and the class's text book does a good job picking up where the professor leaves off. All in all though, unless this is your major, I would not take this course. If you really want to learn Java, buy a book and teach yourself.\"",
            "review 30: \"04F with Robert Drysdale: I learned a lot of useful information in this course, but I spent so much time on it. Because I had no experience with computer science before, the assignments were very difficult for me, especially in the beginning. However, Drysdale had many office hours and lab sessions, in which there was a lot of help available. Overall- great course, but be prepared to work.\"",
            "review 31: \"04F with Robert Drysdale: This is the type of class where you either really understand the material, or just absolutely don't. Drysdale is also great at maintaining a website with extensive lecture notes.\"",
            "review 32: \"04F with Robert Drysdale: I never went to class becuase Drysdales lectures put me straight to sleep. All of the lecture notes are posted on the website so I learned everything from those. The class required a lot of time to get the desired grades but the TAs were extremely helpful and were very accomodating. Exams sometimes were a little too nitpicky but doing hte homework well (this required a lot of time) made up for the points lost on the exams.\"",
            "review 33: \"04F with Robert Drysdale: do not take this class with other time demanding courses. the prof and TAs give a lot of good examples to help you understand the material. The homework assignments are all or nothing, so you WILL spend a lot of time on this class but its and amazing feeling when things click. read the book!! the book is awesome! but better examples are in Prof's notes. great class structure\"",
            "review 34: \"04F with Robert Drysdale: Although it was somewhat time consuming, this class was definitely worth it. I learned a ton! Drysdale is a very effective lecturer and knows his stuff, he makes everything really easy to understand. The HWs were often pretty interesting and really fun to get working and play around with. The exams were very reasonable if you spent a little bit of time reviewing before you took it - we were allowed to bring a crib sheet to every exam, so no memorization needed at all. This class caused me the least stress overall this term, just because the material was made so easy to understand and you knew pretty much exactly what was expected of you. (This varies a little with each grader, and you might lose a couple of \"style\" points here and there, but nothing to damage your grade enough to care).\"",
            "review 35: \"04F with Robert Drysdale: the homeworks takes up most of the time but they are worth doing and help you to understand the material quite well. the professor was amazing and the TA's are helpful.\"",
            "review 36: \"04F with Robert Drysdale: This was the course I took most out of, and I think that, despite the fast pace, it is an excellent introduction to computer science. Professor Scot Drysdale was inspiring, engaged and enthusiastic about his work. He was also easily approachable and ready to offer help. As a whole, I liked the course a lot and I wish I will have at least one other CS class with the same teacher.\"",
            "review 37: \"04F with Robert Drysdale: This course is quite difficult and time consuming. GOTO THE CLASSES!\""
        ],
        "Andrew Campbell": [
            "review 1: \"24S with Andrew Campbell: Great professor really helpful TAs, and the course itself is a very excellent course at Dartmouth. He wants students to succeed, and he tells you how difficult tests are gonna be and what topics you should expect, and also provides enough practice problems to get you all set. I liked his style of teaching as he always made sure he showed you the logical breakdown of each new concept he introduced. He always encourages us to come to class as it's just so important you see the logical analysis of the program to provide a solid basis for the code he is going to write next after that. He was very considerate of his students, had a good amount of office hours, and the TAs were just exceptionally helpful. The recitation was just so great as there were concepts I finally understood during those. The short assignments and labs were pretty long with the latter even longer, so it makes sense to do them well ahead (but the late penalty imo was not bad-- you get .5 points off the score for each day late--that's out of about 30 points for each assignment so going a day late won't really hurt). You need to be prepared to devote time to learning difficult concepts. It's not an easy class, but a very very worthwhile one. For those who haven't taken Cs before, this class is the one to take as one of your decently hard classes, while those with AP would breeze through it. I will note that there are times the profs rushes the end of the class but it helps to go back and rewatch these parts at your own speed. That's what I did and it helped me a lot. God bless!!\"",
            "review 2: \"23S with Andrew Campbell: If you did AP CS in high school this class will be easy. If you don't want to major in CS and want a lab credit, drop your high school credit and take this class. Won't need to pay attention really at all until possibly week 8/9. If you did not take AP CS in high school I would avoid this prof. Take it with Vasanta. He is super confusing.\"",
            "review 3: \"23S with Andrew Campbell: This is definitely a difficult class, but it is NOT impossible to do well in. Structure is 8 short assignments, 4 labs, 3 tests, and 2 exams. Might sound like a lot of testing, but the 3 tests are very chill and simple and they can really boost your grade bc they aren't difficult if you're prepared. GO TO OFFICE HOURS!!! Cannot stress this enough, the TAs are SO helpful! As long as you actually do all of the practice problems on paper, you will do well on the exams. Campbell is a decent instructor, though is not the best at writing fair exams. His questions are often tricky and difficult, though if you understand the practice problems well, you will likely be able to do well. End of the term was super annoying, as he rushed through a lot of content just to finish the term. I suggest taking the class with Vasanta, though you can do well with Campbell if you go to office hours a lot and study a lot on your own time.\"",
            "review 4: \"23S with Andrew Campbell: I really like Campbell. He can be confusing at certain times, but he is a very genuine human being. He really cares about his students. If you go to his office hours and to one of his coffee hours, you will certainly create a good relationship with him. I recommend taking this class with him!\"",
            "review 5: \"23S with Andrew Campbell: B+ Median. Try to take this class with Vasanta. Campbell is not the greatest lecturer. Made this class unnecessarily hard.\"",
            "review 6: \"23S with Andrew Campbell: DO NOT TAKE THIS COURSE WITH CAMPBELL. IT WAS THE MOST CONFUSING TIME OF MY LIFE. Not to mention that he changed the curve after the final when I was supposed to get a B and then got a C+ and he didnt tell anyone. My least favorite class at Dartmouth hands down, he made it miserable, although he is a very nice guy.\"",
            "review 7: \"22S with Andrew Campbell: He literally is the worst teacher. So save yourself and take it with Vasanta if you can. He wastes time in class by telling jokes that are not funny and has to rush through complex material to make up for his lack of time management.\"",
            "review 8: \"22S with Andrew Campbell: BEST PROF EVER!!! love this guy. take cs1 with Andrew Campbell if you can, you won't regret it. very personable and great at explaining complex\""
        ],
        "Hany Farid": [
            "review 1: \"15F with Hany Farid: Incredible class. I would recommend it to anyone. Farid may be the best professor I have ever had. The work load isn't terrible, but there is certainly work. Lots of extra help available from TAs though. This is a class you must take while at Dartmouth\"",
            "review 2: \"14S with Hany Farid: Course: This was an AMAZING class! I thought that the pacing was very reasonable, even a bit slow, which was nice. I came into this class knowing literally NOTHING about programming, so I thought I would be at a disadvantage, but my lack of experience didn't hurt me at all. Prof. Farid doesn't assume any prior knowledge at all. Professor: Prof. Farid is an incredible professor. He is super clear, funny, receptive to questions, and makes the class feel small despite its large size. I have nothing but good things to say about him. He's also very accessible at office hours, and he answers emails at lightning speed. And he isn't full of himself either. Workload: Here's the basic breakdown: 9 \"Short Assignments\" -- usually short programming assignments; usually due the next class day. 4 Labs -- longer programming assignments; usually get over a week to do them. Other than that there isn't a whole lot to do. I found it useful to study over my notes (and the lecture notes posted online) after every class, just to solidify everything. (And because CS is cumulative, this is important and saves time in the long run.) Some people found the workload to be crazy, but I didn't think that was the case. Here's what I think is the key: DON'T START ASSIGNMENTS THE NIGHT BEFORE THEY ARE DUE! That's super stressful, and it makes your brain turn to mush. And programming is hard when your brain has gone to mush. I found that the assignments took a much shorter amount of time when I started them early.\"",
            "review 3: \"14S with Hany Farid: Course: This is a class you need to take before graduation. Take it as your TLA. Professor: Clear and fair, and a very cool person too. Workload: This is computer science. What else do you expect? 9 short assignments and 4 lab assignments (usually takes your entire weekends). Takes a lot of time for sure.\"",
            "review 4: \"14S with Hany Farid: Course: Absolutely fantastic course with Farid. Best class so far. Professor: Farid is phenomenal - funny, smart, interesting, and good lecturer Workload: A lot of work, but not too bad - just make sure you start studying early and you do your labs before the night before it's due\"",
            "review 5: \"13S with Hany Farid: Course: Course was great. Very good introduction to CS. It was well paced, spread out, and very reasonable. Professor: The best professor I have had at Dartmouth. Probably the reason I am considering majoring Workload: Definitely manageable, but pace is very fast. Need to stay on top of things but nothing absurd.\"",
            "review 6: \"13S with Hany Farid: Decided to become a Comp Sci major after taking this class with Farid! Coursework is reasonable, 1 lab assignment (about 4 - 6 hours) with 1 - 3 short assignments (can take anywhere between 15 minutes and 2 hours) every week. 1 midterm and 1 final. Workload is manageable but make sure to stay on top of it since there are always assignments due every 3 days. TAs and prof very available to help outside of class if you can't figure them out on your own. The material is very interesting and Prof. Farid does an excellent job of motivating students to pursue further studies in CS by expanding the lectures into the application of the concepts we were learning in class. Highly recommended.\""
        ],
        "Prasad Jayanti": [
            "review 1: \"17F with Prasad Jayanti: Great Professor, teaches at a slow pace, Jayanti really tries to get to know all his students and answer any questions you may have\"",
            "review 2: \"17F with Prasad Jayanti: Jayanti is great. Very engaging, which is needed considering the size of the class. Office hours helpful but TAs not always reliable. It's pretty hard, but really interesting\"",
            "review 3: \"17F with Prasad Jayanti: I'm only a freshman but I know that I will be utterly shocked if any professor comes close to the genuine enthusiasm Jayanti showed for his students, his TAs, and his pure love of learning, teaching, and computer science. Take Jayanti's course. I will never take another CS class, but I am so grateful to have been taught by such a happy and kind man. He is an amazing professor.\"",
            "review 4: \"17F with Prasad Jayanti: Prof Jayanti is the best teacher I have ever had. He is so dedicated and easygoing. He opens extra office hours just to make sure everyone knows the basics. However, the class is hard especially for the fall term because there are so many people who have years of experience of CS in high school take the course. They make the curve steeper. For the two midterms, the class's performance was so polarized that half of the students were above 80+, while the other half was around 60, which made our mean around 10 marks lower than the median. I don't recommend people who did not have CS experience before take it in the fall term- you will feel very left behind even for the very first few weeks because your peers already doing this for years.\"",
            "review 5: \"17F with Prasad Jayanti: 100% do not recommend taking this course in the fall if you do not have prior CS experience. You'll feel left behind really early on and will have to work a lot harder than everyone else to achieve anywhere near the median. Don't let the median fool you either; there are two medians for this class -- one is those with experience, one is without, without a lot of people in the middle range. Many people will drop the class and the disparities between experience and inexperienced will only widen as the term goes on. I (thankfully) NROed this class with the advice of my tutor, which is the only reason I stuck with this course until the end. That being said, Jayanti is an enthusiastic and engaging prof.\"",
            "review 6: \"17F with Prasad Jayanti: As someone who was always strong in math in high school, I didn't think this class would be too terrible (I took it freshman fall). But CS1 ended up really bringing down my GPA because I approached it the wrong way. Tips: definitely set an NRO limit, don't take it freshman fall if you have no prior CS experience (a lot of people who took AP compsci in high school take this class freshman fall to get the pre-req out of the way for the major, which makes the curve on exams harder), and don't take it with Jayanti if you have no experience. Although Jayanti gave engaging lectures and was always very enthusiastic, I've heard that other profs are much easier graders. Also, the B+ median can be misleading. I talked to my dean, and she said that tons of students drop the class after the first one or two exams because they did so poorly. All that said, I would still recommend taking CS1 at some point because it's a super useful class, and I learned a lot - just make sure you approach it the right way if you're not already a CS person.\""
        ],
        "Wojciech Jarosz": [
            "review 1: \"21S with Wojciech Jarosz: I haven't ever had Vasanta, so I can't speak to her teaching, but if you end up in Prof. Jarosz's class instead, there is no need to fear! He was very responsive to questions, very descriptive in class, and definitely available on Slack for assignment questions (alongside the TAs). With grading, the class is pretty standardized with the other sections so it'll be generally what you expect. Reach out for help if you get stuck (early so that you definitely receive an answer in time) and you'll be just fine!\""
        ],
        "Kristen McNall": [
            "review 1: \"03S with Kristen McNall: this was my first cs class and it would have been fantastic, except that i took it with mcnall. whenever i went to lecture, i either fell asleep or got more confused. the homeworks can be fun but they take about 5 times as long if you try to do them on your own rather than in the cs lab where you can ask the ta's questions. the lecture notes for the class are very clear, and so is the book, so just take the class with cormen, use the ta's, and enjoy.\""
        ]
    }
}